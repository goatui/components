{"version":3,"sources":["tokens/_color.scss","theme.scss"],"names":[],"mappings":"AA8NA;AAAA;AAAA;AAMA;AAAA;AAAA;AAQA;AAAA;AAAA;AASA;AAAA;AAAA;AA8BA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAKA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAUA;AAAA;AAAA;AC/XQ;AAER;EAEI;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;;AAIJ;EACE;;;AAGF;EAEI;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA","file":"theme.css","sourcesContent":["@use \"sass:map\";\n\n$colors: (\n  black: (\n    100: #000000,\n  ),\n  blue: (\n    10: #edf5ff,\n    20: #d0e2ff,\n    30: #a6c8ff,\n    40: #78a9ff,\n    50: #4589ff,\n    60: #0f62fe,\n    70: #0043ce,\n    80: #002d9c,\n    90: #001d6c,\n    100: #001141,\n  ),\n  cool-gray: (\n    10: #f2f4f8,\n    20: #dde1e6,\n    30: #c1c7cd,\n    40: #a2a9b0,\n    50: #878d96,\n    60: #697077,\n    70: #4d5358,\n    80: #343a3f,\n    90: #21272a,\n    100: #121619,\n  ),\n  coolGray: (\n    10: #f2f4f8,\n    20: #dde1e6,\n    30: #c1c7cd,\n    40: #a2a9b0,\n    50: #878d96,\n    60: #697077,\n    70: #4d5358,\n    80: #343a3f,\n    90: #21272a,\n    100: #121619,\n  ),\n  cyan: (\n    10: #e5f6ff,\n    20: #bae6ff,\n    30: #82cfff,\n    40: #33b1ff,\n    50: #1192e8,\n    60: #0072c3,\n    70: #00539a,\n    80: #003a6d,\n    90: #012749,\n    100: #061727,\n  ),\n  gray: (\n    10: #f4f4f4,\n    20: #e0e0e0,\n    30: #c6c6c6,\n    40: #a8a8a8,\n    50: #8d8d8d,\n    60: #6f6f6f,\n    70: #525252,\n    80: #393939,\n    90: #262626,\n    100: #161616,\n  ),\n  green: (\n    10: #defbe6,\n    20: #a7f0ba,\n    30: #6fdc8c,\n    40: #42be65,\n    50: #24a148,\n    60: #198038,\n    70: #0e6027,\n    80: #044317,\n    90: #022d0d,\n    100: #071908,\n  ),\n  magenta: (\n    10: #fff0f7,\n    20: #ffd6e8,\n    30: #ffafd2,\n    40: #ff7eb6,\n    50: #ee5396,\n    60: #d02670,\n    70: #9f1853,\n    80: #740937,\n    90: #510224,\n    100: #2a0a18,\n  ),\n  orange: (\n    10: #fff2e8,\n    20: #ffd9be,\n    30: #ffb784,\n    40: #ff832b,\n    50: #eb6200,\n    60: #ba4e00,\n    70: #8a3800,\n    80: #5e2900,\n    90: #3e1a00,\n    100: #231000,\n  ),\n  purple: (\n    10: #f6f2ff,\n    20: #e8daff,\n    30: #d4bbff,\n    40: #be95ff,\n    50: #a56eff,\n    60: #8a3ffc,\n    70: #6929c4,\n    80: #491d8b,\n    90: #31135e,\n    100: #1c0f30,\n  ),\n  red: (\n    10: #fff1f1,\n    20: #ffd7d9,\n    30: #ffb3b8,\n    40: #ff8389,\n    50: #fa4d56,\n    60: #da1e28,\n    70: #a2191f,\n    80: #750e13,\n    90: #520408,\n    100: #2d0709,\n  ),\n  teal: (\n    10: #d9fbfb,\n    20: #9ef0f0,\n    30: #3ddbd9,\n    40: #08bdba,\n    50: #009d9a,\n    60: #007d79,\n    70: #005d5d,\n    80: #004144,\n    90: #022b30,\n    100: #081a1c,\n  ),\n  warm-gray: (\n    10: #f7f3f2,\n    20: #e5e0df,\n    30: #cac5c4,\n    40: #ada8a8,\n    50: #8f8b8b,\n    60: #726e6e,\n    70: #565151,\n    80: #3c3838,\n    90: #272525,\n    100: #171414,\n  ),\n  warmGray: (\n    10: #f7f3f2,\n    20: #e5e0df,\n    30: #cac5c4,\n    40: #ada8a8,\n    50: #8f8b8b,\n    60: #726e6e,\n    70: #565151,\n    80: #3c3838,\n    90: #272525,\n    100: #171414,\n  ),\n  white: (\n    0: #ffffff,\n  ),\n  yellow: (\n    10: #fcf4d6,\n    20: #fddc69,\n    30: #f1c21b,\n    40: #d2a106,\n    50: #b28600,\n    60: #8e6a00,\n    70: #684e00,\n    80: #483700,\n    90: #302400,\n    100: #1c1500,\n  ),\n  new-purple: (\n    10: #fff1f1,\n    20: #F2CAFD,\n    30: #E197FB,\n    40: #C662F5,\n    50: #A93BEC,\n    60: #7F00E0,\n    70: #6200C0,\n    80: #4900A1,\n    90: #330081,\n    100: #24006B,\n  ),\n  new-teal: (\n    10: #F3FEFD,\n    20:#EFFEFD,\n    30:#E0FCFD,\n    40:#CFF5F9,\n    50:#C0EAF3,\n    60:#AADCEC,\n    70:#7CB2CA,\n    80:#5589A9,\n    90:#366388,\n    100:#204671\n  )\n);\n\n@function getColor($colorName, $grade) {\n  @return map.get(map.get($colors, $colorName), $grade);\n}\n\n@mixin cloneColor($to, $from) {\n  $colors: map-merge($colors, ($to: map.get($colors, $from))) !global;\n}\n\n\n@mixin referColor($to, $from) {\n  $toMap: ();\n  @for $i from 1 through 10 {\n    $toMap: map-merge($toMap, (($i*10): var(--color-#{$from}-#{$i * 10}, getColor($from, $i * 10))));\n  }\n\n  $colors: map-merge($colors, ($to: $toMap)) !global;\n}\n\n\n/*\n * Theme colors\n */\n@include cloneColor(brand-primary, purple);\n@include cloneColor(brand-secondary, teal);\n\n/*\n * Application colors\n */\n@include referColor(neutral, gray);\n@include referColor(primary, blue);\n@include referColor(secondary, warmGray);\n\n\n/*\n * Alert colors\n */\n@include cloneColor(info, blue);\n@include cloneColor(success, green);\n@include cloneColor(warning, yellow);\n@include cloneColor(error, red);\n\n\n/*\n * Tokens for developers\n */\n$color-css-variables: ();\n$dark-color-css-variables: ();\n\n@each $colorName, $colorMap in $colors {\n  @each $weight, $value in $colorMap {\n    $map: ();\n    $map: map-merge($map, (--color-#{$colorName}-#{$weight}: $value));\n    @if $weight == 60 {\n      $map: map-merge($map, (--color-#{$colorName}: $value));\n    }\n    $color-css-variables: map-merge($color-css-variables, $map);\n  }\n}\n\n@mixin defineVariable($key, $value, $darkValue: \"\") {\n  $color-css-variables: map-merge($color-css-variables, ($key: $value)) !global;\n  @if $darkValue != \"\" {\n    $dark-color-css-variables: map-merge($dark-color-css-variables, ($key: $darkValue)) !global;\n  }\n}\n\n@include defineVariable(--color-white, getColor(white, 0));\n@include defineVariable(--color-black, getColor(black, 100));\n@include defineVariable(--color-dark, getColor(black, 100), getColor(white, 0));\n@include defineVariable(--color-light, getColor(white, 0), getColor(black, 100));\n@include defineVariable(--border-color, getColor(neutral, 50));\n\n/*\n * Default page background;\n * UI Shell base color\n */\n@include defineVariable(--background, getColor(white, 0), getColor(neutral, 100));\n@include defineVariable(--ui-01, getColor(neutral, 20), getColor(neutral, 80));\n\n/*\nContainer background on $ui-01;\n`Light` variant background\n */\n@include defineVariable(--ui-02, getColor(white, 0), getColor(neutral, 80));\n\n/*\nSubtle border;\nTertiary background\n */\n@include defineVariable(--ui-03, getColor(neutral, 20), getColor(neutral, 60));\n\n\n@include defineVariable(--ui-04, getColor(neutral, 50), getColor(neutral, 10));\n\n@include defineVariable(--background-inverse, getColor(neutral, 80), getColor(neutral, 10));\n/**\nPrimary text;\nBody copy;\nHeaders;\nHover text color for --text-secondary\n */\n@include defineVariable(--text-primary, getColor(neutral, 100), getColor(neutral, 10));\n\n/**\nSecondary text;\nInput labels\n */\n@include defineVariable(--text-secondary, getColor(neutral, 70), getColor(neutral, 30));\n\n/**\nPlaceholder text\n */\n@include defineVariable(--text-placeholder, getColor(neutral, 40), getColor(neutral, 60));\n\n/**\nText on interactive colors\n */\n@include defineVariable(--text-04, getColor(white, 0), getColor(white, 0));\n\n\n/**\nTertiary text;\nHelp text\n */\n@include defineVariable(--text-05, getColor(neutral, 60), getColor(neutral, 50));\n\n/**\nInverse text color\n */\n@include defineVariable(--text-inverse, getColor(white, 0), getColor(neutral, 100));\n\n/*\nDefault input fields;\nFields on $backgrounds\n */\n@include defineVariable(--field-01, getColor(neutral, 10), getColor(neutral, 90));\n@include defineVariable(--field-02, getColor(white, 0), getColor(neutral, 80));\n\n/*\nSelected UI elements\n */\n@include defineVariable(--selected-ui, getColor(neutral, 20), getColor(neutral, 80));\n\n/**\n* Disabled fields;\n* Disabled backgrounds;\n* Disabled border\n*/\n@include defineVariable(--disabled-01, getColor(neutral, 10), getColor(neutral, 90));\n\n/**\n* Disabled elements on $disabled-01;\n* Disabled label;\n* Disabled text on $disabled-01;\n* Disabled icons;\n* Disabled border\n*/\n@include defineVariable(--text-disabled, getColor(neutral, 30), getColor(neutral, 70));\n@include defineVariable(--border-disabled, getColor(neutral, 30), getColor(neutral, 70));\n\n/**\n* Disabled text on $disabled-02;\n* Disabled icons on $disabled-02\n*/\n@include defineVariable(--disabled-03, getColor(neutral, 50), getColor(neutral, 60));\n\n/**\n* Primary links;\n* Ghost button\n*/\n@include defineVariable(--link-01, getColor(primary, 60));\n\n/**\nSecondary link color for lower contrast backgrounds\n */\n@include defineVariable(--link-02, getColor(primary, 60));\n\n@include defineVariable(--hover-primary, getColor(primary, 60));\n@include defineVariable(--hover-primary-text, getColor(primary, 70));\n\n@include defineVariable(--visited-link, getColor(purple, 60), getColor(purple, 40));\n\n/**\n* Secondary link color for lower contrast backgrounds\n*/\n@include defineVariable(--link-02, getColor(primary, 40));\n\n@include defineVariable(--icon-01, getColor(neutral, 100), getColor(neutral, 10));\n@include defineVariable(--icon-02, getColor(neutral, 70), getColor(neutral, 30));\n\n\n@include defineVariable(--hover-ui, getColor(neutral, 10), getColor(neutral, 90));\n@include defineVariable(--active-ui, getColor(neutral, 30), getColor(neutral, 30));\n\n@include defineVariable(--border-subtle-00, getColor(neutral, 30), getColor(neutral, 30));\n\n@include defineVariable(--border-strong-01, getColor(neutral, 50), getColor(neutral, 60));\n\n@include defineVariable(--danger-01, getColor(red, 60));\n\n@include defineVariable(--danger-02, getColor(red, 60), getColor(red, 50));\n\n@include defineVariable(--support-error, getColor(error, 60), getColor(error, 50));\n@include defineVariable(--support-success, getColor(success, 60), getColor(success, 40));\n@include defineVariable(--support-warning, getColor(warning, 30), getColor(warning, 30));\n@include defineVariable(--support-info, getColor(info, 70), getColor(info, 50));\n\n@include defineVariable(--support-error-inverse, getColor(error, 50), getColor(error, 60));\n@include defineVariable(--support-success-inverse, getColor(success, 40), getColor(success, 50));\n@include defineVariable(--support-warning-inverse, getColor(warning, 30), getColor(warning, 30));\n@include defineVariable(--support-info-inverse, getColor(info, 50), getColor(info, 70));\n\n\n@each $color in [gray, blue, green, red, yellow, primary, success, info, warning, error] {\n  @include defineVariable(--tag-background-#{$color}, getColor($color, 20), getColor($color, 80));\n  @include defineVariable(--tag-hover-#{$color}, getColor($color, 30), getColor($color, 70));\n  @include defineVariable(--tag-color-#{$color}, getColor($color, 80), getColor($color, 30));\n}\n","@import \"css-variables\";\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');\r\n\r\n:root {\r\n  @each $name, $value in $css-variables {\r\n    #{$name}: #{$value};\r\n  }\r\n}\r\n\r\nhtml {\r\n  color: var(--text-primary);\r\n}\r\n\r\nhtml[data-theme=\"dark\"] {\r\n  @each $name, $value in $dark-color-css-variables {\r\n    #{$name}: #{$value};\r\n  }\r\n}\r\n"]}