@import "../../../globalStyles/commons";

$header-height: var(--header-height, 3rem);
$header-background-dark: var(--header-background-dark, var(--header-background));
:host {
  display: block;
}

.header-container {
  display: flex;
  align-items: center;
  justify-content: center;
}

.header {
  height: $header-height;
  width: 100%;
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  align-items: center;

  .left-section {
    justify-self: flex-start;
  }
  .center-section {
    justify-self: center;
  }
  .right-section {
    justify-self: flex-end;
  }

  .section {
    display: flex;
    align-items: center;
    height: 100%;

    slot::slotted(*) {
      display: flex;
      align-items: center;
      height: 100%;
    }
  }

  &.float {
    margin: v(--spacing-05);
    border-radius: v(--border-radius);
    border: 1px solid v(--layer-accent-01);
    box-shadow: v(--shadow-md);
  }
}

/**
  * Color Variants
  */
@each $color in [primary, secondary, success, info, warning, error, brand-primary, brand-secondary] {
  :host([color="#{$color}"]) {
    background: #{v(--color-#{$color})};
  }
}

:host([color="light"]) {
  background: v(--color-white);
}


:host([color="dark"]) {
  background: v(--color-black);
}



/*




.header-content {
  box-sizing: border-box;
  display: flex;
  width: 100%;

  .section {
    display: flex;
    align-items: center;
  }

  .left-section {
    flex: 1;
  }

  .right-section {
    slot::slotted(*) {
      height: 100%;
      display: flex;
      align-items: center;
      gap: var(--header-action-gap, 0);
    }
  }

  --dropdown-height: 100%;
  --button-height: 100%;
}

:host(.actions-separated) .header-content {
  --header-action-gap: #{v(--spacing-02)};
}
:host(:not(.actions-separated)) .header-content {
  --button-border-radius: none;
}

:host(.border) .header {
  border-bottom: 1px solid var(--border-strong-01)
}



*/
