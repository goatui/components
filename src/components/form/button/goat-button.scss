@import "../../../styles/scss/commons";
@import "./button-utils";


:host {
  display: inline-block;
  --button-border-style: solid;
}

.button {
  box-sizing: border-box;
  display: flex;
  align-items: center;
  flex-direction: row;
  cursor: pointer;
  width: 100%;
  border: 0.0625rem var(--button-border-style) transparent;
  border-radius: v(--border-radius);
  gap: v(--space-2);

  .slot-container {
    width: 100%;
    display: none;
  }

  &.has-content .slot-container {
    display: block;
  }
}


/**
  * SIZES
  */
.button.size-sm, .button.size-small {
  padding: removeBorder(0.5);
  @include font-style(text-sm);
  font-weight: v(--font-weight-medium);

  &.has-content {
    padding: removeBorder(0.5) removeBorder(0.875);
  }
}


.button.size-md, .button.size-medium {
  padding: removeBorder(0.625);
  @include font-style(text-sm);
  font-weight: v(--font-weight-medium);

  &.has-content {
    padding: removeBorder(0.625) removeBorder(1.125);
  }
}

.button.size-lg, .button.size-large {
  padding: removeBorder(0.625);
  @include font-style(text-md);
  font-weight: v(--font-weight-medium);

  &.has-content {
    padding: removeBorder(0.625) removeBorder(1);
  }
}

.button.size-xl {
  padding: removeBorder(0.75);
  @include font-style(text-md);
  font-weight: v(--font-weight-medium);

  &.has-content {
    padding: removeBorder(0.75) removeBorder(1.25);
  }
}

.button.size-xxl {
  padding: removeBorder(1);
  @include font-style(text-lg);
  font-weight: v(--font-weight-medium);

  &.has-content {
    padding: removeBorder(1) removeBorder(1.75);
  }
}

/**
  * Variants
  */
@each $color in [primary, info, success, warning, error] {
  .button.color-#{$color} {
    &.variant-default {
      @include buttonVariant($color);
    }

    &.variant-light {
      @include buttonLight($color);
    }

    &.variant-link {
      @include buttonLink($color);
    }

    &.variant-outline {
      @include buttonOutline($color);
    }
  }
}

@each $color in [secondary] {
  .button.color-#{$color} {
    &.variant-default {
      @include buttonVariant($color, true);
    }

    &.variant-light {
      @include buttonLight($color);
    }

    &.variant-link {
      @include buttonLink($color);
    }

    &.variant-outline {
      @include buttonOutline($color);
    }
  }
}

.button.color-dark {
  &.variant-default {
    @include buttonVariant(dark);
  }

  &.variant-light {
    @include buttonLight(dark);
  }

  &.variant-link {
    @include buttonLink(dark);
  }

  &.variant-outline {
    @include buttonOutline(dark);
  }
}


:host-context([data-theme="dark"]) .button.color-dark {


  &.variant-link {
    @include buttonLink(light);
  }

  &.variant-outline {
    @include buttonOutline(light);
  }
}

.button.has-focus:not(.active) {
  @include focus-ring;
}

.button.block {
  display: block;

  .spinner {
    margin: auto;
  }
}

.button.icon-end {
  flex-direction: row-reverse;
}


