@import "../../../styles/scss/commons";

@function removeBorder($width) {
  @return #{($width*1 - 0.0625)}rem;
}


:host {
  display: inline-block;
  --button-border-style: solid;
  --button-border-radius: #{v(--border-radius)};
}

.button {
  height: 100%;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  flex-direction: row;
  cursor: pointer;
  width: 100%;
  border: 0.0625rem var(--button-border-style) transparent;
  border-radius: var(--button-border-radius);
  gap: v(--spacing-2);
  outline: none;

  .slot-container {
    width: 100%;
    display: none;
  }

  &.has-content .slot-container {
    display: block;
  }
  &.has-focus {
    border-style: solid;
  }
}


/**
  * SIZES
  */
.button.size-sm, .button.size-small {
  padding: removeBorder(0.5);
  @include font-style(text-sm);
  font-weight: v(--font-weight-medium);

  &.has-content {
    padding: removeBorder(0.5) removeBorder(0.875);
  }
}


.button.size-md, .button.size-medium {
  padding: removeBorder(0.625);
  @include font-style(text-sm);
  font-weight: v(--font-weight-medium);

  &.has-content {
    padding: removeBorder(0.625) removeBorder(1.125);
  }
}

.button.size-lg, .button.size-large {
  padding: removeBorder(0.625);
  @include font-style(text-md);
  font-weight: v(--font-weight-medium);

  &.has-content {
    padding: removeBorder(0.625) removeBorder(1);
  }
}

.button.size-xl {
  padding: removeBorder(0.75);
  @include font-style(text-md);
  font-weight: v(--font-weight-medium);

  &.has-content {
    padding: removeBorder(0.75) removeBorder(1.25);
  }
}

.button.size-xxl {
  padding: removeBorder(1);
  @include font-style(text-lg);
  font-weight: v(--font-weight-medium);

  &.has-content {
    padding: removeBorder(1) removeBorder(1.75);
  }
}

.button.disabled {
  cursor: not-allowed;
}


.button.variant-default {
  color: var(--button-text-color, var(--private-button-text-color, v(--text-04)));

  background: var(--button-color, var(--private-button-color));
  border-color: var(--button-color, var(--private-button-color));


  &:hover {
    background: var(--button-color-hover, var(--private-button-color-hover));
    border-color: var(--button-color-hover, var(--private-button-color-hover));
  }

  &.active, &.selected {
    background: var(--button-color-active, var(--private-button-color-active));
    border-color: var(--button-color-active, var(--private-button-color-active));
    color: var(--button-text-color-active, var(--button-text-color, var(--private-button-text-color-active, v(--text-04))));
  }

  &.has-focus:not(.active) {
    border-color: v(--color-white);
    @include focus-ring(var(--button-color-focus, v(--color-primary)));
  }

  &.disabled {
    color: v(--disabled-03);
    background: v(--disabled-02) !important;
    border-color: v(--disabled-02) !important;
    &.has-focus:not(.active) {
      @include focus-ring(var(--button-color-focus, v(--color-neutral)));
    }
  }
}

.button.variant-light {
  color: var(--button-light-text-color, var(--button-color, var(--private-button-color)));

  background: var(--button-light-color, var(--private-button-light-color));
  border-color: var(--button-color, var(--private-button-color));

  &:hover {
    background: var(--button-light-color-hover, var(--private-button-light-color-hover));
  }

  &.active, &.selected {
    background: var(--button-color, var(--private-button-color));
    border-color: var(--button-color, var(--private-button-color));
    color: var(--button-text-color-active, var(--button-text-color, var(--private-button-text-color-active, v(--text-04))));
  }

  &.has-focus:not(.active) {
    border-color: v(--color-white);
    @include focus-ring(var(--button-color-focus, v(--color-primary)));
  }

  &.disabled {
    color: v(--disabled-03);
    background: v(--disabled-02) !important;
    border-color: v(--disabled-02) !important;
    &.has-focus:not(.active) {
      @include focus-ring(var(--button-color-focus, v(--color-neutral)));
    }
  }
}

.button.variant-outline {
  color: var(--button-color, var(--private-button-color));
  background: transparent;
  border-color: var(--button-color, var(--private-button-color));

  &:hover {
    color: v(--color-white);
    background: var(--button-color, var(--private-button-color));
  }

  &.active, &.selected {
    background: var(--button-color-active, var(--private-button-color-active));
    border-color: var(--button-color-active, var(--private-button-color-active));
    color: var(--button-text-color-active, var(--button-text-color, var(--private-button-text-color-active, v(--text-04))));
  }

  &.has-focus:not(.active) {
    background: var(--button-color, var(--private-button-color));
    border-color: white;
    color: v(--color-white);
    @include focus-ring(var(--button-color-focus, v(--color-primary)));
  }

  &.disabled {
    color: v(--disabled-03) !important;
    background: transparent !important;
    border-color: v(--disabled-02) !important;
    &.has-focus:not(.active) {
      @include focus-ring(var(--button-color-focus, v(--color-neutral)));
    }
  }
}

.button.variant-ghost {
  color: var(--button-ghost-text-color, var(--button-color, var(--private-button-ghost-text-color, v(--private-button-color))));

  background: transparent;
  border-color: transparent;

  &:hover {
    color: var(--button-ghost-text-color-hover, var(--button-color-hover, var(--private-button-ghost-text-color-hover, var(--private-button-color-hover))));
    background: v(--hover-ui);
  }

  &.active, &.selected {
    color: var(--button-ghost-text-color-active, var(--button-color-active, var(--private-ghost-text-color-active,var(--private-button-color-active))));
    background: v(--active-ui);
  }

  &.has-focus:not(.active) {
    @include focus-ring(var(--button-color-focus, v(--color-primary)));
  }

  &.disabled {
    cursor: not-allowed;
    color: v(--disabled-03) !important;
    background: transparent !important;
    border-color: transparent !important;
    &.has-focus:not(.active) {
      @include focus-ring(var(--button-color-focus, v(--color-neutral)));
    }
  }

}


/**
  * Variants
  */
@each $color in [primary, success, error, info, warning] {
  .button.color-#{$color} {
    --private-button-color: #{v(--color-#{$color}-60)};
    --private-button-color-hover: #{v(--color-#{$color}-70)};

    --private-button-light-color: #{v(--color-#{$color}-20)};
    --private-button-light-color-hover: #{v(--color-#{$color}-30)};

    --private-button-color-active: #{v(--color-#{$color}-80)};
  }
}

.button.color-secondary {
  --private-button-color: #{v(--color-secondary-80)};
  --private-button-color-hover: #{v(--color-secondary-70)};

  --private-button-ghost-text-color: #{v(--text-01)};
  --private-button-ghost-text-color-hover: #{v(--text-01)};
  --private-button-ghost-text-color-active: #{v(--hover-ui)};

  --private-button-light-color: #{v(--color-secondary-30)};
  --private-button-light-color-hover: #{v(--color-secondary-40)};

  --private-button-color-active: #{v(--color-secondary-60)};
}


:host([block]) {
  display: block;

  .spinner {
    margin: auto;
  }
}

.button.icon-end {
  flex-direction: row-reverse;
}


