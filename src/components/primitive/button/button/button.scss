@import "../../../../globalStyles/commons";

/**
 * @prop --goat-button-color: Button filling color.
 * @prop --goat-button-color-light: Button filling color for light variant.
 * @prop --goat-button-color-hover: Button filling color on hover.
 * @prop --goat-button-color-active: Button filling color on active.
 * @prop --goat-button-support-contrast-color: Button support color (text or border). Should be white or black based on weight of button filling color.
 */
:host {
  display: inline-block;


  --goat-button-border-width: var(--goat-theme-button-border-width);

  /**
   * @prop --goat-button-border-radius: Button border radius.
   * @prop --goat-theme-button-border-radius: Theme level button border radius. (applies to all buttons)
   */
  --goat-button-border-radius: var(--goat-theme-button-border-radius, #{v(--border-radius)});

  /**
   * @prop --goat-button-border-style: Button border style.
   * @prop --goat-theme-button-border-style: Theme level button border style. (applies to all buttons)
   */
  --goat-button-border-style: var(--goat-theme-button-border-style, solid);

  /**
    * @prop --goat-button-padding: Button padding.
   */
  --goat-button-height: unset;

  --goat-button-icon-size: 1rem;
  height: var(--goat-button-height);
}

.button {
  position: relative;
  display: flex;
  align-items: center;
  flex-direction: column;
  --internal-button-inner-padding: 0.0625rem;

  .native-button {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    flex: 1;
    width: 100%;
    cursor: pointer;
    z-index: var(--z-index-button);
    background: transparent;
    padding: 0;
    border-width: var(--goat-button-border-width, var(--internal-button-border-width, 0.0625rem));
    border-style: var(--goat-button-border-style);
    border-color: transparent;
    border-radius: var(--goat-button-border-radius);
    outline: none;
    --goat-spinner-color: currentColor;
    --goat-icon-size: var(--goat-button-icon-size);


    .button-content {
      width: 100%;
      flex: 1;
      @include font-style(body-compact-01);
      display: flex;
      box-sizing: border-box;
      align-items: center;
      flex-direction: row;
      height: 100%;
      border-radius: var(--goat-button-border-radius);
      border: var(--internal-button-inner-padding) solid transparent;
      padding: 0 calc(var(--goat-button-padding, 1rem) - var(--internal-button-inner-padding));
    }

    .slot-container {
      display: none;
    }
  }

  &.has-focus:not(.active) .native-button {
    .button-content {
      border-color: v(--color-light);
    }
  }


  .button-background {
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;

    border-radius: var(--goat-button-border-radius);
    pointer-events: none;
  }

  .button-neo-background {
    display: none;
  }

  &.disabled .native-button {
    cursor: not-allowed;
  }

  &.has-content {
    .slot-container {
      display: flex;
      flex: 1;
      padding-right: 2rem;
    }
  }

  &.has-content.has-icon {
    .button-content {
      gap: 2rem;
    }

    .slot-container {
      padding-right: 0;
    }
  }


  &.has-content.show-loader {
    .button-content {
      gap: 1rem;
    }

    .slot-container {
      padding-right: 0;
    }
  }
}

/**
  * SIZES
  */
.button.size-sm, .button.size-small {
  min-height: var(--goat-button-height, 2rem);


  &:not(.has-content).has-icon {
    --goat-button-padding: 0.5rem;
  }
}


.button.size-md, .button.size-medium {
  min-height: var(--goat-button-height, 2.5rem);

  &:not(.has-content).has-icon {
    --goat-button-padding: 0.75rem;
  }
}

.button.size-lg, .button.size-large {
  min-height: var(--goat-button-height, 3rem);
}

.button.size-xl {
  min-height: var(--goat-button-height, 4rem);

  .button-content {
    padding-bottom: 1rem;
  }
}

.button.size-2xl {
  height: 5rem;

  .button-content {
    padding-bottom: 2rem;
  }
}


.button.variant-simple {
  &.has-content .slot-container {
    padding-right: 0;
  }
}

.button.variant-block {
  .native-button {
    width: 100%;
  }

  .button-content {
    justify-content: center;
    gap: 1rem !important;
  }

  &.has-content {
    .slot-container {
      padding-right: 0;
      justify-content: center;
      flex: none;
    }
  }
}


/**
 * Button variant definitions
 */
.button.variant-default {

  .native-button {
    color: var(--internal-button-support-contrast-color);
    border-color: var(--internal-button-color);
  }

  .button-background {
    background: var(--internal-button-color);
  }

  &:hover {
    .native-button {
      border-color: var(--internal-button-color-hover);
    }

    .button-background {
      background: var(--internal-button-color-hover);
    }
  }

  &.active, &.selected {

    .native-button {
      border-color: var(--internal-button-color-active);
    }

    .button-background {
      background: var(--internal-button-color-active);
    }
  }

  &.has-focus:not(.active) .native-button {
    .button-content {
      border-color: v(--color-white);
    }

    border-color: var(--internal-button-color-focus, v(--color-primary));
  }

  &.disabled {
    .native-button {
      color: var(--disabled-03);
      border-color: var(--text-disabled) !important;
    }

    .button-background {
      background: var(--text-disabled) !important;
    }

    &.has-focus:not(.active) .native-button {
      border-color: v(--color-neutral) !important;
    }
  }
}

.button.variant-light {

  .native-button {
    color: var(--internal-button-color);
    border-color: var(--internal-button-color-light);
  }

  .button-background {
    background: var(--internal-button-color-light);
  }

  &:hover {
    .native-button {
      color: var(--internal-button-support-contrast-color);
      border-color: var(--internal-button-color-hover);
    }

    .button-background {
      background: var(--internal-button-color-hover);
    }
  }

  &.active, &.selected {
    .native-button {
      color: var(--internal-button-support-contrast-color);
      border-color: var(--internal-button-color-active);
    }

    .button-background {
      background: var(--internal-button-color-active);
    }
  }

  &.has-focus:not(.active) .native-button {
    .button-content {
      border-color: v(--color-white);
    }

    border-color: var(--internal-button-color-focus, v(--color-primary));
  }

  &.disabled {
    .native-button {
      color: var(--disabled-03);
      border-color: var(--text-disabled) !important;
    }

    .button-background {
      background: var(--text-disabled) !important;
    }

    &.has-focus:not(.active) .native-button {
      border-color: v(--color-neutral) !important;
    }
  }
}

.button.variant-outline {
  .native-button {
    color: var(--internal-button-color);
    border-color: var(--internal-button-color);
  }

  .button-background {
    background: transparent;
  }

  &:hover {
    .native-button {
      color: var(--internal-button-support-contrast-color);
      border-color: var(--internal-button-color);
    }

    .button-background {
      background: var(--internal-button-color);
    }
  }

  &.active, &.selected {
    .native-button {
      color: var(--internal-button-support-contrast-color);
      border-color: var(--internal-button-color-active);
    }

    .button-background {
      background: var(--internal-button-color-active);
    }
  }

  &.has-focus:not(.active) {
    .native-button {
      color: var(--internal-button-support-contrast-color);
      border-color: var(--internal-button-color-focus, v(--color-primary));
    }

    .button-background {
      background: var(--internal-button-color);
    }

    .button-content {
      border-color: v(--color-white);
    }
  }

  &.disabled {
    .native-button {
      color: var(--disabled-03) !important;
      border-color: var(--text-disabled) !important;
    }

    .button-background {
      background: transparent !important;
    }

    &.has-focus:not(.active) .native-button {
      border-color: v(--color-neutral) !important;
    }
  }
}

.button.variant-ghost {
  .native-button {
    color: var(--internal-button-color);
    border-color: transparent;
  }

  .button-background {
    background: transparent;
  }

  &:hover {
    .button-background {
      background: var(--background-hover);
    }
  }

  &.active, &.selected {
    .native-button {
      color: var(--internal-button-color);
    }

    .button-background {
      background: var(--background-active);
    }
  }

  &.has-focus:not(.active) .native-button {
    border-color: var(--internal-button-color-focus, v(--color-primary));
  }

  &.disabled {
    .native-button {
      color: var(--disabled-03) !important;
      border-color: transparent !important;
    }

    .button-background {
      background: transparent !important;
    }

    &.has-focus:not(.active) .native-button {
      border-color: var(--internal-button-color-focus, v(--color-neutral)) !important;
    }
  }
}

.button.variant-neo {

  margin-inline-end: .25rem;
  margin-block-end: .25rem;

  --internal-button-border-width: 0.125rem;
  --internal-button-inner-padding: 0.125rem;

  .native-button {
    color: v(--color-dark);
    border-color: v(--color-dark);
  }

  .button-neo-background {
    background: v(--color-dark);
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;

    border-radius: var(--goat-button-border-radius);
    pointer-events: none;
    transform: translateX(0.25rem) translateY(0.25rem);
  }

  .button-background {
    background: var(--internal-button-color-neo);
  }

  &:hover {
    .native-button, .button-background {
      transform: translateY(-0.125rem);
    }
  }

  &.active {
    .native-button, .button-background {
      transform: translateX(0.25rem) translateY(0.25rem);
    }
  }

  &.active, &.selected {

    .native-button {
      border-color: v(--color-dark);
    }
  }

  &.has-focus:not(.active) {
    .native-button {
      .button-content {
        border-color: v(--color-light);
      }
    }

    .button-background {
      border: calc(1.5 * var(--internal-button-border-width)) solid v(--color-dark);
    }
  }

  &.disabled {
    .native-button {
      color: var(--disabled-03);
      border-color: var(--text-disabled) !important;
    }

    .button-background {
      background: var(--text-disabled) !important;
    }

    &.has-focus:not(.active) .native-button {
      border-color: v(--color-neutral) !important;
    }
  }
}

/**
  * Color Variants
  */
@mixin defineButtonVariables($type, $color, $color-light, $color-hover, $color-active) {

}

.button.color-primary {
  --internal-button-color: var(--goat-button-color, #{v(--color-primary)});
  --internal-button-color-light: var(--goat-button-color-light, #{v(--color-primary-10)});
  --internal-button-color-neo: var(--goat-button-color-neo, #{v(--color-primary-50)});
  --internal-button-color-hover: var(--goat-button-color-hover, #{v(--color-primary-hover-60)});
  --internal-button-color-active: var(--goat-button-color-active, #{v(--color-primary-80)});
}

.button.color-success {
  --internal-button-color: var(--goat-button-color, #{v(--color-success)});
  --internal-button-color-light: var(--goat-button-color-light, #{v(--color-success-10)});
  --internal-button-color-neo: var(--goat-button-color-neo, #{v(--color-success-50)});
  --internal-button-color-hover: var(--goat-button-color-hover, #{v(--color-success-70)});
  --internal-button-color-active: var(--goat-button-color-active, #{v(--color-success-80)});
}

.button.color-info {
  --internal-button-color: var(--goat-button-color, #{v(--color-info)});
  --internal-button-color-light: var(--goat-button-color-light, #{v(--color-info-10)});
  --internal-button-color-neo: var(--goat-button-color-neo, #{v(--color-info-50)});
  --internal-button-color-hover: var(--goat-button-color-hover, #{v(--color-info-hover-60)});
  --internal-button-color-active: var(--goat-button-color-active, #{v(--color-info-80)});
}

.button.color-warning {
  --internal-button-color: var(--goat-button-color, #{v(--color-warning)});
  --internal-button-color-light: var(--goat-button-color-light, #{v(--color-warning-10)});
  --internal-button-color-neo: var(--goat-button-color-neo, #{v(--color-warning-50)});
  --internal-button-color-hover: var(--goat-button-color-hover, #{v(--color-warning-70)});
  --internal-button-color-active: var(--goat-button-color-active, #{v(--color-warning-80)});
}

.button.color-error, .button.color-danger {
  --internal-button-color: var(--goat-button-color, #{v(--color-error)});
  --internal-button-color-light: var(--goat-button-color-light, #{v(--color-error-10)});
  --internal-button-color-neo: var(--goat-button-color-neo, #{v(--color-error-50)});
  --internal-button-color-hover: var(--goat-button-color-hover, #{v(--color-error-70)});
  --internal-button-color-active: var(--goat-button-color-active, #{v(--color-error-80)});
}

.button.color-white {
  --internal-button-color: var(--goat-button-color, #{v(--color-white)});
  --internal-button-color-light: var(--goat-button-color-light, #{v(--color-white)});
  --internal-button-color-neo: var(--goat-button-color-neo, #{v(--color-white)});
  --internal-button-color-hover: var(--goat-button-color-hover, #{v(--color-gray-10)});
  --internal-button-color-active: var(--goat-button-color-active, #{v(--color-gray-70)});
}

.button.color-black {
  --internal-button-color: var(--goat-button-color, #{v(--color-black)});
  --internal-button-color-light: var(--goat-button-color-light, #{v(--color-gray-10)});
  --internal-button-color-neo: var(--goat-button-color-neo, #{v(--color-black)});
  --internal-button-color-hover: var(--goat-button-color-hover, #{v(--color-gray-70)});
  --internal-button-color-active: var(--goat-button-color-active, #{v(--color-gray-90)});
}

.button.color-secondary {
  --internal-button-color: var(--goat-button-color, #{v(--color-secondary)});
  --internal-button-color-light: var(--goat-button-color-light, #{v(--color-white)});
  --internal-button-color-neo: var(--goat-button-color-neo, #{v(--color-secondary)});
  --internal-button-color-hover: var(--goat-button-color-hover, var(--button-secondary-hover));
  --internal-button-color-active: var(--goat-button-color-active, var(--button-secondary-active));
}

:host(.rounded) {
  .native-button {
    border-radius: 100%;
  }

  .button-content {
    border-radius: 100%;
  }

  .button-background {
    border-radius: 100%;
  }
}

:host(.no-padding) {
  .button-content {
    padding: 0;
  }
}
