@import "../../../3d-party/monaco/editor.main";
@import "../../../globalStyles/commons";

:host {
  display: block;
  height: 100%;
}

.code-editor-loader {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: v(--spacing-02);
}

.code-editor-component {
  height: 100%;
  position: relative;

  .editor {
    height: 100%;
    min-height: 2rem;
    border: 1px solid v(--border-color);
    border-radius: v(--border-radius);
    overflow: hidden;

    &[readonly], &[readonly="true"] {
      color: v(--color-neutral);
      background-color: v(--color-neutral-10);
      border-color: v(--color-neutral);
      cursor: default;
    }
    &[disabled], &[disabled="true"] {
      color: v(--color-neutral);
      background-color: v(--color-neutral-10);
      border-color: v(--color-neutral);
      cursor: not-allowed;
    }
  }

  &.disabled {
    .monaco-editor, .monaco-editor-background, .monaco-editor .inputarea.ime-input, .view-lines {
      cursor: default;
    }
  }

  &.disabled.vs-light {
    .monaco-editor, .monaco-editor-background, .monaco-editor .inputarea.ime-input, .monaco-editor .margin {
      background: v(--color-neutral-200);
    }
  }

  &.disabled.vs-dark {
    .monaco-editor, .monaco-editor-background, .monaco-editor .inputarea.ime-input, .monaco-editor .margin {
      background: v(--color-neutral-800);
    }
  }

}

:host(.no-border) {
  .code-editor-component {
    .editor {
      border: none;
      border-radius: 0;
    }
  }
}


/**
 * States
 */
.code-editor-component.has-focus .editor {
  @include focus-ring;
  border-color: transparent;
}

@each $state in [success, warning, error] {
  :host-context(.input-state-#{$state}) {
    .code-editor-component {
      .editor {
        border-color: v(--support-#{$state});
      }

      &.has-focus {
        .editor {
          @include focus-ring(v(--support-#{$state}));
        }
      }
    }
  }
}
