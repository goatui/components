@import "../../../styles/scss/commons";

$border-width: 0.0625;

@function removeBorder($width) {
  @return #{($width*1 - ($border-width * 4))}rem;
}


:host {
  display: inline-block;
}

.button {
  color: v(--text-02);
  background-color: transparent;
  box-sizing: border-box;
  width: 100%;
  padding: 0;
  cursor: pointer;
  border: none;
  border-bottom: #{($border-width * 2)}rem solid v(--border-color);
  outline: none;

  .slot-container {
    width: 100%;
    display: none;
  }

  &.has-content .slot-container {
    display: block;
  }

}

.button-content {
  display: flex;
  align-items: center;
  flex-direction: row;
  height: 100%;
  gap: v(--spacing-2);
  border: #{($border-width * 2)}rem dashed transparent;
}


/**
  * SIZES
  */
.button.size-sm, .button.size-small {

  .button-content {
    padding: removeBorder(0.5);
    @include font-style(text-sm);
    font-weight: v(--font-weight-medium);
  }

  &.has-content .button-content {
    padding: removeBorder(0.5) removeBorder(0.875);
  }
}


.button.size-md, .button.size-medium {

  .button-content {
    padding: removeBorder(0.625);
    @include font-style(text-sm);
    font-weight: v(--font-weight-medium);
  }

  &.has-content .button-content {
    padding: removeBorder(0.625) removeBorder(1.125);
  }
}

.button.size-lg, .button.size-large {
  .button-content {
    padding: removeBorder(0.625);
    @include font-style(text-md);
    font-weight: v(--font-weight-medium);
  }

  &.has-content .button-content {
    padding: removeBorder(0.625) removeBorder(1);
  }
}

.button.size-xl {
  .button-content {
    padding: removeBorder(0.75);
    @include font-style(text-md);
    font-weight: v(--font-weight-medium);
  }

  &.has-content .button-content {
    padding: removeBorder(0.75) removeBorder(1.25);
  }
}

.button.size-xxl {

  .button-content {
    padding: removeBorder(1);
    @include font-style(text-lg);
    font-weight: v(--font-weight-medium);
  }

  &.has-content .button-content {
    padding: removeBorder(1) removeBorder(1.75);
  }
}

.button {
  &:hover {
    background: v(--hover-ui);
  }

  &.has-focus:not(.active) {
    .button-content {
      border-color: v(--color-primary) !important;
    }
  }

  &.selected {
    color: v(--text-01);

    .button-content {
      font-weight: v(--font-weight-bold);
    }

    border-bottom-color: var(--private-tab-color);
  }

  &.disabled {
    cursor: not-allowed;
    color: v(--disabled-03) !important;
    background: transparent !important;
    border-color: v(--color-neutral) !important;

    &.has-focus:not(.active) {
      .button-content {
        border-color: v(--color-neutral) !important;
      }
    }
  }
}

/**
  * Variants
  */
@each $color in [primary, success, error, info, warning] {
  .button.color-#{$color} {
    --private-tab-color: #{v(--color-#{$color})};
  }
}


:host([block]) {
  display: block;

  .spinner {
    margin: auto;
  }
}

.button.icon-end .button-content{
  flex-direction: row-reverse;
}


