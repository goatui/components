[
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/content/alert",
    "filePath": "./src/components/content/alert/goat-alert.tsx",
    "fileName": "goat-alert.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/content/alert/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/content/alert/usage",
    "tag": "goat-alert",
    "readme": "# goat-alert\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Alert"
      },
      {
        "name": "description",
        "text": "Alerts provide important information inline with the content body within a view."
      },
      {
        "name": "example",
        "text": "<goat-alert state=\"success\" dismissible>\n     <div slot='message'>Successful saved the record</div>\n   </goat-alert>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-button"
    ],
    "dependencyGraph": {
      "goat-alert": [
        "goat-button"
      ],
      "goat-button": [
        "goat-icon",
        "goat-spinner"
      ]
    },
    "props": [
      {
        "name": "dismissible",
        "type": "boolean",
        "mutable": false,
        "attr": "dismissible",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "state",
        "type": "\"error\" | \"info\" | \"success\" | \"warning\"",
        "mutable": false,
        "attr": "state",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'info'",
        "values": [
          {
            "value": "error",
            "type": "string"
          },
          {
            "value": "info",
            "type": "string"
          },
          {
            "value": "success",
            "type": "string"
          },
          {
            "value": "warning",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [
      {
        "event": "goat:dismiss",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Alert",
      "description": "Alerts provide important information inline with the content body within a view.",
      "example": "<goat-alert state=\"success\" dismissible>\n     <div slot='message'>Successful saved the record</div>\n   </goat-alert>"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/content/avatar",
    "filePath": "./src/components/content/avatar/goat-avatar.tsx",
    "fileName": "goat-avatar.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/content/avatar/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/content/avatar/usage",
    "tag": "goat-avatar",
    "readme": "# goat-avatar\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Avatar"
      },
      {
        "name": "description",
        "text": "Avatars in their simplest form display content within a circular container."
      },
      {
        "name": "example",
        "text": "<goat-avatar name=\"Shivaji Varma\"></goat-avatar>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "name",
        "type": "string",
        "mutable": false,
        "attr": "name",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "string",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": false,
        "docs": "Avatar size.",
        "docsTags": [],
        "default": "'2rem'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "src",
        "type": "string",
        "mutable": false,
        "attr": "src",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Avatar",
      "description": "Avatars in their simplest form display content within a circular container.",
      "example": "<goat-avatar name=\"Shivaji Varma\"></goat-avatar>"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/form/button",
    "filePath": "./src/components/form/button/goat-button.tsx",
    "fileName": "goat-button.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/form/button/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/form/button/usage",
    "tag": "goat-button",
    "readme": "# goat-button\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Button"
      },
      {
        "name": "description",
        "text": "An interactive button with a range of presentation options."
      },
      {
        "name": "example",
        "text": "<goat-button>\nButton CTA\n</goat-button>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-alert"
    ],
    "dependencies": [
      "goat-icon",
      "goat-spinner"
    ],
    "dependencyGraph": {
      "goat-button": [
        "goat-icon",
        "goat-spinner"
      ],
      "goat-alert": [
        "goat-button"
      ]
    },
    "props": [
      {
        "name": "block",
        "type": "boolean",
        "mutable": false,
        "attr": "block",
        "reflectToAttr": false,
        "docs": "If true, fits button width to its parent width. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "color",
        "type": "\"error\" | \"info\" | \"primary\" | \"secondary\" | \"success\" | \"warning\"",
        "mutable": false,
        "attr": "color",
        "reflectToAttr": false,
        "docs": "Color variants.",
        "docsTags": [],
        "default": "'primary'",
        "values": [
          {
            "value": "error",
            "type": "string"
          },
          {
            "value": "info",
            "type": "string"
          },
          {
            "value": "primary",
            "type": "string"
          },
          {
            "value": "secondary",
            "type": "string"
          },
          {
            "value": "success",
            "type": "string"
          },
          {
            "value": "warning",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "configAria",
        "type": "any",
        "mutable": true,
        "attr": "config-aria",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "{}",
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabledReason",
        "type": "string",
        "mutable": false,
        "attr": "disabled-reason",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "href",
        "type": "string",
        "mutable": false,
        "attr": "href",
        "reflectToAttr": false,
        "docs": "Hyperlink to navigate to on click.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "icon",
        "type": "string",
        "mutable": false,
        "attr": "icon",
        "reflectToAttr": false,
        "docs": "Icon which will displayed on button.\nPossible values are bootstrap icon names.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "iconEnd",
        "type": "boolean",
        "mutable": false,
        "attr": "icon-end",
        "reflectToAttr": false,
        "docs": "Icon position.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "selected",
        "type": "boolean",
        "mutable": false,
        "attr": "selected",
        "reflectToAttr": true,
        "docs": "Button selection state.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "showLoader",
        "type": "boolean",
        "mutable": false,
        "attr": "show-loader",
        "reflectToAttr": false,
        "docs": "Show loader.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\" | \"xl\" | \"xxl\"",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": false,
        "docs": "Button size.\nPossible values are `\"sm\"`, `\"md\"`, `\"lg\"`, `\"xl\"`, `\"xxl\"`. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          },
          {
            "value": "xl",
            "type": "string"
          },
          {
            "value": "xxl",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "target",
        "type": "string",
        "mutable": false,
        "attr": "target",
        "reflectToAttr": false,
        "docs": "Sets or retrieves the window or frame at which to target content.",
        "docsTags": [],
        "default": "'_self'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "variant",
        "type": "\"default\" | \"light\" | \"link\" | \"outline\"",
        "mutable": false,
        "attr": "variant",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'default'",
        "values": [
          {
            "value": "default",
            "type": "string"
          },
          {
            "value": "light",
            "type": "string"
          },
          {
            "value": "link",
            "type": "string"
          },
          {
            "value": "outline",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "triggerClick",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "triggerClick() => Promise<void>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:click",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "On click of button, a CustomEvent 'goat:click' will be triggered.",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "mouseup",
        "target": "window",
        "capture": false,
        "passive": true
      },
      {
        "event": "keyup",
        "target": "window",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {
      "name": "Button",
      "description": "An interactive button with a range of presentation options.",
      "example": "<goat-button>\nButton CTA\n</goat-button>"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/content/card",
    "filePath": "./src/components/content/card/goat-card.tsx",
    "fileName": "goat-card.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/content/card/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/content/card/usage",
    "tag": "goat-card",
    "readme": "# goat-heading\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "shadowLevel",
        "type": "\"lg\" | \"md\" | \"sm\" | \"xl\" | \"xs\" | \"xxl\"",
        "mutable": false,
        "attr": "shadow-level",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          },
          {
            "value": "xl",
            "type": "string"
          },
          {
            "value": "xs",
            "type": "string"
          },
          {
            "value": "xxl",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {}
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/form/checkbox",
    "filePath": "./src/components/form/checkbox/goat-checkbox.tsx",
    "fileName": "goat-checkbox.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/form/checkbox/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/form/checkbox/usage",
    "tag": "goat-checkbox",
    "readme": "# goat-checkbox\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Checkbox"
      },
      {
        "name": "description",
        "text": "Captures boolean input with an optional indeterminate mode."
      },
      {
        "name": "example",
        "text": "<goat-checkbox value='true'>Want ice cream?</goat-checkbox>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-table"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-table": [
        "goat-checkbox"
      ]
    },
    "props": [
      {
        "name": "configAria",
        "type": "any",
        "mutable": true,
        "attr": "config-aria",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "{}",
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "intermediate",
        "type": "boolean",
        "mutable": true,
        "attr": "intermediate",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "label",
        "type": "string",
        "mutable": false,
        "attr": "label",
        "reflectToAttr": false,
        "docs": "The checkbox label.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "name",
        "type": "string",
        "mutable": false,
        "attr": "name",
        "reflectToAttr": false,
        "docs": "The input field name.",
        "docsTags": [],
        "default": "`goat-input-${this.gid}`",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "required",
        "type": "boolean",
        "mutable": false,
        "attr": "required",
        "reflectToAttr": true,
        "docs": "If true, required icon is show. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "rounded",
        "type": "boolean",
        "mutable": false,
        "attr": "rounded",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\"",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": false,
        "docs": "The button size.\nPossible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "boolean",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "The input field value.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "getGid",
        "returns": {
          "type": "Promise<string>",
          "docs": ""
        },
        "signature": "getGid() => Promise<string>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      },
      {
        "name": "setBlur",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setBlur() => Promise<void>",
        "parameters": [],
        "docs": "Sets blur on the native `input` in `goat-input`. Use this method instead of the global\n`input.blur()`.",
        "docsTags": []
      },
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on the native `input` in `goat-input`. Use this method instead of the global\n`input.focus()`.",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:blur",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the input loses focus.",
        "docsTags": []
      },
      {
        "event": "goat:change",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "On change of input a CustomEvent 'goat:change' will be triggered. Event details contains parent event, oldValue, newValue of input.",
        "docsTags": []
      },
      {
        "event": "goat:focus",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the input has focus.",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "mouseup",
        "target": "window",
        "capture": false,
        "passive": true
      },
      {
        "event": "keyup",
        "target": "window",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {
      "name": "Checkbox",
      "description": "Captures boolean input with an optional indeterminate mode.",
      "example": "<goat-checkbox value='true'>Want ice cream?</goat-checkbox>"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/form/code-editor",
    "filePath": "./src/components/form/code-editor/goat-code-editor.tsx",
    "fileName": "goat-code-editor.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/form/code-editor/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/form/code-editor/usage",
    "tag": "goat-code-editor",
    "readme": "# goat-code-editor\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Code Editor"
      },
      {
        "name": "description",
        "text": "A browser based code editor."
      },
      {
        "name": "img",
        "text": "/assets/img/code-editor.png"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "debounce",
        "type": "number",
        "mutable": false,
        "attr": "debounce",
        "reflectToAttr": false,
        "docs": "Set the amount of time, in milliseconds, to wait to trigger the `onChange` event after each keystroke.",
        "docsTags": [],
        "default": "250",
        "values": [
          {
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": false,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "language",
        "type": "\"html\" | \"javascript\" | \"json\"",
        "mutable": false,
        "attr": "language",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'javascript'",
        "values": [
          {
            "value": "html",
            "type": "string"
          },
          {
            "value": "javascript",
            "type": "string"
          },
          {
            "value": "json",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "lineNumbers",
        "type": "\"off\" | \"on\"",
        "mutable": false,
        "attr": "line-numbers",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'on'",
        "values": [
          {
            "value": "off",
            "type": "string"
          },
          {
            "value": "on",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "name",
        "type": "string",
        "mutable": false,
        "attr": "name",
        "reflectToAttr": false,
        "docs": "The input field name.",
        "docsTags": [],
        "default": "`goat-input-${this.gid}`",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "required",
        "type": "boolean",
        "mutable": false,
        "attr": "required",
        "reflectToAttr": true,
        "docs": "If true, required icon is show. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "theme",
        "type": "\"vs-dark\" | \"vs-light\"",
        "mutable": false,
        "attr": "theme",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'vs-light'",
        "values": [
          {
            "value": "vs-dark",
            "type": "string"
          },
          {
            "value": "vs-light",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "string",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "The input field value.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "getGid",
        "returns": {
          "type": "Promise<string>",
          "docs": ""
        },
        "signature": "getGid() => Promise<string>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      },
      {
        "name": "setBlur",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setBlur() => Promise<void>",
        "parameters": [],
        "docs": "Sets blur on the native `input` in `goat-input`. Use this method instead of the global\n`input.blur()`.",
        "docsTags": []
      },
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on the native `input` in `goat-input`. Use this method instead of the global\n`input.focus()`.",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:change",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the value has changed..",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Code Editor",
      "description": "A browser based code editor.",
      "img": "/assets/img/code-editor.png"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/content/divider",
    "filePath": "./src/components/content/divider/goat-divider.tsx",
    "fileName": "goat-divider.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/content/divider/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/content/divider/usage",
    "tag": "goat-divider",
    "readme": "# goat-heading\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Divider"
      },
      {
        "name": "description",
        "text": "A divider can be used to segment content vertically or horizontally."
      },
      {
        "name": "example",
        "text": "<goat-divider style=\"width: 12rem;\">or</goat-divider>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "vertical",
        "type": "boolean",
        "mutable": false,
        "attr": "vertical",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Divider",
      "description": "A divider can be used to segment content vertically or horizontally.",
      "example": "<goat-divider style=\"width: 12rem;\">or</goat-divider>"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/menus/dropdown",
    "filePath": "./src/components/menus/dropdown/goat-dropdown.tsx",
    "fileName": "goat-dropdown.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/menus/dropdown/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/menus/dropdown/usage",
    "tag": "goat-dropdown",
    "readme": "# goat-dropdown\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Dropdown"
      },
      {
        "name": "description",
        "text": "Enables native inputs to be used within a Form field."
      },
      {
        "name": "img",
        "text": "/assets/img/dropdown.png"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": false,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "isOpen",
        "type": "boolean",
        "mutable": true,
        "attr": "is-open",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "positions",
        "type": "string",
        "mutable": false,
        "attr": "positions",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'bottom-right,top-right,bottom-left,top-left'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\"",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": false,
        "docs": "The button size.\nPossible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      }
    ],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "click",
        "target": "window",
        "capture": false,
        "passive": false
      },
      {
        "event": "goat:menu-item-click",
        "target": "window",
        "capture": false,
        "passive": false
      },
      {
        "event": "goat:click",
        "target": "window",
        "capture": false,
        "passive": false
      },
      {
        "event": "keydown",
        "target": "window",
        "capture": false,
        "passive": false
      },
      {
        "event": "scroll",
        "target": "window",
        "capture": false,
        "passive": true
      }
    ],
    "metadata": {
      "name": "Dropdown",
      "description": "Enables native inputs to be used within a Form field.",
      "img": "/assets/img/dropdown.png"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/content/empty-state",
    "filePath": "./src/components/content/empty-state/goat-empty-state.tsx",
    "fileName": "goat-empty-state.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/content/empty-state/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/content/empty-state/usage",
    "tag": "goat-empty-state",
    "readme": "# goat-heading\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Empty State"
      },
      {
        "name": "description",
        "text": "A message that displays when there is no information to display."
      },
      {
        "name": "example",
        "text": "<goat-empty-state>\n<div slot=\"title\">Empty</div>\n<div slot='description'>\nNothing to display\n</div>\n</goat-empty-state>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-menu"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-menu": [
        "goat-empty-state"
      ]
    },
    "props": [
      {
        "name": "illustration",
        "type": "\"no-data\"",
        "mutable": false,
        "attr": "illustration",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "'no-data'",
        "values": [
          {
            "value": "no-data",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "vertical",
        "type": "boolean",
        "mutable": false,
        "attr": "vertical",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Empty State",
      "description": "A message that displays when there is no information to display.",
      "example": "<goat-empty-state>\n<div slot=\"title\">Empty</div>\n<div slot='description'>\nNothing to display\n</div>\n</goat-empty-state>"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/flow-designer/flow-designer",
    "filePath": "./src/components/flow-designer/flow-designer/goat-flow-designer.tsx",
    "fileName": "goat-flow-designer.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/flow-designer/flow-designer/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/flow-designer/flow-designer/usage",
    "tag": "goat-flow-designer",
    "readme": "# goat-flow-designer\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "activities",
        "type": "any[]",
        "mutable": false,
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "[]",
        "values": [
          {
            "type": "any[]"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "mouseup",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {}
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/form/form-control",
    "filePath": "./src/components/form/form-control/goat-form-control.tsx",
    "fileName": "goat-form-control.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/form/form-control/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/form/form-control/usage",
    "tag": "goat-form-control",
    "readme": "# goat-field-group\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Form Control"
      },
      {
        "name": "description",
        "text": "The Form Control component adds a label and caption for its child control."
      },
      {
        "name": "example",
        "text": "<goat-form-control label='Full Name' required>\n<goat-input type='text'></goat-input>\n</goat-form-control>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "caption",
        "type": "string",
        "mutable": false,
        "attr": "caption",
        "reflectToAttr": false,
        "docs": "The caption for the form control.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "error",
        "type": "string",
        "mutable": false,
        "attr": "error",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "label",
        "type": "string",
        "mutable": false,
        "attr": "label",
        "reflectToAttr": false,
        "docs": "The label for the form control.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "required",
        "type": "boolean",
        "mutable": false,
        "attr": "required",
        "reflectToAttr": false,
        "docs": "Whether the form control is required.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "success",
        "type": "string",
        "mutable": false,
        "attr": "success",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "warning",
        "type": "string",
        "mutable": false,
        "attr": "warning",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Form Control",
      "description": "The Form Control component adds a label and caption for its child control.",
      "example": "<goat-form-control label='Full Name' required>\n<goat-input type='text'></goat-input>\n</goat-form-control>"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/content/icon",
    "filePath": "./src/components/content/icon/goat-icon.tsx",
    "fileName": "goat-icon.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/content/icon/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/content/icon/usage",
    "tag": "goat-icon",
    "readme": "# goat-icon\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Icon"
      },
      {
        "name": "description",
        "text": "Renders a specified icon."
      },
      {
        "name": "example",
        "text": "<goat-icon type=\"house\"></goat-icon>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-button",
      "goat-input",
      "goat-select",
      "goat-textarea"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-button": [
        "goat-icon"
      ],
      "goat-input": [
        "goat-icon"
      ],
      "goat-select": [
        "goat-icon"
      ],
      "goat-textarea": [
        "goat-icon"
      ]
    },
    "props": [
      {
        "name": "shade",
        "type": "\"primary\" | \"secondary\" | \"tertiary\"",
        "mutable": false,
        "attr": "shade",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "'primary'",
        "values": [
          {
            "value": "primary",
            "type": "string"
          },
          {
            "value": "secondary",
            "type": "string"
          },
          {
            "value": "tertiary",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "string",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": true,
        "docs": "The Icon size.\nPossible values are: `\"sm\"`, `\"md\"`, `\"lg\"`, `\"xl\"` and size in pixel. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "type",
        "type": "string",
        "mutable": false,
        "attr": "type",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "'house'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Icon",
      "description": "Renders a specified icon.",
      "example": "<goat-icon type=\"house\"></goat-icon>"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/form/input",
    "filePath": "./src/components/form/input/goat-input.tsx",
    "fileName": "goat-input.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/form/input/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/form/input/usage",
    "tag": "goat-input",
    "readme": "# goat-input\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Input"
      },
      {
        "name": "description",
        "text": "Enables native inputs to be used within a Form field."
      },
      {
        "name": "example",
        "text": "<goat-input placeholder=\"Enter your name\"></goat-input>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-icon"
    ],
    "dependencyGraph": {
      "goat-input": [
        "goat-icon"
      ]
    },
    "props": [
      {
        "name": "autocomplete",
        "type": "\"off\" | \"on\"",
        "mutable": false,
        "attr": "autocomplete",
        "reflectToAttr": false,
        "docs": "Indicates whether the value of the control can be automatically completed by the browser.",
        "docsTags": [],
        "default": "'off'",
        "values": [
          {
            "value": "off",
            "type": "string"
          },
          {
            "value": "on",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "clearable",
        "type": "boolean",
        "mutable": false,
        "attr": "clearable",
        "reflectToAttr": false,
        "docs": "If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "configAria",
        "type": "any",
        "mutable": true,
        "attr": "config-aria",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "{}",
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "debounce",
        "type": "number",
        "mutable": false,
        "attr": "debounce",
        "reflectToAttr": false,
        "docs": "Set the amount of time, in milliseconds, to wait to trigger the `goatChange` event after each keystroke.",
        "docsTags": [],
        "default": "300",
        "values": [
          {
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "name",
        "type": "string",
        "mutable": false,
        "attr": "name",
        "reflectToAttr": false,
        "docs": "The input field name.",
        "docsTags": [],
        "default": "`goat-input-${this.gid}`",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "placeholder",
        "type": "string",
        "mutable": false,
        "attr": "placeholder",
        "reflectToAttr": false,
        "docs": "The input field placeholder.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "readonly",
        "type": "boolean",
        "mutable": false,
        "attr": "readonly",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "required",
        "type": "boolean",
        "mutable": false,
        "attr": "required",
        "reflectToAttr": true,
        "docs": "If true, required icon is show. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\"",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": true,
        "docs": "The input field size.\nPossible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "state",
        "type": "\"default\" | \"error\" | \"success\" | \"warning\"",
        "mutable": false,
        "attr": "state",
        "reflectToAttr": true,
        "docs": "The input state.\nPossible values are: `\"success\"`, `\"error\"`, `\"warning\"`, 'default'. Defaults to `\"default\"`.",
        "docsTags": [],
        "default": "'default'",
        "values": [
          {
            "value": "default",
            "type": "string"
          },
          {
            "value": "error",
            "type": "string"
          },
          {
            "value": "success",
            "type": "string"
          },
          {
            "value": "warning",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "type",
        "type": "\"email\" | \"number\" | \"password\" | \"tel\" | \"text\"",
        "mutable": false,
        "attr": "type",
        "reflectToAttr": false,
        "docs": "The type of control to display.\nPossible values are: `\"text\"`, `\"password\"`, `\"number\"`, `\"email\"`, `\"tel\"`. Defaults to `\"text\"`.",
        "docsTags": [],
        "default": "'text'",
        "values": [
          {
            "value": "email",
            "type": "string"
          },
          {
            "value": "number",
            "type": "string"
          },
          {
            "value": "password",
            "type": "string"
          },
          {
            "value": "tel",
            "type": "string"
          },
          {
            "value": "text",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "number | string",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "The input field value.",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "optional": true,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "getGid",
        "returns": {
          "type": "Promise<string>",
          "docs": ""
        },
        "signature": "getGid() => Promise<string>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      },
      {
        "name": "setBlur",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setBlur() => Promise<void>",
        "parameters": [],
        "docs": "Sets blur on the native `input` in `goat-input`. Use this method instead of the global\n`input.blur()`.",
        "docsTags": []
      },
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on the native `input` in `goat-input`. Use this method instead of the global\n`input.focus()`.",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:blur",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the input loses focus.",
        "docsTags": []
      },
      {
        "event": "goat:change",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the value has changed.",
        "docsTags": []
      },
      {
        "event": "goat:focus",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the input has focus.",
        "docsTags": []
      },
      {
        "event": "goat:input",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when a keyboard input occurred.",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Input",
      "description": "Enables native inputs to be used within a Form field.",
      "example": "<goat-input placeholder=\"Enter your name\"></goat-input>"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/navigation/link",
    "filePath": "./src/components/navigation/link/goat-link.tsx",
    "fileName": "goat-link.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/navigation/link/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/navigation/link/usage",
    "tag": "goat-link",
    "readme": "# goat-button\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Link"
      },
      {
        "name": "description",
        "text": "Links allow users to click their way from page to page."
      },
      {
        "name": "example",
        "text": "<goat-link>Link</goat-link>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "color",
        "type": "\"error\" | \"info\" | \"inherit\" | \"primary\" | \"success\" | \"warning\"",
        "mutable": false,
        "attr": "color",
        "reflectToAttr": false,
        "docs": "Color variants\nPossible values are `\"primary\"`, `\"success\"`, `\"warning\"`, `\"error\"`, `\"info\"`, `\"inherit\"`. Defaults to `\"inherit\"`.",
        "docsTags": [],
        "default": "'primary'",
        "values": [
          {
            "value": "error",
            "type": "string"
          },
          {
            "value": "info",
            "type": "string"
          },
          {
            "value": "inherit",
            "type": "string"
          },
          {
            "value": "primary",
            "type": "string"
          },
          {
            "value": "success",
            "type": "string"
          },
          {
            "value": "warning",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "decoration",
        "type": "boolean",
        "mutable": false,
        "attr": "decoration",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "true",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "href",
        "type": "string",
        "mutable": false,
        "attr": "href",
        "reflectToAttr": false,
        "docs": "Hyperlink to navigate to on click.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "target",
        "type": "string",
        "mutable": false,
        "attr": "target",
        "reflectToAttr": false,
        "docs": "Sets or retrieves the window or frame at which to target content.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "triggerClick",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "triggerClick() => Promise<void>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      }
    ],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "mouseup",
        "target": "window",
        "capture": false,
        "passive": true
      },
      {
        "event": "keyup",
        "target": "window",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {
      "name": "Link",
      "description": "Links allow users to click their way from page to page.",
      "example": "<goat-link>Link</goat-link>"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/menus/menu",
    "filePath": "./src/components/menus/menu/goat-menu.tsx",
    "fileName": "goat-menu.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/menus/menu/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/menus/menu/usage",
    "tag": "goat-menu",
    "readme": "# goat-menu\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Menu"
      },
      {
        "name": "description",
        "text": "Menus display a list of choices on temporary surfaces."
      },
      {
        "name": "img",
        "text": "/assets/img/menu.png"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-select"
    ],
    "dependencies": [
      "goat-empty-state"
    ],
    "dependencyGraph": {
      "goat-menu": [
        "goat-empty-state"
      ],
      "goat-select": [
        "goat-menu"
      ]
    },
    "props": [
      {
        "name": "empty",
        "type": "boolean",
        "mutable": true,
        "attr": "empty",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "emptyState",
        "type": "string",
        "mutable": true,
        "attr": "empty-state",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "`{\n    \"title\": \"No items\",\n    \"description\": \"There are no items to display\"\n  }`",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "showLoader",
        "type": "boolean",
        "mutable": false,
        "attr": "show-loader",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "number | string",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "optional": true,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on first menu item. Use this method instead of the global\n`element.focus()`.",
        "docsTags": []
      }
    ],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "keydown",
        "target": "window",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {
      "name": "Menu",
      "description": "Menus display a list of choices on temporary surfaces.",
      "img": "/assets/img/menu.png"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/menus/menu-item",
    "filePath": "./src/components/menus/menu-item/goat-menu-item.tsx",
    "fileName": "goat-menu-item.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/menus/menu-item/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/menus/menu-item/usage",
    "tag": "goat-menu-item",
    "readme": "# goat-menu-item\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [],
    "encapsulation": "shadow",
    "dependents": [
      "goat-select"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-select": [
        "goat-menu-item"
      ]
    },
    "props": [
      {
        "name": "color",
        "type": "\"error\" | \"neutral\" | \"primary\" | \"success\" | \"warning\"",
        "mutable": false,
        "attr": "color",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'primary'",
        "values": [
          {
            "value": "error",
            "type": "string"
          },
          {
            "value": "neutral",
            "type": "string"
          },
          {
            "value": "primary",
            "type": "string"
          },
          {
            "value": "success",
            "type": "string"
          },
          {
            "value": "warning",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "selected",
        "type": "boolean",
        "mutable": false,
        "attr": "selected",
        "reflectToAttr": true,
        "docs": "Menu item selection state.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "number | string",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "The menu item value.",
        "docsTags": [],
        "values": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "optional": true,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "setBlur",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setBlur() => Promise<void>",
        "parameters": [],
        "docs": "Sets blur on the native `input` in `goat-input`. Use this method instead of the global\n`input.blur()`.",
        "docsTags": []
      },
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on the native `input` in `goat-input`. Use this method instead of the global\n`input.focus()`.",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:menu-item-click",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the menu item is clicked.",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "mouseup",
        "target": "window",
        "capture": false,
        "passive": true
      },
      {
        "event": "keyup",
        "target": "window",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {}
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/form/select",
    "filePath": "./src/components/form/select/goat-select.tsx",
    "fileName": "goat-select.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/form/select/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/form/select/usage",
    "tag": "goat-select",
    "readme": "# goat-select\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Select"
      },
      {
        "name": "description",
        "text": "Allows the user to select one or more options using a dropdown."
      },
      {
        "name": "img",
        "text": "/assets/img/select.png"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-icon",
      "goat-spinner",
      "goat-menu",
      "goat-text",
      "goat-menu-item"
    ],
    "dependencyGraph": {
      "goat-select": [
        "goat-icon",
        "goat-spinner",
        "goat-menu",
        "goat-text",
        "goat-menu-item"
      ],
      "goat-menu": [
        "goat-empty-state"
      ]
    },
    "props": [
      {
        "name": "clearable",
        "type": "boolean",
        "mutable": false,
        "attr": "clearable",
        "reflectToAttr": false,
        "docs": "If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "configAria",
        "type": "any",
        "mutable": true,
        "attr": "config-aria",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "{}",
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "debounce",
        "type": "number",
        "mutable": false,
        "attr": "debounce",
        "reflectToAttr": false,
        "docs": "Set the amount of time, in milliseconds, to wait to trigger the `goatChange` event after each keystroke.",
        "docsTags": [],
        "default": "300",
        "values": [
          {
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": false,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "isOpen",
        "type": "boolean",
        "mutable": true,
        "attr": "is-open",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "items",
        "type": "any",
        "mutable": false,
        "attr": "items",
        "reflectToAttr": false,
        "docs": "[{\n  label: 'Shivaji Varma',\n  value: 'shivaji-varma'\n}]",
        "docsTags": [],
        "default": "[]",
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "name",
        "type": "string",
        "mutable": false,
        "attr": "name",
        "reflectToAttr": false,
        "docs": "The input field name.",
        "docsTags": [],
        "default": "`goat-input-${this.gid}`",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "placeholder",
        "type": "string",
        "mutable": false,
        "attr": "placeholder",
        "reflectToAttr": false,
        "docs": "The input field placeholder.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "position",
        "type": "\"bottom-left\" | \"bottom-right\" | \"top-left\" | \"top-right\"",
        "mutable": false,
        "attr": "position",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'bottom-left'",
        "values": [
          {
            "value": "bottom-left",
            "type": "string"
          },
          {
            "value": "bottom-right",
            "type": "string"
          },
          {
            "value": "top-left",
            "type": "string"
          },
          {
            "value": "top-right",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "required",
        "type": "boolean",
        "mutable": false,
        "attr": "required",
        "reflectToAttr": false,
        "docs": "If true, required icon is show. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "search",
        "type": "\"contains\" | \"initial\" | \"managed\" | \"none\"",
        "mutable": false,
        "attr": "search",
        "reflectToAttr": false,
        "docs": "Search type\nPossible values are `\"none\"`, `\"initial\"`, `\"contains\"`, `\"managed\"`. Defaults to `\"none\"`.",
        "docsTags": [],
        "default": "'none'",
        "values": [
          {
            "value": "contains",
            "type": "string"
          },
          {
            "value": "initial",
            "type": "string"
          },
          {
            "value": "managed",
            "type": "string"
          },
          {
            "value": "none",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "showLoader",
        "type": "boolean",
        "mutable": false,
        "attr": "show-loader",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\"",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": true,
        "docs": "The select input size.\nPossible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "state",
        "type": "\"default\" | \"error\" | \"success\" | \"warning\"",
        "mutable": false,
        "attr": "state",
        "reflectToAttr": true,
        "docs": "The input state.\nPossible values are: `\"success\"`, `\"error\"`, `\"warning\"`, 'default'. Defaults to `\"default\"`.",
        "docsTags": [],
        "default": "'default'",
        "values": [
          {
            "value": "default",
            "type": "string"
          },
          {
            "value": "error",
            "type": "string"
          },
          {
            "value": "success",
            "type": "string"
          },
          {
            "value": "warning",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "number | string",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "The input field value.",
        "docsTags": [],
        "values": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "optional": true,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "getGid",
        "returns": {
          "type": "Promise<string>",
          "docs": ""
        },
        "signature": "getGid() => Promise<string>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      },
      {
        "name": "setBlur",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setBlur() => Promise<void>",
        "parameters": [],
        "docs": "Sets blur on the native `input` in `goat-input`. Use this method instead of the global\n`input.blur()`.",
        "docsTags": []
      },
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on the native `input` in `ion-input`. Use this method instead of the global\n`input.focus()`.",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:action-click",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the action button is clicked..",
        "docsTags": []
      },
      {
        "event": "goat:change",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the value has changed.",
        "docsTags": []
      },
      {
        "event": "goat:search",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when a keyboard input occurred.",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "click",
        "target": "window",
        "capture": false,
        "passive": false
      },
      {
        "event": "goat:menu-item-click",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {
      "name": "Select",
      "description": "Allows the user to select one or more options using a dropdown.",
      "img": "/assets/img/select.png"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/content/spinner",
    "filePath": "./src/components/content/spinner/goat-spinner.tsx",
    "fileName": "goat-spinner.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/content/spinner/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/content/spinner/usage",
    "tag": "goat-spinner",
    "readme": "# goat-spinner\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Spinner"
      },
      {
        "name": "description",
        "text": "Spinners provide a visual cue that an action is processing awaiting a course of change or a result."
      },
      {
        "name": "example",
        "text": "<goat-spinner class=\"rainbow\"></goat-spinner>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-button",
      "goat-select"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-button": [
        "goat-spinner"
      ],
      "goat-select": [
        "goat-spinner"
      ]
    },
    "props": [
      {
        "name": "size",
        "type": "string",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": false,
        "docs": "The Icon size.\nPossible values are: `\"sm\"`, `\"md\"`, `\"lg\"`, `\"xl\"` and size in pixel. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Spinner",
      "description": "Spinners provide a visual cue that an action is processing awaiting a course of change or a result.",
      "example": "<goat-spinner class=\"rainbow\"></goat-spinner>"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/tables/table",
    "filePath": "./src/components/tables/table/goat-table.tsx",
    "fileName": "goat-table.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/tables/table/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/tables/table/usage",
    "tag": "goat-table",
    "readme": "# goat-table\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Table"
      },
      {
        "name": "description",
        "text": "A configurable component for displaying tabular data."
      },
      {
        "name": "img",
        "text": "/assets/img/table.png"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-checkbox"
    ],
    "dependencyGraph": {
      "goat-table": [
        "goat-checkbox"
      ]
    },
    "props": [
      {
        "name": "columns",
        "type": "any[]",
        "mutable": false,
        "reflectToAttr": false,
        "docs": "Grid columns configuration.\n[\n{\n  \"name\":\"name\",\n  \"label\":\"Name\",\n  \"width\":300,\n  \"fixed\":true\n },\n{\n  \"name\":\"age\",\n  \"label\":\"Age\"\n}\n]",
        "docsTags": [],
        "default": "[]",
        "values": [
          {
            "type": "any[]"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "dataSource",
        "type": "any[]",
        "mutable": false,
        "reflectToAttr": false,
        "docs": "Grid data to display on table\n[{\n 'id': '5e7118ddce4b3d577956457f',\n 'age': 21,\n 'name': 'John',\n 'company': 'India',\n 'email': 'john@example.com',\n 'phone': '+1 (839) 560-3581',\n 'address': '326 Irving Street, Grimsley, Texas, 4048'\n }]",
        "docsTags": [],
        "default": "[]",
        "values": [
          {
            "type": "any[]"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "keyField",
        "type": "string",
        "mutable": false,
        "attr": "key-field",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'id'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "selectedRowKeys",
        "type": "string[]",
        "mutable": true,
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "[]",
        "values": [
          {
            "type": "string[]"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "selectionType",
        "type": "\"checkbox\"",
        "mutable": false,
        "attr": "selection-type",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "value": "checkbox",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [
      {
        "event": "goat:table-cell-click",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "",
        "docsTags": []
      },
      {
        "event": "goat:table-select-change",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Table",
      "description": "A configurable component for displaying tabular data.",
      "img": "/assets/img/table.png"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/content/text",
    "filePath": "./src/components/content/text/goat-text.tsx",
    "fileName": "goat-text.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/content/text/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/content/text/usage",
    "tag": "goat-text",
    "readme": "# goat-heading\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Text"
      },
      {
        "name": "description",
        "text": "Typography are used for rendering headlines, paragraphs and captions."
      },
      {
        "name": "example",
        "text": "<goat-text type=\"heading\" level=\"1\">Heading</goat-typography>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-select"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-select": [
        "goat-text"
      ]
    },
    "props": [
      {
        "name": "level",
        "type": "1 | 2 | 3 | 4 | 5",
        "mutable": false,
        "attr": "level",
        "reflectToAttr": false,
        "docs": "The heading level.",
        "docsTags": [],
        "default": "1",
        "values": [
          {
            "value": "1",
            "type": "number"
          },
          {
            "value": "2",
            "type": "number"
          },
          {
            "value": "3",
            "type": "number"
          },
          {
            "value": "4",
            "type": "number"
          },
          {
            "value": "5",
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "shade",
        "type": "\"primary\" | \"secondary\" | \"tertiary\"",
        "mutable": false,
        "attr": "shade",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "'primary'",
        "values": [
          {
            "value": "primary",
            "type": "string"
          },
          {
            "value": "secondary",
            "type": "string"
          },
          {
            "value": "tertiary",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\" | \"xl\" | \"xs\"",
        "mutable": true,
        "attr": "size",
        "reflectToAttr": true,
        "docs": "Text size.",
        "docsTags": [],
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          },
          {
            "value": "xl",
            "type": "string"
          },
          {
            "value": "xs",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "type",
        "type": "\"heading\" | \"paragraph\" | \"text\"",
        "mutable": false,
        "attr": "type",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "'text'",
        "values": [
          {
            "value": "heading",
            "type": "string"
          },
          {
            "value": "paragraph",
            "type": "string"
          },
          {
            "value": "text",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Text",
      "description": "Typography are used for rendering headlines, paragraphs and captions.",
      "example": "<goat-text type=\"heading\" level=\"1\">Heading</goat-typography>"
    }
  },
  {
    "dirPath": "D:/development/p4rm/@p4rm/ui/src/components/form/textarea",
    "filePath": "./src/components/form/textarea/goat-textarea.tsx",
    "fileName": "goat-textarea.tsx",
    "readmePath": "D:/development/p4rm/@p4rm/ui/src/components/form/textarea/readme.md",
    "usagesDir": "D:/development/p4rm/@p4rm/ui/src/components/form/textarea/usage",
    "tag": "goat-textarea",
    "readme": "# goat-textarea\n\n\n",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Textarea"
      },
      {
        "name": "description",
        "text": "Enables native inputs to be used within a Form field."
      },
      {
        "name": "example",
        "text": "<goat-textarea placeholder=\"Enter some description over here\"></goat-textarea>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-icon"
    ],
    "dependencyGraph": {
      "goat-textarea": [
        "goat-icon"
      ]
    },
    "props": [
      {
        "name": "clearable",
        "type": "boolean",
        "mutable": false,
        "attr": "clearable",
        "reflectToAttr": false,
        "docs": "If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "configAria",
        "type": "any",
        "mutable": true,
        "attr": "config-aria",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "{}",
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "debounce",
        "type": "number",
        "mutable": false,
        "attr": "debounce",
        "reflectToAttr": false,
        "docs": "Set the amount of time, in milliseconds, to wait to trigger the `goat:change` event after each keystroke.",
        "docsTags": [],
        "default": "300",
        "values": [
          {
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": false,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "name",
        "type": "string",
        "mutable": false,
        "attr": "name",
        "reflectToAttr": false,
        "docs": "The input field name.",
        "docsTags": [],
        "default": "`goat-input-${this.gid}`",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "placeholder",
        "type": "string",
        "mutable": false,
        "attr": "placeholder",
        "reflectToAttr": false,
        "docs": "The input field placeholder.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "required",
        "type": "boolean",
        "mutable": false,
        "attr": "required",
        "reflectToAttr": false,
        "docs": "If true, required icon is show. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\"",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": true,
        "docs": "The button size.\nPossible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "state",
        "type": "\"default\" | \"error\" | \"success\" | \"warning\"",
        "mutable": false,
        "attr": "state",
        "reflectToAttr": true,
        "docs": "The input state.\nPossible values are: `\"success\"`, `\"error\"`, `\"warning\"`, 'default'. Defaults to `\"default\"`.",
        "docsTags": [],
        "default": "'default'",
        "values": [
          {
            "value": "default",
            "type": "string"
          },
          {
            "value": "error",
            "type": "string"
          },
          {
            "value": "success",
            "type": "string"
          },
          {
            "value": "warning",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "string",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "The input field value.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "getGid",
        "returns": {
          "type": "Promise<string>",
          "docs": ""
        },
        "signature": "getGid() => Promise<string>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      },
      {
        "name": "setBlur",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setBlur() => Promise<void>",
        "parameters": [],
        "docs": "Sets blur on the native `input` in `ion-input`. Use this method instead of the global\n`input.blur()`.",
        "docsTags": []
      },
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on the native `input` in `ion-input`. Use this method instead of the global\n`input.focus()`.",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:action-click",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the action button is clicked.",
        "docsTags": []
      },
      {
        "event": "goat:blur",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the input loses focus.",
        "docsTags": []
      },
      {
        "event": "goat:change",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the value has changed..",
        "docsTags": []
      },
      {
        "event": "goat:focus",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the input has focus.",
        "docsTags": []
      },
      {
        "event": "goat:input",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when a keyboard input occurred.",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Textarea",
      "description": "Enables native inputs to be used within a Form field.",
      "example": "<goat-textarea placeholder=\"Enter some description over here\"></goat-textarea>"
    }
  }
]