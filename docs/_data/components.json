[
  {
    "dirPath": "D:/development/goatui/src/components/content/avatar",
    "filePath": "./src/components/content/avatar/avatar.tsx",
    "fileName": "avatar.tsx",
    "readmePath": "D:/development/goatui/src/components/content/avatar/readme.md",
    "usagesDir": "D:/development/goatui/src/components/content/avatar/usage",
    "tag": "goat-avatar",
    "readme": "# goat-avatar\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Avatar"
      },
      {
        "name": "description",
        "text": "Avatars in their simplest form display content within a circular container."
      },
      {
        "name": "example",
        "text": "<goat-avatar size=\"5rem\" name=\"Shivaji Varma\" src=\"/assets/img/avatar.png\"></goat-avatar>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "name",
        "type": "string",
        "mutable": false,
        "attr": "name",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "string",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": false,
        "docs": "Avatar size.",
        "docsTags": [],
        "default": "'2rem'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "src",
        "type": "string",
        "mutable": false,
        "attr": "src",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Avatar",
      "description": "Avatars in their simplest form display content within a circular container.",
      "example": "<goat-avatar size=\"5rem\" name=\"Shivaji Varma\" src=\"/assets/img/avatar.png\"></goat-avatar>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/content/badge",
    "filePath": "./src/components/content/badge/badge.tsx",
    "fileName": "badge.tsx",
    "readmePath": "D:/development/goatui/src/components/content/badge/readme.md",
    "usagesDir": "D:/development/goatui/src/components/content/badge/usage",
    "tag": "goat-badge",
    "readme": "# goat-icon\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Badge"
      },
      {
        "name": "description",
        "text": "Renders a specified badge."
      },
      {
        "name": "example",
        "text": "<goat-badge content=\"5\" class='color-error'> <goat-icon name=\"bell\"></goat-icon></goat-badge>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "content",
        "type": "string",
        "mutable": false,
        "attr": "content",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Badge",
      "description": "Renders a specified badge.",
      "example": "<goat-badge content=\"5\" class='color-error'> <goat-icon name=\"bell\"></goat-icon></goat-badge>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/controls/button",
    "filePath": "./src/components/controls/button/button.tsx",
    "fileName": "button.tsx",
    "readmePath": "D:/development/goatui/src/components/controls/button/readme.md",
    "usagesDir": "D:/development/goatui/src/components/controls/button/usage",
    "tag": "goat-button",
    "readme": "# goat-button\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Button"
      },
      {
        "name": "description",
        "text": "An interactive button with a range of presentation options."
      },
      {
        "name": "example",
        "text": "<goat-button>\r\nButton CTA\r\n</goat-button>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-code-highlighter",
      "goat-empty-state",
      "goat-header",
      "goat-notification",
      "goat-table"
    ],
    "dependencies": [
      "goat-icon",
      "goat-spinner"
    ],
    "dependencyGraph": {
      "goat-button": [
        "goat-icon",
        "goat-spinner"
      ],
      "goat-code-highlighter": [
        "goat-button"
      ],
      "goat-empty-state": [
        "goat-button"
      ],
      "goat-header": [
        "goat-button"
      ],
      "goat-notification": [
        "goat-button"
      ],
      "goat-table": [
        "goat-button"
      ]
    },
    "props": [
      {
        "name": "block",
        "type": "boolean",
        "mutable": false,
        "attr": "block",
        "reflectToAttr": true,
        "docs": "If true, fits button width to its parent width. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "configAria",
        "type": "any",
        "mutable": true,
        "attr": "config-aria",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "{}",
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabledReason",
        "type": "string",
        "mutable": false,
        "attr": "disabled-reason",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "href",
        "type": "string",
        "mutable": false,
        "attr": "href",
        "reflectToAttr": false,
        "docs": "Hyperlink to navigate to on click.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "icon",
        "type": "string",
        "mutable": false,
        "attr": "icon",
        "reflectToAttr": false,
        "docs": "Icon which will displayed on button.\r\nPossible values are bootstrap icon names.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "iconEnd",
        "type": "boolean",
        "mutable": false,
        "attr": "icon-end",
        "reflectToAttr": false,
        "docs": "Icon position.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "selected",
        "type": "boolean",
        "mutable": false,
        "attr": "selected",
        "reflectToAttr": true,
        "docs": "Button selection state.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "showLoader",
        "type": "boolean",
        "mutable": false,
        "attr": "show-loader",
        "reflectToAttr": false,
        "docs": "Show loader.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\" | \"xl\" | \"xxl\"",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": false,
        "docs": "Button size.\r\nPossible values are `\"sm\"`, `\"md\"`, `\"lg\"`, `\"xl\"`, `\"xxl\"`. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          },
          {
            "value": "xl",
            "type": "string"
          },
          {
            "value": "xxl",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "target",
        "type": "string",
        "mutable": false,
        "attr": "target",
        "reflectToAttr": false,
        "docs": "Sets or retrieves the window or frame at which to target content.",
        "docsTags": [],
        "default": "'_self'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "variant",
        "type": "\"default\" | \"ghost\" | \"light\" | \"link\" | \"outline\"",
        "mutable": false,
        "attr": "variant",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'default'",
        "values": [
          {
            "value": "default",
            "type": "string"
          },
          {
            "value": "ghost",
            "type": "string"
          },
          {
            "value": "light",
            "type": "string"
          },
          {
            "value": "link",
            "type": "string"
          },
          {
            "value": "outline",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      },
      {
        "name": "triggerClick",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "triggerClick() => Promise<void>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:click",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "On click of button, a CustomEvent 'goat:click' will be triggered.",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "mouseup",
        "target": "window",
        "capture": false,
        "passive": true
      },
      {
        "event": "keyup",
        "target": "window",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {
      "name": "Button",
      "description": "An interactive button with a range of presentation options.",
      "example": "<goat-button>\r\nButton CTA\r\n</goat-button>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/controls/button-group",
    "filePath": "./src/components/controls/button-group/button-group.tsx",
    "fileName": "button-group.tsx",
    "readmePath": "D:/development/goatui/src/components/controls/button-group/readme.md",
    "usagesDir": "D:/development/goatui/src/components/controls/button-group/usage",
    "tag": "goat-button-group",
    "readme": "# goat-button-group\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Button Group"
      },
      {
        "name": "description",
        "text": "An interactive button with a range of presentation options."
      },
      {
        "name": "example",
        "text": "<goat-button-group><goat-button>\r\nButton CTA\r\n</goat-button><goat-button>\r\nButton CTA\r\n</goat-button></goat-button-group>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Button Group",
      "description": "An interactive button with a range of presentation options.",
      "example": "<goat-button-group><goat-button>\r\nButton CTA\r\n</goat-button><goat-button>\r\nButton CTA\r\n</goat-button></goat-button-group>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/flow-designer/canvas",
    "filePath": "./src/components/flow-designer/canvas/canvas.tsx",
    "fileName": "canvas.tsx",
    "readmePath": "D:/development/goatui/src/components/flow-designer/canvas/readme.md",
    "usagesDir": "D:/development/goatui/src/components/flow-designer/canvas/usage",
    "tag": "goat-canvas",
    "readme": "# goat-flow-designer\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [],
    "encapsulation": "shadow",
    "dependents": [
      "goat-flow-designer"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-flow-designer": [
        "goat-canvas"
      ]
    },
    "props": [
      {
        "name": "lines",
        "type": "any[]",
        "mutable": false,
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "[]",
        "values": [
          {
            "type": "any[]"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "padding",
        "type": "number",
        "mutable": false,
        "attr": "padding",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "2",
        "values": [
          {
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "unitSize",
        "type": "number",
        "mutable": false,
        "attr": "unit-size",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "16",
        "values": [
          {
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "viewbox",
        "type": "string",
        "mutable": false,
        "attr": "viewbox",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": true,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {}
  },
  {
    "dirPath": "D:/development/goatui/src/components/content/card",
    "filePath": "./src/components/content/card/card.tsx",
    "fileName": "card.tsx",
    "readmePath": "D:/development/goatui/src/components/content/card/readme.md",
    "usagesDir": "D:/development/goatui/src/components/content/card/usage",
    "tag": "goat-card",
    "readme": "# goat-heading\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "shadowLevel",
        "type": "\"lg\" | \"md\" | \"sm\" | \"xl\" | \"xs\" | \"xxl\"",
        "mutable": false,
        "attr": "shadow-level",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          },
          {
            "value": "xl",
            "type": "string"
          },
          {
            "value": "xs",
            "type": "string"
          },
          {
            "value": "xxl",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {}
  },
  {
    "dirPath": "D:/development/goatui/src/components/form/checkbox",
    "filePath": "./src/components/form/checkbox/checkbox.tsx",
    "fileName": "checkbox.tsx",
    "readmePath": "D:/development/goatui/src/components/form/checkbox/readme.md",
    "usagesDir": "D:/development/goatui/src/components/form/checkbox/usage",
    "tag": "goat-checkbox",
    "readme": "# goat-checkbox\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Checkbox"
      },
      {
        "name": "description",
        "text": "Captures boolean input with an optional indeterminate mode."
      },
      {
        "name": "example",
        "text": "<goat-checkbox value='true'>Want ice cream?</goat-checkbox>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-table"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-table": [
        "goat-checkbox"
      ]
    },
    "props": [
      {
        "name": "configAria",
        "type": "any",
        "mutable": true,
        "attr": "config-aria",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "{}",
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "intermediate",
        "type": "boolean",
        "mutable": true,
        "attr": "intermediate",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "label",
        "type": "string",
        "mutable": false,
        "attr": "label",
        "reflectToAttr": false,
        "docs": "The checkbox label.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "name",
        "type": "string",
        "mutable": false,
        "attr": "name",
        "reflectToAttr": false,
        "docs": "The input field name.",
        "docsTags": [],
        "default": "`goat-input-${this.gid}`",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "readonly",
        "type": "boolean",
        "mutable": false,
        "attr": "readonly",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "required",
        "type": "boolean",
        "mutable": false,
        "attr": "required",
        "reflectToAttr": true,
        "docs": "If true, required icon is show. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "rounded",
        "type": "boolean",
        "mutable": false,
        "attr": "rounded",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\"",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": false,
        "docs": "The button size.\r\nPossible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "boolean",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "The input field value.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "getComponentId",
        "returns": {
          "type": "Promise<string>",
          "docs": ""
        },
        "signature": "getComponentId() => Promise<string>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      },
      {
        "name": "setBlur",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setBlur() => Promise<void>",
        "parameters": [],
        "docs": "Sets blur on the native `input` in `goat-input`. Use this method instead of the global\r\n`input.blur()`.",
        "docsTags": []
      },
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on the native `input` in `goat-input`. Use this method instead of the global\r\n`input.focus()`.",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:blur",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the input loses focus.",
        "docsTags": []
      },
      {
        "event": "goat:change",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "On change of input a CustomEvent 'goat:change' will be triggered. Event details contains parent event, oldValue, newValue of input.",
        "docsTags": []
      },
      {
        "event": "goat:focus",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the input has focus.",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "mouseup",
        "target": "window",
        "capture": false,
        "passive": true
      },
      {
        "event": "keyup",
        "target": "window",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {
      "name": "Checkbox",
      "description": "Captures boolean input with an optional indeterminate mode.",
      "example": "<goat-checkbox value='true'>Want ice cream?</goat-checkbox>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/form/code-editor",
    "filePath": "./src/components/form/code-editor/code-editor.tsx",
    "fileName": "code-editor.tsx",
    "readmePath": "D:/development/goatui/src/components/form/code-editor/readme.md",
    "usagesDir": "D:/development/goatui/src/components/form/code-editor/usage",
    "tag": "goat-code-editor",
    "readme": "# goat-code-editor\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Code Editor"
      },
      {
        "name": "description",
        "text": "A browser based code editor."
      },
      {
        "name": "img",
        "text": "/assets/img/code-editor.png"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-spinner"
    ],
    "dependencyGraph": {
      "goat-code-editor": [
        "goat-spinner"
      ]
    },
    "props": [
      {
        "name": "debounce",
        "type": "number",
        "mutable": false,
        "attr": "debounce",
        "reflectToAttr": false,
        "docs": "Set the amount of time, in milliseconds, to wait to trigger the `onChange` event after each keystroke.",
        "docsTags": [],
        "default": "250",
        "values": [
          {
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "language",
        "type": "\"html\" | \"javascript\" | \"json\"",
        "mutable": false,
        "attr": "language",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'javascript'",
        "values": [
          {
            "value": "html",
            "type": "string"
          },
          {
            "value": "javascript",
            "type": "string"
          },
          {
            "value": "json",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "lineNumbers",
        "type": "\"off\" | \"on\"",
        "mutable": false,
        "attr": "line-numbers",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'on'",
        "values": [
          {
            "value": "off",
            "type": "string"
          },
          {
            "value": "on",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "name",
        "type": "string",
        "mutable": false,
        "attr": "name",
        "reflectToAttr": false,
        "docs": "The input field name.",
        "docsTags": [],
        "default": "`goat-input-${this.gid}`",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "readonly",
        "type": "boolean",
        "mutable": false,
        "attr": "readonly",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "required",
        "type": "boolean",
        "mutable": false,
        "attr": "required",
        "reflectToAttr": true,
        "docs": "If true, required icon is show. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "theme",
        "type": "\"vs-dark\" | \"vs-light\"",
        "mutable": false,
        "attr": "theme",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'vs-light'",
        "values": [
          {
            "value": "vs-dark",
            "type": "string"
          },
          {
            "value": "vs-light",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "string",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "The input field value.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "getComponentId",
        "returns": {
          "type": "Promise<string>",
          "docs": ""
        },
        "signature": "getComponentId() => Promise<string>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      },
      {
        "name": "setBlur",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setBlur() => Promise<void>",
        "parameters": [],
        "docs": "Sets blur on the native `input` in `goat-input`. Use this method instead of the global\r\n`input.blur()`.",
        "docsTags": []
      },
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on the native `input` in `goat-input`. Use this method instead of the global\r\n`input.focus()`.",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:change",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the value has changed..",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Code Editor",
      "description": "A browser based code editor.",
      "img": "/assets/img/code-editor.png"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/content/code-highlighter",
    "filePath": "./src/components/content/code-highlighter/code-highlighter.tsx",
    "fileName": "code-highlighter.tsx",
    "readmePath": "D:/development/goatui/src/components/content/code-highlighter/readme.md",
    "usagesDir": "D:/development/goatui/src/components/content/code-highlighter/usage",
    "tag": "goat-code-highlighter",
    "readme": "# goat-code-editor\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Code Highlighter"
      },
      {
        "name": "description",
        "text": "A browser based code highlighter."
      },
      {
        "name": "img",
        "text": "/assets/img/code-highlighter.png"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-button",
      "goat-spinner"
    ],
    "dependencyGraph": {
      "goat-code-highlighter": [
        "goat-button",
        "goat-spinner"
      ],
      "goat-button": [
        "goat-icon",
        "goat-spinner"
      ]
    },
    "props": [
      {
        "name": "language",
        "type": "\"markup\" | \"css\" | \"clike\" | \"javascript\" | \"abap\" | \"actionscript\" | \"ada\" | \"apacheconf\" | \"apl\" | \"applescript\" | \"arduino\" | \"arff\" | \"asciidoc\" | \"asm6502\" | \"aspnet\" | \"autohotkey\" | \"autoit\" | \"bash\" | \"basic\" | \"batch\" | \"bison\" | \"brainfuck\" | \"bro\" | \"c\" | \"csharp\" | \"cpp\" | \"coffeescript\" | \"clojure\" | \"crystal\" | \"csp\" | \"css-extras\" | \"d\" | \"dart\" | \"diff\" | \"django\" | \"docker\" | \"eiffel\" | \"elixir\" | \"elm\" | \"erb\" | \"erlang\" | \"fsharp\" | \"flow\" | \"fortran\" | \"gedcom\" | \"gherkin\" | \"git\" | \"glsl\" | \"gml\" | \"go\" | \"graphql\" | \"groovy\" | \"haml\" | \"handlebars\" | \"haskell\" | \"haxe\" | \"http\" | \"hpkp\" | \"hsts\" | \"ichigojam\" | \"icon\" | \"inform7\" | \"ini\" | \"io\" | \"j\" | \"java\" | \"jolie\" | \"json\" | \"julia\" | \"keyman\" | \"kotlin\" | \"latex\" | \"less\" | \"liquid\" | \"lisp\" | \"livescript\" | \"lolcode\" | \"lua\" | \"makefile\" | \"markdown\" | \"markup-templating\" | \"matlab\" | \"mel\" | \"mizar\" | \"monkey\" | \"n4js\" | \"nasm\" | \"nginx\" | \"nim\" | \"nix\" | \"nsis\" | \"objectivec\" | \"ocaml\" | \"opencl\" | \"oz\" | \"parigp\" | \"parser\" | \"pascal\" | \"perl\" | \"php\" | \"php-extras\" | \"plsql\" | \"powershell\" | \"processing\" | \"prolog\" | \"properties\" | \"protobuf\" | \"pug\" | \"puppet\" | \"pure\" | \"python\" | \"q\" | \"qore\" | \"r\" | \"jsx\" | \"tsx\" | \"renpy\" | \"reason\" | \"rest\" | \"rip\" | \"roboconf\" | \"ruby\" | \"rust\" | \"sas\" | \"sass\" | \"scss\" | \"scala\" | \"scheme\" | \"smalltalk\" | \"smarty\" | \"sql\" | \"soy\" | \"stylus\" | \"swift\" | \"tap\" | \"tcl\" | \"textile\" | \"tt2\" | \"twig\" | \"typescript\" | \"vbnet\" | \"velocity\" | \"verilog\" | \"vhdl\" | \"vim\" | \"visual-basic\" | \"wasm\" | \"wiki\" | \"xeora\" | \"xojo\" | \"xquery\" | \"yaml\"",
        "mutable": false,
        "attr": "language",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'javascript'",
        "values": [
          {
            "value": "markup",
            "type": "string"
          },
          {
            "value": "css",
            "type": "string"
          },
          {
            "value": "clike",
            "type": "string"
          },
          {
            "value": "javascript",
            "type": "string"
          },
          {
            "value": "abap",
            "type": "string"
          },
          {
            "value": "actionscript",
            "type": "string"
          },
          {
            "value": "ada",
            "type": "string"
          },
          {
            "value": "apacheconf",
            "type": "string"
          },
          {
            "value": "apl",
            "type": "string"
          },
          {
            "value": "applescript",
            "type": "string"
          },
          {
            "value": "arduino",
            "type": "string"
          },
          {
            "value": "arff",
            "type": "string"
          },
          {
            "value": "asciidoc",
            "type": "string"
          },
          {
            "value": "asm6502",
            "type": "string"
          },
          {
            "value": "aspnet",
            "type": "string"
          },
          {
            "value": "autohotkey",
            "type": "string"
          },
          {
            "value": "autoit",
            "type": "string"
          },
          {
            "value": "bash",
            "type": "string"
          },
          {
            "value": "basic",
            "type": "string"
          },
          {
            "value": "batch",
            "type": "string"
          },
          {
            "value": "bison",
            "type": "string"
          },
          {
            "value": "brainfuck",
            "type": "string"
          },
          {
            "value": "bro",
            "type": "string"
          },
          {
            "value": "c",
            "type": "string"
          },
          {
            "value": "csharp",
            "type": "string"
          },
          {
            "value": "cpp",
            "type": "string"
          },
          {
            "value": "coffeescript",
            "type": "string"
          },
          {
            "value": "clojure",
            "type": "string"
          },
          {
            "value": "crystal",
            "type": "string"
          },
          {
            "value": "csp",
            "type": "string"
          },
          {
            "value": "css-extras",
            "type": "string"
          },
          {
            "value": "d",
            "type": "string"
          },
          {
            "value": "dart",
            "type": "string"
          },
          {
            "value": "diff",
            "type": "string"
          },
          {
            "value": "django",
            "type": "string"
          },
          {
            "value": "docker",
            "type": "string"
          },
          {
            "value": "eiffel",
            "type": "string"
          },
          {
            "value": "elixir",
            "type": "string"
          },
          {
            "value": "elm",
            "type": "string"
          },
          {
            "value": "erb",
            "type": "string"
          },
          {
            "value": "erlang",
            "type": "string"
          },
          {
            "value": "fsharp",
            "type": "string"
          },
          {
            "value": "flow",
            "type": "string"
          },
          {
            "value": "fortran",
            "type": "string"
          },
          {
            "value": "gedcom",
            "type": "string"
          },
          {
            "value": "gherkin",
            "type": "string"
          },
          {
            "value": "git",
            "type": "string"
          },
          {
            "value": "glsl",
            "type": "string"
          },
          {
            "value": "gml",
            "type": "string"
          },
          {
            "value": "go",
            "type": "string"
          },
          {
            "value": "graphql",
            "type": "string"
          },
          {
            "value": "groovy",
            "type": "string"
          },
          {
            "value": "haml",
            "type": "string"
          },
          {
            "value": "handlebars",
            "type": "string"
          },
          {
            "value": "haskell",
            "type": "string"
          },
          {
            "value": "haxe",
            "type": "string"
          },
          {
            "value": "http",
            "type": "string"
          },
          {
            "value": "hpkp",
            "type": "string"
          },
          {
            "value": "hsts",
            "type": "string"
          },
          {
            "value": "ichigojam",
            "type": "string"
          },
          {
            "value": "icon",
            "type": "string"
          },
          {
            "value": "inform7",
            "type": "string"
          },
          {
            "value": "ini",
            "type": "string"
          },
          {
            "value": "io",
            "type": "string"
          },
          {
            "value": "j",
            "type": "string"
          },
          {
            "value": "java",
            "type": "string"
          },
          {
            "value": "jolie",
            "type": "string"
          },
          {
            "value": "json",
            "type": "string"
          },
          {
            "value": "julia",
            "type": "string"
          },
          {
            "value": "keyman",
            "type": "string"
          },
          {
            "value": "kotlin",
            "type": "string"
          },
          {
            "value": "latex",
            "type": "string"
          },
          {
            "value": "less",
            "type": "string"
          },
          {
            "value": "liquid",
            "type": "string"
          },
          {
            "value": "lisp",
            "type": "string"
          },
          {
            "value": "livescript",
            "type": "string"
          },
          {
            "value": "lolcode",
            "type": "string"
          },
          {
            "value": "lua",
            "type": "string"
          },
          {
            "value": "makefile",
            "type": "string"
          },
          {
            "value": "markdown",
            "type": "string"
          },
          {
            "value": "markup-templating",
            "type": "string"
          },
          {
            "value": "matlab",
            "type": "string"
          },
          {
            "value": "mel",
            "type": "string"
          },
          {
            "value": "mizar",
            "type": "string"
          },
          {
            "value": "monkey",
            "type": "string"
          },
          {
            "value": "n4js",
            "type": "string"
          },
          {
            "value": "nasm",
            "type": "string"
          },
          {
            "value": "nginx",
            "type": "string"
          },
          {
            "value": "nim",
            "type": "string"
          },
          {
            "value": "nix",
            "type": "string"
          },
          {
            "value": "nsis",
            "type": "string"
          },
          {
            "value": "objectivec",
            "type": "string"
          },
          {
            "value": "ocaml",
            "type": "string"
          },
          {
            "value": "opencl",
            "type": "string"
          },
          {
            "value": "oz",
            "type": "string"
          },
          {
            "value": "parigp",
            "type": "string"
          },
          {
            "value": "parser",
            "type": "string"
          },
          {
            "value": "pascal",
            "type": "string"
          },
          {
            "value": "perl",
            "type": "string"
          },
          {
            "value": "php",
            "type": "string"
          },
          {
            "value": "php-extras",
            "type": "string"
          },
          {
            "value": "plsql",
            "type": "string"
          },
          {
            "value": "powershell",
            "type": "string"
          },
          {
            "value": "processing",
            "type": "string"
          },
          {
            "value": "prolog",
            "type": "string"
          },
          {
            "value": "properties",
            "type": "string"
          },
          {
            "value": "protobuf",
            "type": "string"
          },
          {
            "value": "pug",
            "type": "string"
          },
          {
            "value": "puppet",
            "type": "string"
          },
          {
            "value": "pure",
            "type": "string"
          },
          {
            "value": "python",
            "type": "string"
          },
          {
            "value": "q",
            "type": "string"
          },
          {
            "value": "qore",
            "type": "string"
          },
          {
            "value": "r",
            "type": "string"
          },
          {
            "value": "jsx",
            "type": "string"
          },
          {
            "value": "tsx",
            "type": "string"
          },
          {
            "value": "renpy",
            "type": "string"
          },
          {
            "value": "reason",
            "type": "string"
          },
          {
            "value": "rest",
            "type": "string"
          },
          {
            "value": "rip",
            "type": "string"
          },
          {
            "value": "roboconf",
            "type": "string"
          },
          {
            "value": "ruby",
            "type": "string"
          },
          {
            "value": "rust",
            "type": "string"
          },
          {
            "value": "sas",
            "type": "string"
          },
          {
            "value": "sass",
            "type": "string"
          },
          {
            "value": "scss",
            "type": "string"
          },
          {
            "value": "scala",
            "type": "string"
          },
          {
            "value": "scheme",
            "type": "string"
          },
          {
            "value": "smalltalk",
            "type": "string"
          },
          {
            "value": "smarty",
            "type": "string"
          },
          {
            "value": "sql",
            "type": "string"
          },
          {
            "value": "soy",
            "type": "string"
          },
          {
            "value": "stylus",
            "type": "string"
          },
          {
            "value": "swift",
            "type": "string"
          },
          {
            "value": "tap",
            "type": "string"
          },
          {
            "value": "tcl",
            "type": "string"
          },
          {
            "value": "textile",
            "type": "string"
          },
          {
            "value": "tt2",
            "type": "string"
          },
          {
            "value": "twig",
            "type": "string"
          },
          {
            "value": "typescript",
            "type": "string"
          },
          {
            "value": "vbnet",
            "type": "string"
          },
          {
            "value": "velocity",
            "type": "string"
          },
          {
            "value": "verilog",
            "type": "string"
          },
          {
            "value": "vhdl",
            "type": "string"
          },
          {
            "value": "vim",
            "type": "string"
          },
          {
            "value": "visual-basic",
            "type": "string"
          },
          {
            "value": "wasm",
            "type": "string"
          },
          {
            "value": "wiki",
            "type": "string"
          },
          {
            "value": "xeora",
            "type": "string"
          },
          {
            "value": "xojo",
            "type": "string"
          },
          {
            "value": "xquery",
            "type": "string"
          },
          {
            "value": "yaml",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "lineNumbers",
        "type": "boolean",
        "mutable": false,
        "attr": "line-numbers",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "string",
        "mutable": false,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Code Highlighter",
      "description": "A browser based code highlighter.",
      "img": "/assets/img/code-highlighter.png"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/goat-date-picker",
    "filePath": "./src/components/goat-date-picker/goat-date-picker.tsx",
    "fileName": "goat-date-picker.tsx",
    "readmePath": "D:/development/goatui/src/components/goat-date-picker/readme.md",
    "usagesDir": "D:/development/goatui/src/components/goat-date-picker/usage",
    "tag": "goat-date-picker",
    "usage": {},
    "docs": "",
    "docsTags": [],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {}
  },
  {
    "dirPath": "D:/development/goatui/src/components/content/divider",
    "filePath": "./src/components/content/divider/divider.tsx",
    "fileName": "divider.tsx",
    "readmePath": "D:/development/goatui/src/components/content/divider/readme.md",
    "usagesDir": "D:/development/goatui/src/components/content/divider/usage",
    "tag": "goat-divider",
    "readme": "# goat-heading\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Divider"
      },
      {
        "name": "description",
        "text": "A divider can be used to segment content vertically or horizontally."
      },
      {
        "name": "example",
        "text": "<goat-divider style=\"width: 12rem;\">or</goat-divider>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-header"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-header": [
        "goat-divider"
      ]
    },
    "props": [
      {
        "name": "vertical",
        "type": "boolean",
        "mutable": false,
        "attr": "vertical",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Divider",
      "description": "A divider can be used to segment content vertically or horizontally.",
      "example": "<goat-divider style=\"width: 12rem;\">or</goat-divider>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/menu/dropdown",
    "filePath": "./src/components/menu/dropdown/dropdown.tsx",
    "fileName": "dropdown.tsx",
    "readmePath": "D:/development/goatui/src/components/menu/dropdown/readme.md",
    "usagesDir": "D:/development/goatui/src/components/menu/dropdown/usage",
    "tag": "goat-dropdown",
    "readme": "# goat-dropdown\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Dropdown"
      },
      {
        "name": "description",
        "text": "Enables native inputs to be used within a Form field."
      },
      {
        "name": "img",
        "text": "/assets/img/dropdown.png"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-menu",
      "goat-menu-item",
      "goat-icon"
    ],
    "dependencyGraph": {
      "goat-dropdown": [
        "goat-menu",
        "goat-menu-item",
        "goat-icon"
      ],
      "goat-menu": [
        "goat-empty-state"
      ],
      "goat-empty-state": [
        "goat-svg",
        "goat-button"
      ],
      "goat-button": [
        "goat-icon",
        "goat-spinner"
      ]
    },
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": false,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "isOpen",
        "type": "boolean",
        "mutable": true,
        "attr": "is-open",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "items",
        "type": "any[]",
        "mutable": false,
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "null",
        "values": [
          {
            "type": "any[]"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "positions",
        "type": "string",
        "mutable": false,
        "attr": "positions",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'bottom-right,top-right,bottom-left,top-left'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\"",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": false,
        "docs": "The button size.\r\nPossible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus(elm?: HTMLElement) => Promise<void>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      }
    ],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "click",
        "target": "window",
        "capture": false,
        "passive": false
      },
      {
        "event": "goat:menu-item-click",
        "target": "window",
        "capture": false,
        "passive": false
      },
      {
        "event": "goat:click",
        "target": "window",
        "capture": false,
        "passive": false
      },
      {
        "event": "keydown",
        "target": "window",
        "capture": false,
        "passive": false
      },
      {
        "event": "scroll",
        "target": "window",
        "capture": false,
        "passive": true
      }
    ],
    "metadata": {
      "name": "Dropdown",
      "description": "Enables native inputs to be used within a Form field.",
      "img": "/assets/img/dropdown.png"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/content/empty-state",
    "filePath": "./src/components/content/empty-state/empty-state.tsx",
    "fileName": "empty-state.tsx",
    "readmePath": "D:/development/goatui/src/components/content/empty-state/readme.md",
    "usagesDir": "D:/development/goatui/src/components/content/empty-state/usage",
    "tag": "goat-empty-state",
    "readme": "# goat-heading\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Empty State"
      },
      {
        "name": "description",
        "text": "A message that displays when there is no information to display."
      },
      {
        "name": "example",
        "text": "<goat-empty-state class=\"content-center\" headline=\"Empty list\" description=\"Nothing to display\">\r\n</goat-empty-state>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-menu",
      "goat-sidenav-menu",
      "goat-table"
    ],
    "dependencies": [
      "goat-svg",
      "goat-button"
    ],
    "dependencyGraph": {
      "goat-empty-state": [
        "goat-svg",
        "goat-button"
      ],
      "goat-button": [
        "goat-icon",
        "goat-spinner"
      ],
      "goat-menu": [
        "goat-empty-state"
      ],
      "goat-sidenav-menu": [
        "goat-empty-state"
      ],
      "goat-table": [
        "goat-empty-state"
      ]
    },
    "props": [
      {
        "name": "action",
        "type": "string",
        "mutable": false,
        "attr": "action",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "actionDisabled",
        "type": "boolean",
        "mutable": false,
        "attr": "action-disabled",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "actionUrl",
        "type": "string",
        "mutable": false,
        "attr": "action-url",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "actionVariant",
        "type": "\"default\" | \"ghost\" | \"light\" | \"link\" | \"outline\"",
        "mutable": false,
        "attr": "action-variant",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'default'",
        "values": [
          {
            "value": "default",
            "type": "string"
          },
          {
            "value": "ghost",
            "type": "string"
          },
          {
            "value": "light",
            "type": "string"
          },
          {
            "value": "link",
            "type": "string"
          },
          {
            "value": "outline",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "description",
        "type": "string",
        "mutable": false,
        "attr": "description",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "headline",
        "type": "string",
        "mutable": false,
        "attr": "headline",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "illustration",
        "type": "\"no-document\"",
        "mutable": false,
        "attr": "illustration",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "'no-document'",
        "values": [
          {
            "value": "no-document",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "resize",
        "target": "window",
        "capture": false,
        "passive": true
      }
    ],
    "metadata": {
      "name": "Empty State",
      "description": "A message that displays when there is no information to display.",
      "example": "<goat-empty-state class=\"content-center\" headline=\"Empty list\" description=\"Nothing to display\">\r\n</goat-empty-state>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/flow-designer/flow-designer",
    "filePath": "./src/components/flow-designer/flow-designer/flow-designer.tsx",
    "fileName": "flow-designer.tsx",
    "readmePath": "D:/development/goatui/src/components/flow-designer/flow-designer/readme.md",
    "usagesDir": "D:/development/goatui/src/components/flow-designer/flow-designer/usage",
    "tag": "goat-flow-designer",
    "readme": "# goat-flow-designer\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Flow Designer"
      },
      {
        "name": "description",
        "text": "An interactive button with a range of presentation options."
      },
      {
        "name": "example",
        "text": "<goat-flow-designer>\r\n</goat-flow-designer>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-canvas"
    ],
    "dependencyGraph": {
      "goat-flow-designer": [
        "goat-canvas"
      ]
    },
    "props": [
      {
        "name": "activities",
        "type": "any[]",
        "mutable": false,
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "[]",
        "values": [
          {
            "type": "any[]"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "blockSize",
        "type": "number",
        "mutable": false,
        "attr": "block-size",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "10",
        "values": [
          {
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "mouseup",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {
      "name": "Flow Designer",
      "description": "An interactive button with a range of presentation options.",
      "example": "<goat-flow-designer>\r\n</goat-flow-designer>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/form/form-control",
    "filePath": "./src/components/form/form-control/form-control.tsx",
    "fileName": "form-control.tsx",
    "readmePath": "D:/development/goatui/src/components/form/form-control/readme.md",
    "usagesDir": "D:/development/goatui/src/components/form/form-control/usage",
    "tag": "goat-form-control",
    "readme": "# goat-field-group\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Form Control"
      },
      {
        "name": "description",
        "text": "The Form Control component adds a label and caption for its child control."
      },
      {
        "name": "example",
        "text": "<goat-form-control label='Full Name' required>\r\n<goat-input type='text'></goat-input>\r\n</goat-form-control>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-table"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-table": [
        "goat-form-control"
      ]
    },
    "props": [
      {
        "name": "caption",
        "type": "string",
        "mutable": false,
        "attr": "caption",
        "reflectToAttr": false,
        "docs": "The caption for the form control.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "error",
        "type": "string",
        "mutable": false,
        "attr": "error",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "inline",
        "type": "boolean",
        "mutable": false,
        "attr": "inline",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "label",
        "type": "string",
        "mutable": false,
        "attr": "label",
        "reflectToAttr": false,
        "docs": "The label for the form control.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "required",
        "type": "boolean",
        "mutable": false,
        "attr": "required",
        "reflectToAttr": false,
        "docs": "Whether the form control is required.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "success",
        "type": "string",
        "mutable": false,
        "attr": "success",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "warning",
        "type": "string",
        "mutable": false,
        "attr": "warning",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Form Control",
      "description": "The Form Control component adds a label and caption for its child control.",
      "example": "<goat-form-control label='Full Name' required>\r\n<goat-input type='text'></goat-input>\r\n</goat-form-control>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/navigation/header",
    "filePath": "./src/components/navigation/header/header.tsx",
    "fileName": "header.tsx",
    "readmePath": "D:/development/goatui/src/components/navigation/header/readme.md",
    "usagesDir": "D:/development/goatui/src/components/navigation/header/usage",
    "tag": "goat-header",
    "readme": "# p4-top-navigation\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Header"
      },
      {
        "name": "description",
        "text": "Headers are compositions that extend standard navbar functionalities."
      },
      {
        "name": "img",
        "text": "/assets/img/header.png"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-button",
      "goat-svg",
      "goat-divider"
    ],
    "dependencyGraph": {
      "goat-header": [
        "goat-button",
        "goat-svg",
        "goat-divider"
      ],
      "goat-button": [
        "goat-icon",
        "goat-spinner"
      ]
    },
    "props": [
      {
        "name": "brandLogo",
        "type": "string",
        "mutable": false,
        "attr": "brand-logo",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "brandName",
        "type": "string",
        "mutable": false,
        "attr": "brand-name",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "brandUrl",
        "type": "string",
        "mutable": false,
        "attr": "brand-url",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'#'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "pageTitle",
        "type": "string",
        "mutable": false,
        "attr": "page-title",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "type",
        "type": "\"simple\"",
        "mutable": false,
        "attr": "type",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'simple'",
        "values": [
          {
            "value": "simple",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Header",
      "description": "Headers are compositions that extend standard navbar functionalities.",
      "img": "/assets/img/header.png"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/content/icon",
    "filePath": "./src/components/content/icon/icon.tsx",
    "fileName": "icon.tsx",
    "readmePath": "D:/development/goatui/src/components/content/icon/readme.md",
    "usagesDir": "D:/development/goatui/src/components/content/icon/usage",
    "tag": "goat-icon",
    "readme": "# goat-icon\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Icon"
      },
      {
        "name": "description",
        "text": "Renders a specified icon."
      },
      {
        "name": "example",
        "text": "<goat-icon name=\"house\"></goat-icon>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-button",
      "goat-dropdown",
      "goat-input",
      "goat-notification",
      "goat-select",
      "goat-tab",
      "goat-tag",
      "goat-textarea",
      "goat-toast"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-button": [
        "goat-icon"
      ],
      "goat-dropdown": [
        "goat-icon"
      ],
      "goat-input": [
        "goat-icon"
      ],
      "goat-notification": [
        "goat-icon"
      ],
      "goat-select": [
        "goat-icon"
      ],
      "goat-tab": [
        "goat-icon"
      ],
      "goat-tag": [
        "goat-icon"
      ],
      "goat-textarea": [
        "goat-icon"
      ],
      "goat-toast": [
        "goat-icon"
      ]
    },
    "props": [
      {
        "name": "name",
        "type": "string",
        "mutable": false,
        "attr": "name",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "string",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": true,
        "docs": "The Icon size.\r\nPossible values are: `\"sm\"`, `\"md\"`, `\"lg\"`, `\"xl\"` and size in pixel. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Icon",
      "description": "Renders a specified icon.",
      "example": "<goat-icon name=\"house\"></goat-icon>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/form/input",
    "filePath": "./src/components/form/input/input.tsx",
    "fileName": "input.tsx",
    "readmePath": "D:/development/goatui/src/components/form/input/readme.md",
    "usagesDir": "D:/development/goatui/src/components/form/input/usage",
    "tag": "goat-input",
    "readme": "# goat-input\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Input"
      },
      {
        "name": "description",
        "text": "Enables native inputs to be used within a Form field."
      },
      {
        "name": "example",
        "text": "<goat-input placeholder=\"Enter your name\"></goat-input>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-icon"
    ],
    "dependencyGraph": {
      "goat-input": [
        "goat-icon"
      ]
    },
    "props": [
      {
        "name": "autocomplete",
        "type": "\"off\" | \"on\"",
        "mutable": false,
        "attr": "autocomplete",
        "reflectToAttr": false,
        "docs": "Indicates whether the value of the control can be automatically completed by the browser.",
        "docsTags": [],
        "default": "'off'",
        "values": [
          {
            "value": "off",
            "type": "string"
          },
          {
            "value": "on",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "clearable",
        "type": "boolean",
        "mutable": false,
        "attr": "clearable",
        "reflectToAttr": false,
        "docs": "If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "configAria",
        "type": "any",
        "mutable": true,
        "attr": "config-aria",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "{}",
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "debounce",
        "type": "number",
        "mutable": false,
        "attr": "debounce",
        "reflectToAttr": false,
        "docs": "Set the amount of time, in milliseconds, to wait to trigger the `goatChange` event after each keystroke.",
        "docsTags": [],
        "default": "300",
        "values": [
          {
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "name",
        "type": "string",
        "mutable": false,
        "attr": "name",
        "reflectToAttr": false,
        "docs": "The input field name.",
        "docsTags": [],
        "default": "`goat-input-${this.gid}`",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "placeholder",
        "type": "string",
        "mutable": false,
        "attr": "placeholder",
        "reflectToAttr": false,
        "docs": "The input field placeholder.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "readonly",
        "type": "boolean",
        "mutable": false,
        "attr": "readonly",
        "reflectToAttr": true,
        "docs": "If true, the user read the value cannot modify it. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "required",
        "type": "boolean",
        "mutable": false,
        "attr": "required",
        "reflectToAttr": true,
        "docs": "If true, required icon is show. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\"",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": true,
        "docs": "The input field size.\r\nPossible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "state",
        "type": "\"default\" | \"error\" | \"success\" | \"warning\"",
        "mutable": false,
        "attr": "state",
        "reflectToAttr": true,
        "docs": "The input state.\r\nPossible values are: `\"success\"`, `\"error\"`, `\"warning\"`, 'default'. Defaults to `\"default\"`.",
        "docsTags": [],
        "default": "'default'",
        "values": [
          {
            "value": "default",
            "type": "string"
          },
          {
            "value": "error",
            "type": "string"
          },
          {
            "value": "success",
            "type": "string"
          },
          {
            "value": "warning",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "type",
        "type": "\"email\" | \"number\" | \"password\" | \"tel\" | \"text\"",
        "mutable": false,
        "attr": "type",
        "reflectToAttr": false,
        "docs": "The type of control to display.\r\nPossible values are: `\"text\"`, `\"password\"`, `\"number\"`, `\"email\"`, `\"tel\"`. Defaults to `\"text\"`.",
        "docsTags": [],
        "default": "'text'",
        "values": [
          {
            "value": "email",
            "type": "string"
          },
          {
            "value": "number",
            "type": "string"
          },
          {
            "value": "password",
            "type": "string"
          },
          {
            "value": "tel",
            "type": "string"
          },
          {
            "value": "text",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "number | string",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "The input field value.",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "optional": true,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "getComponentId",
        "returns": {
          "type": "Promise<string>",
          "docs": ""
        },
        "signature": "getComponentId() => Promise<string>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      },
      {
        "name": "setBlur",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setBlur() => Promise<void>",
        "parameters": [],
        "docs": "Sets blur on the native `input` in `goat-input`. Use this method instead of the global\r\n`input.blur()`.",
        "docsTags": []
      },
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on the native `input` in `goat-input`. Use this method instead of the global\r\n`input.focus()`.",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:blur",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the input loses focus.",
        "docsTags": []
      },
      {
        "event": "goat:change",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the value has changed.",
        "docsTags": []
      },
      {
        "event": "goat:focus",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the input has focus.",
        "docsTags": []
      },
      {
        "event": "goat:input",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when a keyboard input occurred.",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Input",
      "description": "Enables native inputs to be used within a Form field.",
      "example": "<goat-input placeholder=\"Enter your name\"></goat-input>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/navigation/link",
    "filePath": "./src/components/navigation/link/link.tsx",
    "fileName": "link.tsx",
    "readmePath": "D:/development/goatui/src/components/navigation/link/readme.md",
    "usagesDir": "D:/development/goatui/src/components/navigation/link/usage",
    "tag": "goat-link",
    "readme": "# goat-button\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Link"
      },
      {
        "name": "description",
        "text": "Links allow users to click their way from page to page."
      },
      {
        "name": "example",
        "text": "<goat-link>Link</goat-link>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "href",
        "type": "string",
        "mutable": false,
        "attr": "href",
        "reflectToAttr": false,
        "docs": "Hyperlink to navigate to on click.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "target",
        "type": "string",
        "mutable": false,
        "attr": "target",
        "reflectToAttr": false,
        "docs": "Sets or retrieves the window or frame at which to target content.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "triggerClick",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "triggerClick() => Promise<void>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      }
    ],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "mouseup",
        "target": "window",
        "capture": false,
        "passive": true
      },
      {
        "event": "keyup",
        "target": "window",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {
      "name": "Link",
      "description": "Links allow users to click their way from page to page.",
      "example": "<goat-link>Link</goat-link>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/menu/menu",
    "filePath": "./src/components/menu/menu/menu.tsx",
    "fileName": "menu.tsx",
    "readmePath": "D:/development/goatui/src/components/menu/menu/readme.md",
    "usagesDir": "D:/development/goatui/src/components/menu/menu/usage",
    "tag": "goat-menu",
    "readme": "# goat-menu\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Menu"
      },
      {
        "name": "description",
        "text": "Menus display a list of choices on temporary surfaces."
      },
      {
        "name": "img",
        "text": "/assets/img/menu.png"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-dropdown",
      "goat-select"
    ],
    "dependencies": [
      "goat-empty-state"
    ],
    "dependencyGraph": {
      "goat-menu": [
        "goat-empty-state"
      ],
      "goat-empty-state": [
        "goat-svg",
        "goat-button"
      ],
      "goat-button": [
        "goat-icon",
        "goat-spinner"
      ],
      "goat-dropdown": [
        "goat-menu"
      ],
      "goat-select": [
        "goat-menu"
      ]
    },
    "props": [
      {
        "name": "empty",
        "type": "boolean",
        "mutable": true,
        "attr": "empty",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "emptyState",
        "type": "any",
        "mutable": true,
        "attr": "empty-state",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "{\r\n    'headline': 'No items',\r\n    'description': 'There are no items to display',\r\n  }",
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "showLoader",
        "type": "boolean",
        "mutable": false,
        "attr": "show-loader",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "number | string",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "optional": true,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on first menu item. Use this method instead of the global\r\n`element.focus()`.",
        "docsTags": []
      }
    ],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "keydown",
        "target": "window",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {
      "name": "Menu",
      "description": "Menus display a list of choices on temporary surfaces.",
      "img": "/assets/img/menu.png"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/menu/menu-item",
    "filePath": "./src/components/menu/menu-item/menu-item.tsx",
    "fileName": "menu-item.tsx",
    "readmePath": "D:/development/goatui/src/components/menu/menu-item/readme.md",
    "usagesDir": "D:/development/goatui/src/components/menu/menu-item/usage",
    "tag": "goat-menu-item",
    "readme": "# goat-menu-item\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [],
    "encapsulation": "shadow",
    "dependents": [
      "goat-dropdown",
      "goat-select"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-dropdown": [
        "goat-menu-item"
      ],
      "goat-select": [
        "goat-menu-item"
      ]
    },
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "selected",
        "type": "boolean",
        "mutable": false,
        "attr": "selected",
        "reflectToAttr": true,
        "docs": "Menu item selection state.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "number | string",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "The menu item value.",
        "docsTags": [],
        "values": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "optional": true,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "setBlur",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setBlur() => Promise<void>",
        "parameters": [],
        "docs": "Sets blur on the native `input` in `goat-input`. Use this method instead of the global\r\n`input.blur()`.",
        "docsTags": []
      },
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on the native `input` in `goat-input`. Use this method instead of the global\r\n`input.focus()`.",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:menu-item-click",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the menu item is clicked.",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "mouseup",
        "target": "window",
        "capture": false,
        "passive": true
      },
      {
        "event": "keyup",
        "target": "window",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {}
  },
  {
    "dirPath": "D:/development/goatui/src/components/content/notification",
    "filePath": "./src/components/content/notification/notification.tsx",
    "fileName": "notification.tsx",
    "readmePath": "D:/development/goatui/src/components/content/notification/readme.md",
    "usagesDir": "D:/development/goatui/src/components/content/notification/usage",
    "tag": "goat-notification",
    "readme": "# goat-alert\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Notification"
      },
      {
        "name": "description",
        "text": "Notifications are messages that communicate information to the user."
      },
      {
        "name": "example",
        "text": "<goat-notification state=\"success\" low-contrast dismissible>\r\n     <div slot='title'>Successful saved the record</div>\r\n   </goat-notification>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-notification-manager"
    ],
    "dependencies": [
      "goat-button",
      "goat-icon"
    ],
    "dependencyGraph": {
      "goat-notification": [
        "goat-button",
        "goat-icon"
      ],
      "goat-button": [
        "goat-icon",
        "goat-spinner"
      ],
      "goat-notification-manager": [
        "goat-notification"
      ]
    },
    "props": [
      {
        "name": "actionLabel",
        "type": "string",
        "mutable": false,
        "attr": "action-label",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'Dismiss'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "actionName",
        "type": "string",
        "mutable": false,
        "attr": "action-name",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'dismiss'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "actionable",
        "type": "boolean",
        "mutable": false,
        "attr": "actionable",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "true",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "dismissible",
        "type": "boolean",
        "mutable": false,
        "attr": "dismissible",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "lowContrast",
        "type": "boolean",
        "mutable": false,
        "attr": "low-contrast",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "state",
        "type": "\"error\" | \"info\" | \"success\" | \"warning\"",
        "mutable": false,
        "attr": "state",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'info'",
        "values": [
          {
            "value": "error",
            "type": "string"
          },
          {
            "value": "info",
            "type": "string"
          },
          {
            "value": "success",
            "type": "string"
          },
          {
            "value": "warning",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [
      {
        "event": "goat:dismiss",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Notification",
      "description": "Notifications are messages that communicate information to the user.",
      "example": "<goat-notification state=\"success\" low-contrast dismissible>\r\n     <div slot='title'>Successful saved the record</div>\r\n   </goat-notification>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/content/notification-manager",
    "filePath": "./src/components/content/notification-manager/notification-manager.tsx",
    "fileName": "notification-manager.tsx",
    "readmePath": "D:/development/goatui/src/components/content/notification-manager/readme.md",
    "usagesDir": "D:/development/goatui/src/components/content/notification-manager/usage",
    "tag": "goat-notification-manager",
    "readme": "# goat-alert\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Notification Manager"
      },
      {
        "name": "description",
        "text": "Manages alert, toasts and notifications."
      },
      {
        "name": "img",
        "text": "/assets/img/notification-manager.png"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-toast",
      "goat-notification"
    ],
    "dependencyGraph": {
      "goat-notification-manager": [
        "goat-toast",
        "goat-notification"
      ],
      "goat-toast": [
        "goat-icon"
      ],
      "goat-notification": [
        "goat-button",
        "goat-icon"
      ],
      "goat-button": [
        "goat-icon",
        "goat-spinner"
      ]
    },
    "props": [
      {
        "name": "name",
        "type": "string",
        "mutable": false,
        "attr": "name",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "'global'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "position",
        "type": "\"bottom-left\" | \"bottom-right\" | \"top-left\" | \"top-right\"",
        "mutable": false,
        "attr": "position",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'bottom-right'",
        "values": [
          {
            "value": "bottom-left",
            "type": "string"
          },
          {
            "value": "bottom-right",
            "type": "string"
          },
          {
            "value": "top-left",
            "type": "string"
          },
          {
            "value": "top-right",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "goat:toast",
        "target": "window",
        "capture": false,
        "passive": false
      },
      {
        "event": "goat:notification",
        "target": "window",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {
      "name": "Notification Manager",
      "description": "Manages alert, toasts and notifications.",
      "img": "/assets/img/notification-manager.png"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/form/select",
    "filePath": "./src/components/form/select/select.tsx",
    "fileName": "select.tsx",
    "readmePath": "D:/development/goatui/src/components/form/select/readme.md",
    "usagesDir": "D:/development/goatui/src/components/form/select/usage",
    "tag": "goat-select",
    "readme": "# goat-select\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Select"
      },
      {
        "name": "description",
        "text": "Allows the user to select one or more options using a dropdown."
      },
      {
        "name": "img",
        "text": "/assets/img/select.png"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-table"
    ],
    "dependencies": [
      "goat-tag",
      "goat-icon",
      "goat-spinner",
      "goat-menu",
      "goat-text",
      "goat-menu-item"
    ],
    "dependencyGraph": {
      "goat-select": [
        "goat-tag",
        "goat-icon",
        "goat-spinner",
        "goat-menu",
        "goat-text",
        "goat-menu-item"
      ],
      "goat-tag": [
        "goat-icon"
      ],
      "goat-menu": [
        "goat-empty-state"
      ],
      "goat-empty-state": [
        "goat-svg",
        "goat-button"
      ],
      "goat-button": [
        "goat-icon",
        "goat-spinner"
      ],
      "goat-table": [
        "goat-select"
      ]
    },
    "props": [
      {
        "name": "clearable",
        "type": "boolean",
        "mutable": false,
        "attr": "clearable",
        "reflectToAttr": false,
        "docs": "If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "configAria",
        "type": "any",
        "mutable": true,
        "attr": "config-aria",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "{}",
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "debounce",
        "type": "number",
        "mutable": false,
        "attr": "debounce",
        "reflectToAttr": false,
        "docs": "Set the amount of time, in milliseconds, to wait to trigger the `goatChange` event after each keystroke.",
        "docsTags": [],
        "default": "300",
        "values": [
          {
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "isOpen",
        "type": "boolean",
        "mutable": true,
        "attr": "is-open",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "items",
        "type": "any",
        "mutable": false,
        "attr": "items",
        "reflectToAttr": false,
        "docs": "[{\r\n  label: 'Shivaji Varma',\r\n  value: 'shivaji-varma'\r\n}]",
        "docsTags": [],
        "default": "[]",
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "multiple",
        "type": "boolean",
        "mutable": false,
        "attr": "multiple",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "name",
        "type": "string",
        "mutable": false,
        "attr": "name",
        "reflectToAttr": false,
        "docs": "The input field name.",
        "docsTags": [],
        "default": "`goat-input-${this.gid}`",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "placeholder",
        "type": "string",
        "mutable": false,
        "attr": "placeholder",
        "reflectToAttr": false,
        "docs": "The input field placeholder.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "positions",
        "type": "string",
        "mutable": false,
        "attr": "positions",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'bottom-right,top-right,bottom-left,top-left'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "readonly",
        "type": "boolean",
        "mutable": false,
        "attr": "readonly",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "required",
        "type": "boolean",
        "mutable": false,
        "attr": "required",
        "reflectToAttr": true,
        "docs": "If true, required icon is show. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "search",
        "type": "\"contains\" | \"initial\" | \"managed\" | \"none\"",
        "mutable": false,
        "attr": "search",
        "reflectToAttr": false,
        "docs": "Search type\r\nPossible values are `\"none\"`, `\"initial\"`, `\"contains\"`, `\"managed\"`. Defaults to `\"none\"`.",
        "docsTags": [],
        "default": "'none'",
        "values": [
          {
            "value": "contains",
            "type": "string"
          },
          {
            "value": "initial",
            "type": "string"
          },
          {
            "value": "managed",
            "type": "string"
          },
          {
            "value": "none",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "showLoader",
        "type": "boolean",
        "mutable": false,
        "attr": "show-loader",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\"",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": true,
        "docs": "The select input size.\r\nPossible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "state",
        "type": "\"default\" | \"error\" | \"success\" | \"warning\"",
        "mutable": false,
        "attr": "state",
        "reflectToAttr": true,
        "docs": "The input state.\r\nPossible values are: `\"success\"`, `\"error\"`, `\"warning\"`, 'default'. Defaults to `\"default\"`.",
        "docsTags": [],
        "default": "'default'",
        "values": [
          {
            "value": "default",
            "type": "string"
          },
          {
            "value": "error",
            "type": "string"
          },
          {
            "value": "success",
            "type": "string"
          },
          {
            "value": "warning",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "number | string",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "The input field value.",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "optional": true,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "getComponentId",
        "returns": {
          "type": "Promise<string>",
          "docs": ""
        },
        "signature": "getComponentId() => Promise<string>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      },
      {
        "name": "setBlur",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setBlur() => Promise<void>",
        "parameters": [],
        "docs": "Sets blur on the native `input` in `goat-input`. Use this method instead of the global\r\n`input.blur()`.",
        "docsTags": []
      },
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on the native `input` in `ion-input`. Use this method instead of the global\r\n`input.focus()`.",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:action-click",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the action button is clicked..",
        "docsTags": []
      },
      {
        "event": "goat:change",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the value has changed.",
        "docsTags": []
      },
      {
        "event": "goat:search",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when a keyboard input occurred.",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "click",
        "target": "window",
        "capture": false,
        "passive": false
      },
      {
        "event": "goat:menu-item-click",
        "capture": false,
        "passive": false
      },
      {
        "event": "goat:tag-dismiss",
        "capture": false,
        "passive": false
      },
      {
        "event": "scroll",
        "target": "window",
        "capture": false,
        "passive": true
      }
    ],
    "metadata": {
      "name": "Select",
      "description": "Allows the user to select one or more options using a dropdown.",
      "img": "/assets/img/select.png"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/app-shell/sidenav",
    "filePath": "./src/components/app-shell/sidenav/sidenav.tsx",
    "fileName": "sidenav.tsx",
    "readmePath": "D:/development/goatui/src/components/app-shell/sidenav/readme.md",
    "usagesDir": "D:/development/goatui/src/components/app-shell/sidenav/usage",
    "tag": "goat-sidenav",
    "readme": "# goat-menu\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name1",
        "text": "Side Navigation"
      },
      {
        "name": "description1",
        "text": "The side navigation component provides an easy way to navigate through your website / application."
      },
      {
        "name": "img1",
        "text": "/assets/img/sidenav.png"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "showLoader",
        "type": "boolean",
        "mutable": false,
        "attr": "show-loader",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name1": "Side Navigation",
      "description1": "The side navigation component provides an easy way to navigate through your website / application.",
      "img1": "/assets/img/sidenav.png"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/app-shell/sidenav-menu",
    "filePath": "./src/components/app-shell/sidenav-menu/sidenav-menu.tsx",
    "fileName": "sidenav-menu.tsx",
    "readmePath": "D:/development/goatui/src/components/app-shell/sidenav-menu/readme.md",
    "usagesDir": "D:/development/goatui/src/components/app-shell/sidenav-menu/usage",
    "tag": "goat-sidenav-menu",
    "readme": "# goat-menu\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-empty-state"
    ],
    "dependencyGraph": {
      "goat-sidenav-menu": [
        "goat-empty-state"
      ],
      "goat-empty-state": [
        "goat-svg",
        "goat-button"
      ],
      "goat-button": [
        "goat-icon",
        "goat-spinner"
      ]
    },
    "props": [
      {
        "name": "empty",
        "type": "boolean",
        "mutable": true,
        "attr": "empty",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "emptyState",
        "type": "string",
        "mutable": true,
        "attr": "empty-state",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "`{\r\n    \"title\": \"No items\",\r\n    \"description\": \"There are no items to display\"\r\n  }`",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "showLoader",
        "type": "boolean",
        "mutable": false,
        "attr": "show-loader",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "number | string",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "optional": true,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on first menu item. Use this method instead of the global\r\n`element.focus()`.",
        "docsTags": []
      }
    ],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "keydown",
        "target": "window",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {}
  },
  {
    "dirPath": "D:/development/goatui/src/components/app-shell/sidenav-menu-item",
    "filePath": "./src/components/app-shell/sidenav-menu-item/sidenav-menu-item.tsx",
    "fileName": "sidenav-menu-item.tsx",
    "readmePath": "D:/development/goatui/src/components/app-shell/sidenav-menu-item/readme.md",
    "usagesDir": "D:/development/goatui/src/components/app-shell/sidenav-menu-item/usage",
    "tag": "goat-sidenav-menu-item",
    "readme": "# goat-menu-item\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "selected",
        "type": "boolean",
        "mutable": false,
        "attr": "selected",
        "reflectToAttr": true,
        "docs": "Menu item selection state.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "number | string",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "The menu item value.",
        "docsTags": [],
        "values": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "optional": true,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "setBlur",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setBlur() => Promise<void>",
        "parameters": [],
        "docs": "Sets blur on the native `input` in `goat-input`. Use this method instead of the global\r\n`input.blur()`.",
        "docsTags": []
      },
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on the native `input` in `goat-input`. Use this method instead of the global\r\n`input.focus()`.",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:sidenav-menu-item-click",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the menu item is clicked.",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "mouseup",
        "target": "window",
        "capture": false,
        "passive": true
      },
      {
        "event": "keyup",
        "target": "window",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {}
  },
  {
    "dirPath": "D:/development/goatui/src/components/content/spinner",
    "filePath": "./src/components/content/spinner/spinner.tsx",
    "fileName": "spinner.tsx",
    "readmePath": "D:/development/goatui/src/components/content/spinner/readme.md",
    "usagesDir": "D:/development/goatui/src/components/content/spinner/usage",
    "tag": "goat-spinner",
    "readme": "# goat-spinner\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Spinner"
      },
      {
        "name": "description",
        "text": "Spinners provide a visual cue that an action is processing awaiting a course of change or a result."
      },
      {
        "name": "example",
        "text": "<goat-spinner class=\"rainbow\"></goat-spinner>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-button",
      "goat-code-editor",
      "goat-code-highlighter",
      "goat-select",
      "goat-tab"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-button": [
        "goat-spinner"
      ],
      "goat-code-editor": [
        "goat-spinner"
      ],
      "goat-code-highlighter": [
        "goat-spinner"
      ],
      "goat-select": [
        "goat-spinner"
      ],
      "goat-tab": [
        "goat-spinner"
      ]
    },
    "props": [
      {
        "name": "size",
        "type": "string",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": false,
        "docs": "The Icon size.\r\nPossible values are: `\"sm\"`, `\"md\"`, `\"lg\"`, `\"xl\"` and size in pixel. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Spinner",
      "description": "Spinners provide a visual cue that an action is processing awaiting a course of change or a result.",
      "example": "<goat-spinner class=\"rainbow\"></goat-spinner>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/content/svg",
    "filePath": "./src/components/content/svg/svg.tsx",
    "fileName": "svg.tsx",
    "readmePath": "D:/development/goatui/src/components/content/svg/readme.md",
    "usagesDir": "D:/development/goatui/src/components/content/svg/usage",
    "tag": "goat-svg",
    "readme": "# goat-icon\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [],
    "encapsulation": "shadow",
    "dependents": [
      "goat-empty-state",
      "goat-header"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-empty-state": [
        "goat-svg"
      ],
      "goat-header": [
        "goat-svg"
      ]
    },
    "props": [
      {
        "name": "src",
        "type": "string",
        "mutable": false,
        "attr": "src",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {}
  },
  {
    "dirPath": "D:/development/goatui/src/components/navigation/tabs/tab",
    "filePath": "./src/components/navigation/tabs/tab/tab.tsx",
    "fileName": "tab.tsx",
    "readmePath": "D:/development/goatui/src/components/navigation/tabs/tab/readme.md",
    "usagesDir": "D:/development/goatui/src/components/navigation/tabs/tab/usage",
    "tag": "goat-tab",
    "readme": "# goat-tab\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-icon",
      "goat-spinner"
    ],
    "dependencyGraph": {
      "goat-tab": [
        "goat-icon",
        "goat-spinner"
      ]
    },
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabledReason",
        "type": "string",
        "mutable": false,
        "attr": "disabled-reason",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "icon",
        "type": "string",
        "mutable": false,
        "attr": "icon",
        "reflectToAttr": false,
        "docs": "Icon which will displayed on button.\r\nPossible values are bootstrap icon names.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "label",
        "type": "string",
        "mutable": false,
        "attr": "label",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "selected",
        "type": "boolean",
        "mutable": false,
        "attr": "selected",
        "reflectToAttr": true,
        "docs": "Button selection state.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "showLoader",
        "type": "boolean",
        "mutable": false,
        "attr": "show-loader",
        "reflectToAttr": false,
        "docs": "Show loader.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\" | \"xl\" | \"xxl\"",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": false,
        "docs": "Button size.\r\nPossible values are `\"sm\"`, `\"md\"`, `\"lg\"`, `\"xl\"`, `\"xxl\"`. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          },
          {
            "value": "xl",
            "type": "string"
          },
          {
            "value": "xxl",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "target",
        "type": "string",
        "mutable": false,
        "attr": "target",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "string",
        "mutable": false,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      },
      {
        "name": "triggerClick",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "triggerClick() => Promise<void>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:tab-click",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "On click of tab, a CustomEvent 'goat:tab-click' will be triggered.",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "mouseup",
        "target": "window",
        "capture": false,
        "passive": true
      },
      {
        "event": "keyup",
        "target": "window",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {}
  },
  {
    "dirPath": "D:/development/goatui/src/components/navigation/tabs/tab-panel",
    "filePath": "./src/components/navigation/tabs/tab-panel/tab-panel.tsx",
    "fileName": "tab-panel.tsx",
    "readmePath": "D:/development/goatui/src/components/navigation/tabs/tab-panel/readme.md",
    "usagesDir": "D:/development/goatui/src/components/navigation/tabs/tab-panel/usage",
    "tag": "goat-tab-panel",
    "readme": "# goat-tab\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "active",
        "type": "boolean",
        "mutable": false,
        "attr": "active",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "string",
        "mutable": false,
        "attr": "value",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {}
  },
  {
    "dirPath": "D:/development/goatui/src/components/table/table",
    "filePath": "./src/components/table/table/table.tsx",
    "fileName": "table.tsx",
    "readmePath": "D:/development/goatui/src/components/table/table/readme.md",
    "usagesDir": "D:/development/goatui/src/components/table/table/usage",
    "tag": "goat-table",
    "readme": "# goat-table\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Table"
      },
      {
        "name": "description",
        "text": "A configurable component for displaying tabular data."
      },
      {
        "name": "img",
        "text": "/assets/img/table.png"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-checkbox",
      "goat-button",
      "goat-form-control",
      "goat-select",
      "goat-text",
      "goat-empty-state"
    ],
    "dependencyGraph": {
      "goat-table": [
        "goat-checkbox",
        "goat-button",
        "goat-form-control",
        "goat-select",
        "goat-text",
        "goat-empty-state"
      ],
      "goat-button": [
        "goat-icon",
        "goat-spinner"
      ],
      "goat-select": [
        "goat-tag",
        "goat-icon",
        "goat-spinner",
        "goat-menu",
        "goat-text",
        "goat-menu-item"
      ],
      "goat-tag": [
        "goat-icon"
      ],
      "goat-menu": [
        "goat-empty-state"
      ],
      "goat-empty-state": [
        "goat-svg",
        "goat-button"
      ]
    },
    "props": [
      {
        "name": "columns",
        "type": "any[]",
        "mutable": false,
        "reflectToAttr": false,
        "docs": "Grid columns configuration.\r\n[\r\n{\r\n  \"name\":\"name\",\r\n  \"label\":\"Name\",\r\n  \"width\":300,\r\n  \"fixed\":true\r\n },\r\n{\r\n  \"name\":\"age\",\r\n  \"label\":\"Age\"\r\n}\r\n]",
        "docsTags": [],
        "default": "[]",
        "values": [
          {
            "type": "any[]"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "data",
        "type": "any[]",
        "mutable": false,
        "reflectToAttr": false,
        "docs": "Grid data to display on table\r\n[{\r\n 'id': '5e7118ddce4b3d577956457f',\r\n 'age': 21,\r\n 'name': 'John',\r\n 'company': 'India',\r\n 'email': 'john@example.com',\r\n 'phone': '+1 (839) 560-3581',\r\n 'address': '326 Irving Street, Grimsley, Texas, 4048'\r\n }]",
        "docsTags": [],
        "default": "[]",
        "values": [
          {
            "type": "any[]"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "emptyState",
        "type": "any",
        "mutable": true,
        "attr": "empty-state",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "{\r\n    'title': 'No items',\r\n    'description': 'There are no items to display',\r\n  }",
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "keyField",
        "type": "string",
        "mutable": false,
        "attr": "key-field",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'id'",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "managed",
        "type": "boolean",
        "mutable": false,
        "attr": "managed",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "page",
        "type": "number",
        "mutable": false,
        "attr": "page",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "1",
        "values": [
          {
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "pageSize",
        "type": "number",
        "mutable": false,
        "attr": "page-size",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "10",
        "values": [
          {
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "paginate",
        "type": "boolean",
        "mutable": false,
        "attr": "paginate",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "true",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "selectedRowKeys",
        "type": "string[]",
        "mutable": true,
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "[]",
        "values": [
          {
            "type": "string[]"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "selectionType",
        "type": "\"checkbox\"",
        "mutable": false,
        "attr": "selection-type",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "value": "checkbox",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "sortBy",
        "type": "string",
        "mutable": true,
        "attr": "sort-by",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "sortOrder",
        "type": "\"asc\" | \"desc\"",
        "mutable": true,
        "attr": "sort-order",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'asc'",
        "values": [
          {
            "value": "asc",
            "type": "string"
          },
          {
            "value": "desc",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "sortable",
        "type": "boolean",
        "mutable": false,
        "attr": "sortable",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "true",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "totalItems",
        "type": "any",
        "mutable": true,
        "attr": "total-items",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [
      {
        "event": "goat:page",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "",
        "docsTags": []
      },
      {
        "event": "goat:sort",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "",
        "docsTags": []
      },
      {
        "event": "goat:table-cell-click",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "",
        "docsTags": []
      },
      {
        "event": "goat:table-select-change",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Table",
      "description": "A configurable component for displaying tabular data.",
      "img": "/assets/img/table.png"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/navigation/tabs",
    "filePath": "./src/components/navigation/tabs/tabs.tsx",
    "fileName": "tabs.tsx",
    "readmePath": "D:/development/goatui/src/components/navigation/tabs/readme.md",
    "usagesDir": "D:/development/goatui/src/components/navigation/tabs/usage",
    "tag": "goat-tabs",
    "readme": "# goat-tabs\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Tabs"
      },
      {
        "name": "description",
        "text": "An interactive button with a range of presentation options."
      },
      {
        "name": "example",
        "text": "<goat-tabs>\r\n<goat-tabs-list>\r\n<goat-tab selected >Tab 1</goat-tab>\r\n<goat-tab>Tab 2</goat-tab>\r\n</goat-tabs-list>\r\n</goat-tabs>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "goat:tab-click",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {
      "name": "Tabs",
      "description": "An interactive button with a range of presentation options.",
      "example": "<goat-tabs>\r\n<goat-tabs-list>\r\n<goat-tab selected >Tab 1</goat-tab>\r\n<goat-tab>Tab 2</goat-tab>\r\n</goat-tabs-list>\r\n</goat-tabs>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/navigation/tabs/tabs-list",
    "filePath": "./src/components/navigation/tabs/tabs-list/tabs-list.tsx",
    "fileName": "tabs-list.tsx",
    "readmePath": "D:/development/goatui/src/components/navigation/tabs/tabs-list/readme.md",
    "usagesDir": "D:/development/goatui/src/components/navigation/tabs/tabs-list/usage",
    "tag": "goat-tabs-list",
    "readme": "# goat-tabs\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [
      {
        "name": "managed",
        "type": "boolean",
        "mutable": false,
        "attr": "managed",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "variant",
        "type": "\"contained\" | \"line\"",
        "mutable": false,
        "attr": "variant",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "'line'",
        "values": [
          {
            "value": "contained",
            "type": "string"
          },
          {
            "value": "line",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [
      {
        "event": "goat:tab-click",
        "capture": false,
        "passive": false
      }
    ],
    "metadata": {}
  },
  {
    "dirPath": "D:/development/goatui/src/components/content/tag",
    "filePath": "./src/components/content/tag/tag.tsx",
    "fileName": "tag.tsx",
    "readmePath": "D:/development/goatui/src/components/content/tag/readme.md",
    "usagesDir": "D:/development/goatui/src/components/content/tag/usage",
    "tag": "goat-tag",
    "readme": "# goat-heading\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Tag"
      },
      {
        "name": "description",
        "text": "Use tags to label, categorize, or organize items using keywords that describe them."
      },
      {
        "name": "example",
        "text": "<goat-tag class=\"color-red\">Important</goat-tag>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-select"
    ],
    "dependencies": [
      "goat-icon"
    ],
    "dependencyGraph": {
      "goat-tag": [
        "goat-icon"
      ],
      "goat-select": [
        "goat-tag"
      ]
    },
    "props": [
      {
        "name": "filter",
        "type": "boolean",
        "mutable": false,
        "attr": "filter",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"md\" | \"sm\"",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": true,
        "docs": "Text size.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "string",
        "mutable": false,
        "attr": "value",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [
      {
        "event": "goat:click",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "",
        "docsTags": []
      },
      {
        "event": "goat:tag-dismiss",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Tag",
      "description": "Use tags to label, categorize, or organize items using keywords that describe them.",
      "example": "<goat-tag class=\"color-red\">Important</goat-tag>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/content/text",
    "filePath": "./src/components/content/text/text.tsx",
    "fileName": "text.tsx",
    "readmePath": "D:/development/goatui/src/components/content/text/readme.md",
    "usagesDir": "D:/development/goatui/src/components/content/text/usage",
    "tag": "goat-text",
    "readme": "# goat-heading\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Text"
      },
      {
        "name": "description",
        "text": "Typography are used for rendering headlines, paragraphs and captions."
      },
      {
        "name": "example",
        "text": "<goat-text type=\"heading\" level=\"1\">Heading</goat-typography>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-select",
      "goat-table"
    ],
    "dependencies": [],
    "dependencyGraph": {
      "goat-select": [
        "goat-text"
      ],
      "goat-table": [
        "goat-text"
      ]
    },
    "props": [
      {
        "name": "level",
        "type": "1 | 2 | 3 | 4 | 5",
        "mutable": false,
        "attr": "level",
        "reflectToAttr": false,
        "docs": "The heading level.",
        "docsTags": [],
        "default": "1",
        "values": [
          {
            "value": "1",
            "type": "number"
          },
          {
            "value": "2",
            "type": "number"
          },
          {
            "value": "3",
            "type": "number"
          },
          {
            "value": "4",
            "type": "number"
          },
          {
            "value": "5",
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "shade",
        "type": "\"primary\" | \"secondary\" | \"tertiary\"",
        "mutable": false,
        "attr": "shade",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "'primary'",
        "values": [
          {
            "value": "primary",
            "type": "string"
          },
          {
            "value": "secondary",
            "type": "string"
          },
          {
            "value": "tertiary",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\" | \"xl\" | \"xs\"",
        "mutable": true,
        "attr": "size",
        "reflectToAttr": true,
        "docs": "Text size.",
        "docsTags": [],
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          },
          {
            "value": "xl",
            "type": "string"
          },
          {
            "value": "xs",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "type",
        "type": "\"heading\" | \"paragraph\" | \"text\"",
        "mutable": false,
        "attr": "type",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "'text'",
        "values": [
          {
            "value": "heading",
            "type": "string"
          },
          {
            "value": "paragraph",
            "type": "string"
          },
          {
            "value": "text",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Text",
      "description": "Typography are used for rendering headlines, paragraphs and captions.",
      "example": "<goat-text type=\"heading\" level=\"1\">Heading</goat-typography>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/form/textarea",
    "filePath": "./src/components/form/textarea/textarea.tsx",
    "fileName": "textarea.tsx",
    "readmePath": "D:/development/goatui/src/components/form/textarea/readme.md",
    "usagesDir": "D:/development/goatui/src/components/form/textarea/usage",
    "tag": "goat-textarea",
    "readme": "# goat-textarea\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Textarea"
      },
      {
        "name": "description",
        "text": "Enables native inputs to be used within a Form field."
      },
      {
        "name": "example",
        "text": "<goat-textarea placeholder=\"Enter some description over here\"></goat-textarea>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [
      "goat-icon"
    ],
    "dependencyGraph": {
      "goat-textarea": [
        "goat-icon"
      ]
    },
    "props": [
      {
        "name": "clearable",
        "type": "boolean",
        "mutable": false,
        "attr": "clearable",
        "reflectToAttr": false,
        "docs": "If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "configAria",
        "type": "any",
        "mutable": true,
        "attr": "config-aria",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "{}",
        "values": [
          {
            "type": "any"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "debounce",
        "type": "number",
        "mutable": false,
        "attr": "debounce",
        "reflectToAttr": false,
        "docs": "Set the amount of time, in milliseconds, to wait to trigger the `goat:change` event after each keystroke.",
        "docsTags": [],
        "default": "300",
        "values": [
          {
            "type": "number"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "disabled",
        "type": "boolean",
        "mutable": false,
        "attr": "disabled",
        "reflectToAttr": true,
        "docs": "If true, the user cannot interact with the button. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "name",
        "type": "string",
        "mutable": false,
        "attr": "name",
        "reflectToAttr": false,
        "docs": "The input field name.",
        "docsTags": [],
        "default": "`goat-input-${this.gid}`",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "placeholder",
        "type": "string",
        "mutable": false,
        "attr": "placeholder",
        "reflectToAttr": false,
        "docs": "The input field placeholder.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "readonly",
        "type": "boolean",
        "mutable": false,
        "attr": "readonly",
        "reflectToAttr": true,
        "docs": "If true, the user read the value cannot modify it. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "required",
        "type": "boolean",
        "mutable": false,
        "attr": "required",
        "reflectToAttr": false,
        "docs": "If true, required icon is show. Defaults to `false`.",
        "docsTags": [],
        "default": "false",
        "values": [
          {
            "type": "boolean"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "size",
        "type": "\"lg\" | \"md\" | \"sm\"",
        "mutable": false,
        "attr": "size",
        "reflectToAttr": true,
        "docs": "The button size.\r\nPossible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.",
        "docsTags": [],
        "default": "'md'",
        "values": [
          {
            "value": "lg",
            "type": "string"
          },
          {
            "value": "md",
            "type": "string"
          },
          {
            "value": "sm",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "state",
        "type": "\"default\" | \"error\" | \"success\" | \"warning\"",
        "mutable": false,
        "attr": "state",
        "reflectToAttr": true,
        "docs": "The input state.\r\nPossible values are: `\"success\"`, `\"error\"`, `\"warning\"`, 'default'. Defaults to `\"default\"`.",
        "docsTags": [],
        "default": "'default'",
        "values": [
          {
            "value": "default",
            "type": "string"
          },
          {
            "value": "error",
            "type": "string"
          },
          {
            "value": "success",
            "type": "string"
          },
          {
            "value": "warning",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "value",
        "type": "string",
        "mutable": true,
        "attr": "value",
        "reflectToAttr": false,
        "docs": "The input field value.",
        "docsTags": [],
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [
      {
        "name": "getComponentId",
        "returns": {
          "type": "Promise<string>",
          "docs": ""
        },
        "signature": "getComponentId() => Promise<string>",
        "parameters": [],
        "docs": "",
        "docsTags": []
      },
      {
        "name": "setBlur",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setBlur() => Promise<void>",
        "parameters": [],
        "docs": "Sets blur on the native `input` in `ion-input`. Use this method instead of the global\r\n`input.blur()`.",
        "docsTags": []
      },
      {
        "name": "setFocus",
        "returns": {
          "type": "Promise<void>",
          "docs": ""
        },
        "signature": "setFocus() => Promise<void>",
        "parameters": [],
        "docs": "Sets focus on the native `input` in `ion-input`. Use this method instead of the global\r\n`input.focus()`.",
        "docsTags": []
      }
    ],
    "events": [
      {
        "event": "goat:action-click",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the action button is clicked.",
        "docsTags": []
      },
      {
        "event": "goat:blur",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the input loses focus.",
        "docsTags": []
      },
      {
        "event": "goat:change",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the value has changed..",
        "docsTags": []
      },
      {
        "event": "goat:focus",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when the input has focus.",
        "docsTags": []
      },
      {
        "event": "goat:input",
        "detail": "any",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": "Emitted when a keyboard input occurred.",
        "docsTags": []
      }
    ],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Textarea",
      "description": "Enables native inputs to be used within a Form field.",
      "example": "<goat-textarea placeholder=\"Enter some description over here\"></goat-textarea>"
    }
  },
  {
    "dirPath": "D:/development/goatui/src/components/goat-time-picker",
    "filePath": "./src/components/goat-time-picker/goat-time-picker.tsx",
    "fileName": "goat-time-picker.tsx",
    "readmePath": "D:/development/goatui/src/components/goat-time-picker/readme.md",
    "usagesDir": "D:/development/goatui/src/components/goat-time-picker/usage",
    "tag": "goat-time-picker",
    "usage": {},
    "docs": "",
    "docsTags": [],
    "encapsulation": "shadow",
    "dependents": [],
    "dependencies": [],
    "dependencyGraph": {},
    "props": [],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {}
  },
  {
    "dirPath": "D:/development/goatui/src/components/content/toast",
    "filePath": "./src/components/content/toast/toast.tsx",
    "fileName": "toast.tsx",
    "readmePath": "D:/development/goatui/src/components/content/toast/readme.md",
    "usagesDir": "D:/development/goatui/src/components/content/toast/usage",
    "tag": "goat-toast",
    "readme": "# goat-alert\r\n\r\n\r\n\r",
    "usage": {},
    "docs": "",
    "docsTags": [
      {
        "name": "name",
        "text": "Toast"
      },
      {
        "name": "description",
        "text": "Toasts are lightweight notifications."
      },
      {
        "name": "example",
        "text": "<goat-toast state=\"success\" message=\"Successful saved the record\"></goat-toast>"
      }
    ],
    "encapsulation": "shadow",
    "dependents": [
      "goat-notification-manager"
    ],
    "dependencies": [
      "goat-icon"
    ],
    "dependencyGraph": {
      "goat-toast": [
        "goat-icon"
      ],
      "goat-notification-manager": [
        "goat-toast"
      ]
    },
    "props": [
      {
        "name": "message",
        "type": "string",
        "mutable": false,
        "attr": "message",
        "reflectToAttr": false,
        "docs": "",
        "docsTags": [],
        "default": "''",
        "values": [
          {
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      },
      {
        "name": "state",
        "type": "\"error\" | \"info\" | \"success\" | \"warning\"",
        "mutable": false,
        "attr": "state",
        "reflectToAttr": true,
        "docs": "",
        "docsTags": [],
        "default": "'info'",
        "values": [
          {
            "value": "error",
            "type": "string"
          },
          {
            "value": "info",
            "type": "string"
          },
          {
            "value": "success",
            "type": "string"
          },
          {
            "value": "warning",
            "type": "string"
          }
        ],
        "optional": false,
        "required": false
      }
    ],
    "methods": [],
    "events": [],
    "styles": [],
    "slots": [],
    "parts": [],
    "listeners": [],
    "metadata": {
      "name": "Toast",
      "description": "Toasts are lightweight notifications.",
      "example": "<goat-toast state=\"success\" message=\"Successful saved the record\"></goat-toast>"
    }
  }
]