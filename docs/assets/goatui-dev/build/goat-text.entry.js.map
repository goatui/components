{"file":"goat-text.entry.esm.js","mappings":";;AAAA,MAAM,OAAO,GAAG,oiIAAoiI;;ICYviI,IAAI;EALjB;;IAQ2B,SAAI,GAAqC,MAAM,CAAC;IAEhD,UAAK,GAAyC,SAAS,CAAC;;;;IAKzE,UAAK,GAAsB,CAAC,CAAC;GAuEtC;EAhEC,MAAM;IACJ,QACE,EAAC,IAAI,QACF,CAAC;MACA,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS;QACzB,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;WACzB,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW;QAChC,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;WAC3B,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM;QAC3B,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KAC5B,GAAG,CACC,EACP;GACH;EAED,iBAAiB;IACf,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;MAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;QACd,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;UACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;aAAM,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;UAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;aAAM,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;UAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;aAAM,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;UAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;aAAM,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;UAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;OACF;KACF;SAAM;MACL,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;OAClB;KACF;GACF;EAGD,aAAa;IACX,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;IAEpC,QACE,EAAC,UAAU,IAAC,KAAK,EAAC,SAAS,IACzB,eAAQ,CACG,EACb;GACH;EAED,eAAe;IACb,QACE,SAAG,KAAK,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,QAAQ,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,EAAE,IAC1D,eAAQ,CACN,EACJ;GACH;EAED,UAAU;IACR,QACE,YAAM,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,QAAQ,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,EAAE,IACxD,eAAQ,CACH,EACP;GACH;;;;;;","names":[],"sources":["./src/components/content/text/text.scss?tag=goat-text&encapsulation=shadow","./src/components/content/text/text.tsx"],"sourcesContent":["@import \"../../../globalStyles/commons\";\r\n\r\n\r\n.heading {\r\n  font-weight: v(--font-weight-semi-bold);\r\n  margin: 0;\r\n}\r\n\r\n.paragraph {\r\n  margin: 0;\r\n}\r\n\r\n:host([type=\"heading\"]) {\r\n  display: block;\r\n  margin-bottom: v(--spacing-4);\r\n\r\n  &:host([size=\"xl\"]) {\r\n    .heading {\r\n      @include font-style(display-xl);\r\n    }\r\n  }\r\n\r\n  &:host([size=\"lg\"]) {\r\n    .heading {\r\n      @include font-style(display-lg);\r\n    }\r\n  }\r\n\r\n  &:host([size=\"md\"]) {\r\n    .heading {\r\n      @include font-style(display-md);\r\n    }\r\n  }\r\n\r\n  &:host([size=\"sm\"]) {\r\n    .heading {\r\n      @include font-style(display-sm);\r\n    }\r\n  }\r\n\r\n  &:host([size=\"xs\"]) {\r\n    .heading {\r\n      @include font-style(display-xs);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n:host([type=\"paragraph\"]) {\r\n  display: block;\r\n  margin-bottom: v(--spacing-4);\r\n\r\n  &:host([size=\"xl\"]) {\r\n    .paragraph {\r\n      @include font-style(text-xl);\r\n    }\r\n  }\r\n\r\n  &:host([size=\"lg\"]) {\r\n    .paragraph {\r\n      @include font-style(text-lg);\r\n    }\r\n  }\r\n\r\n  &:host([size=\"md\"]) {\r\n    .paragraph {\r\n      @include font-style(text-md);\r\n    }\r\n  }\r\n\r\n  &:host([size=\"sm\"]) {\r\n    .paragraph {\r\n      @include font-style(text-sm);\r\n    }\r\n  }\r\n\r\n  &:host([size=\"xs\"]) {\r\n    .paragraph {\r\n      @include font-style(text-xs);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n:host([type=\"text\"]) {\r\n  display: inline-block;\r\n\r\n  &:host([size=\"xl\"]) {\r\n    .text {\r\n      @include font-style(text-xl);\r\n    }\r\n  }\r\n\r\n  &:host([size=\"lg\"]) {\r\n    .text {\r\n      @include font-style(text-lg);\r\n    }\r\n  }\r\n\r\n  &:host([size=\"md\"]) {\r\n    .text {\r\n      @include font-style(text-md);\r\n    }\r\n  }\r\n\r\n  &:host([size=\"sm\"]) {\r\n    .text {\r\n      @include font-style(text-sm);\r\n    }\r\n  }\r\n\r\n  &:host([size=\"xs\"]) {\r\n    .text {\r\n      @include font-style(text-xs);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n:host {\r\n  color: var(--text-color, v(--text-primary));\r\n\r\n  &:host([shade=\"secondary\"]) {\r\n    color: var(--text-shade-secondary, v(--text-secondary));\r\n  }\r\n\r\n  &:host([shade=\"tertiary\"]) {\r\n    color: var(--text-share-tertiary, v(--text-05));\r\n  }\r\n}\r\n\r\n\r\n:host(.inherit) {\r\n  color: inherit;\r\n}\r\n\r\n","import { Component, ComponentInterface, h, Host, Prop } from '@stencil/core';\r\n\r\n/**\r\n * @name Text\r\n * @description Typography are used for rendering headlines, paragraphs and captions.\r\n * @example <goat-text type=\"heading\" level=\"1\">Heading</goat-typography>\r\n */\r\n@Component({\r\n  tag: 'goat-text',\r\n  styleUrl: 'text.scss',\r\n  shadow: true,\r\n})\r\nexport class Text implements ComponentInterface {\r\n\r\n\r\n  @Prop({ reflect: true }) type: 'heading' | 'paragraph' | 'text' = 'text';\r\n\r\n  @Prop({ reflect: true }) shade: 'primary' | 'secondary' | 'tertiary' = 'primary';\r\n\r\n  /**\r\n   * The heading level.\r\n   */\r\n  @Prop() level: 1 | 2 | 3 | 4 | 5 = 1;\r\n\r\n  /**\r\n   * Text size.\r\n   */\r\n  @Prop({ reflect: true, mutable: true}) size: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {(() => {\r\n          if (this.type === 'heading')\r\n            return this.renderHeading();\r\n          else if (this.type === 'paragraph')\r\n            return this.renderParagraph();\r\n          else if (this.type === 'text')\r\n            return this.renderText();\r\n        })()}\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  componentWillLoad() {\r\n    if (this.type === 'heading') {\r\n      if (!this.size) {\r\n        if (this.level === 1) {\r\n          this.size = 'xl';\r\n        } else if (this.level === 2) {\r\n          this.size = 'lg';\r\n        } else if (this.level === 3) {\r\n          this.size = 'md';\r\n        } else if (this.level === 4) {\r\n          this.size = 'sm';\r\n        } else if (this.level === 5) {\r\n          this.size = 'xs';\r\n        }\r\n      }\r\n    } else {\r\n      if (!this.size) {\r\n        this.size = 'md';\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  renderHeading() {\r\n    const HeadingTag = `h${this.level}`;\r\n\r\n    return (\r\n      <HeadingTag class='heading'>\r\n        <slot />\r\n      </HeadingTag>\r\n    );\r\n  }\r\n\r\n  renderParagraph() {\r\n    return (\r\n      <p class={{ 'paragraph': true, [`size-${this.size}`]: true }}>\r\n        <slot />\r\n      </p>\r\n    );\r\n  }\r\n\r\n  renderText() {\r\n    return (\r\n      <span class={{ 'text': true, [`size-${this.size}`]: true }}>\r\n        <slot />\r\n      </span>\r\n    );\r\n  }\r\n\r\n}\r\n"],"version":3}