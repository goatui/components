{"file":"goat-svg.entry.esm.js","mappings":";;AAAA,MAAM,KAAK,GAA2B,EAAE,CAAC;AAEzC;AACO,eAAe,SAAS,CAAC,GAAG;EACjC,IAAI,CAAC,GAAG;IAAE,OAAO,EAAE,CAAC;EACpB,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE;IACd,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC;GACnB;EACD,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE;IAC3B,MAAM,EAAE,KAAK;IACb,IAAI,EAAE,MAAM;IACZ,WAAW,EAAE,MAAM;GACpB,CAAC,CAAC;EACH,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;EAC9B,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC;AACpB;;ACfA,MAAM,MAAM,GAAG,4vBAA4vB;;ICQ9vB,GAAG;EALhB;;IAOU,QAAG,GAAW,EAAE,CAAC;IAEhB,QAAG,GAAW,EAAE,CAAC;GA0B3B;EAxBC,MAAM,QAAQ,CAAC,IAAY;IACzB,IAAI,IAAI,CAAC,GAAG;MACV,IAAI,CAAC,GAAG,GAAG,MAAM,SAAS,CAAC,IAAI,CAAC,CAAC;GACpC;EAID,MAAM,gBAAgB,CAAC,QAAgB;IACrC,IAAI,CAAC,GAAG,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,CAAC;GACtC;EAED,MAAM,iBAAiB;IACrB,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GAC/B;EAGD,MAAM;IACJ,QACE,EAAC,IAAI,QACH,WAAK,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,GAAI,CAChD,EACP;GACH;;;;;;;;;","names":[],"sources":["./src/components/content/svg/datasource.ts","./src/components/content/svg/svg.scss?tag=goat-svg&encapsulation=shadow","./src/components/content/svg/svg.tsx"],"sourcesContent":["const cache: Record<string, string> = {};\r\n\r\n// TODO: prevent duplicated request when rendering multiple icons with same name simultaneously\r\nexport async function fetchIcon(url) {\r\n  if (!url) return '';\r\n  if (cache[url]) {\r\n    return cache[url];\r\n  }\r\n  const res = await fetch(url, {\r\n    method: 'GET',\r\n    mode: 'cors',\r\n    credentials: 'omit',\r\n  });\r\n  cache[url] = await res.text();\r\n  return cache[url];\r\n}\r\n","@import \"../../../globalStyles/commons\";\r\n\r\n:host {\r\n  display: inline-block;\r\n}\r\n\r\n.icon {\r\n  line-height: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\nsvg {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n:host(.inherit) .icon {\r\n  color: inherit;\r\n}\r\n","import { Component, h, Host, Prop, State, Watch } from '@stencil/core';\r\nimport { fetchIcon } from './datasource';\r\n\r\n@Component({\r\n  tag: 'goat-svg',\r\n  styleUrl: 'svg.scss',\r\n  shadow: true,\r\n})\r\nexport class Svg {\r\n\r\n  @Prop() src: string = '';\r\n\r\n  @State() svg: string = '';\r\n\r\n  async fetchSvg(name: string) {\r\n    if (this.src)\r\n      this.svg = await fetchIcon(name);\r\n  }\r\n\r\n\r\n  @Watch('src')\r\n  async handleNameChange(newValue: string) {\r\n    this.svg = await fetchIcon(newValue);\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    await this.fetchSvg(this.src);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div innerHTML={this.svg} class={{ 'icon': true }} />\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n"],"version":3}