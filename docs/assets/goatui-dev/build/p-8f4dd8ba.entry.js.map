{"version":3,"sources":["src/components/navigation/tabs/tabs-list/tabs-list.scss?tag=goat-tabs-list&encapsulation=shadow","src/components/navigation/tabs/tabs-list/tabs-list.tsx"],"names":["tabsListCss","TabsList","[object Object]","hostRef","this","variant","managed","evt","deselectAllTabs","target","selected","detail","console","warn","tabs","elm","querySelectorAll","forEach","tab","h","Host","class","tabs-list"],"mappings":"yDAAA,MAAMA,EAAc,y+BCOPC,EAAQ,MALrBC,YAAAC,aAOUC,KAAAC,QAAgC,OAEhCD,KAAAE,QAAmB,MAK3BJ,SAASK,GACP,IAAKH,KAAKE,QAAS,CACjBF,KAAKI,kBACLD,EAAIE,OAAOC,SAAW,KACtB,GAAGH,EAAII,OAAOF,YAEP,CACLG,QAAQC,KAAK,sCAKnBX,kBACE,MAAMY,EAAOV,KAAKW,IAAIC,iBAAiB,YACvCF,EAAKG,SAAQC,IACXA,EAAIR,SAAW,SAInBR,SAEE,OAAQiB,EAACC,EAAI,KACXD,EAAA,MAAA,CAAKE,MAAO,CAAEC,YAAa,KAAMpB,CAAC,WAAWE,KAAKC,WAAY,OAC5Dc,EAAA,MAAA,CAAKE,MAAM,kBACTF,EAAA,OAAA","sourcesContent":["@import \"../../../../globalStyles/commons\";\n\n\n.tabs-list {\n  display: flex;\n  position: relative;\n\n  slot::slotted(goat-button) {\n    display: block;\n    margin: 0;\n    --button-border-width: 0.125rem;\n    --button-border-radius: 0;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    display: block;\n    width: 100%;\n    border-bottom: 2px solid v(--border-color);\n  }\n\n  .tabs-container {\n    display: flex;\n    z-index: 1;\n  }\n}\n","import { Component, ComponentInterface, Element, h, Host, Listen, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'goat-tabs-list',\n  styleUrl: 'tabs-list.scss',\n  shadow: true,\n})\nexport class TabsList implements ComponentInterface {\n\n  @Prop() variant: 'line' | 'contained' = 'line';\n\n  @Prop() managed: boolean = false;\n\n  @Element() elm!: HTMLElement;\n\n  @Listen('goat:tab-click')\n  tabClick(evt) {\n    if (!this.managed) {\n      this.deselectAllTabs();\n      evt.target.selected = true;\n      if(evt.detail.target) {\n\n      } else {\n        console.warn(\"goat-tabs:: No target associated\");\n      }\n    }\n  }\n\n  deselectAllTabs() {\n    const tabs = this.elm.querySelectorAll('goat-tab');\n    tabs.forEach(tab => {\n      tab.selected = false;\n    });\n  }\n\n  render() {\n\n    return (<Host>\n      <div class={{ 'tabs-list': true, [`variant-${this.variant}`]: true }}>\n        <div class=\"tabs-container\">\n          <slot />\n        </div>\n      </div>\n    </Host>);\n  }\n\n}\n"]}