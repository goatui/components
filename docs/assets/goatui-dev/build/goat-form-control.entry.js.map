{"file":"goat-form-control.entry.esm.js","mappings":"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","names":[],"sources":["./src/components/form/form-control/form-control.scss?tag=goat-form-control&encapsulation=shadow","./src/components/form/form-control/form-control.tsx"],"sourcesContent":["@import \"../../../globalStyles/commons\";\r\n\r\n:host {\r\n  display: block;\r\n  margin-bottom: v(--spacing-4);\r\n}\r\n\r\n.form-control {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  slot::slotted(goat-input),\r\n  slot::slotted(goat-textarea),\r\n  slot::slotted(goat-checkbox),\r\n  slot::slotted(goat-radio),\r\n  slot::slotted(goat-code-editor){\r\n    margin-bottom: 0.375rem;\r\n  }\r\n}\r\n\r\n.label {\r\n  @include font-style(text-sm);\r\n  font-weight: v(--font-weight-medium);\r\n  margin-bottom: 0.375rem;\r\n\r\n  color: v(--text-secondary);\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n\r\n  .required {\r\n    color: v(--danger-02);\r\n    padding-right: v(--spacing-1);\r\n  }\r\n}\r\n\r\n.subtitle {\r\n  @include font-style(text-xs);\r\n  font-weight: v(--font-weight-regular);\r\n  .subtitle-caption {\r\n    color: v(--text-05);\r\n  }\r\n  .subtitle-error {\r\n    color: v(--support-error-inverse);\r\n  }\r\n  .subtitle-success {\r\n    color: v(--support-success-inverse);\r\n  }\r\n  .subtitle-warning {\r\n    color: v(--support-warning-inverse);\r\n  }\r\n}\r\n\r\n\r\n.form-control.inline {\r\n  flex-direction: row;\r\n  align-items: center;\r\n  .label {\r\n    margin-bottom: 0;\r\n    margin-inline-end: v(--spacing-2);\r\n  }\r\n}\r\n","import { Component, ComponentInterface, Element, h, Host, Prop } from '@stencil/core';\r\n\r\n/**\r\n * @name Form Control\r\n * @description The Form Control component adds a label and caption for its child control.\r\n * @example <goat-form-control label='Full Name' required>\r\n *   <goat-input type='text'></goat-input>\r\n * </goat-form-control>\r\n */\r\n@Component({\r\n  tag: 'goat-form-control',\r\n  styleUrl: 'form-control.scss',\r\n  shadow: true,\r\n})\r\nexport class FormControl implements ComponentInterface {\r\n\r\n  /**\r\n   * The label for the form control.\r\n   */\r\n  @Prop() label: string;\r\n\r\n  /**\r\n   * The caption for the form control.\r\n   */\r\n  @Prop() caption: string;\r\n\r\n\r\n  @Prop() error: string;\r\n\r\n  @Prop() warning: string;\r\n\r\n  @Prop() success: string;\r\n\r\n  @Prop() inline: boolean = false;\r\n\r\n  /**\r\n   * Whether the form control is required.\r\n   */\r\n  @Prop() required: boolean = false;\r\n\r\n  @Element() elm!: HTMLElement;\r\n\r\n  private controlElm!: HTMLElement;\r\n\r\n  componentDidLoad() {\r\n    this.elm.setAttribute('role', 'group');\r\n    for (const compName of ['goat-input', 'goat-textarea', 'goat-select', 'goat-checkbox', 'goat-radio', 'goat-code-editor']) {\r\n      this.controlElm = this.elm.querySelector(`${compName}`);\r\n      this.passRequiredToField(this.required);\r\n      this.passLabelToField(this.label);\r\n    }\r\n  }\r\n\r\n  passRequiredToField(required: boolean) {\r\n    if (this.controlElm) {\r\n      // @ts-ignore\r\n      this.controlElm.required = required;\r\n    }\r\n  }\r\n\r\n  passLabelToField(label: string) {\r\n    if (this.controlElm) {\r\n      // @ts-ignore\r\n      const oldProps = this.controlElm.configAria;\r\n      // @ts-ignore\r\n      this.controlElm.configAria = {\r\n        'aria-label': label,\r\n        ...oldProps,\r\n      };\r\n    }\r\n  }\r\n\r\n  componentShouldUpdate(newVal: any, _oldVal, propName: string): boolean | void {\r\n    if (propName === 'required') {\r\n      this.passRequiredToField(newVal);\r\n    } else if (propName === 'label') {\r\n      this.passLabelToField(newVal);\r\n    }\r\n  }\r\n\r\n  renderLabel() {\r\n    if (this.label)\r\n      return <label class='label'>\r\n        {this.required && <span class='required'>*</span>}\r\n        {this.label}\r\n      </label>;\r\n  }\r\n\r\n\r\n  renderSubtitle() {\r\n    if (this.error)\r\n      return <div class='subtitle-error'>\r\n        {this.error}\r\n      </div>;\r\n    else if (this.success)\r\n      return <div class='subtitle-success'>\r\n        {this.success}\r\n      </div>;\r\n    else if (this.warning)\r\n      return <div class='subtitle-warning'>\r\n        {this.warning}\r\n      </div>;\r\n    else if (this.caption)\r\n      return <div class='subtitle-caption'>\r\n        {this.caption}\r\n      </div>;\r\n  }\r\n\r\n  getInputState() {\r\n    if (this.error)\r\n      return 'input-state-error';\r\n    else if (this.success)\r\n      return 'input-state-success';\r\n    else if (this.warning)\r\n      return 'input-state-warning';\r\n    return 'input-state-default';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class={{\r\n        [this.getInputState()]: true,\r\n      }}>\r\n        <div class={{ 'form-control': true, 'inline': this.inline }}>\r\n          {this.renderLabel()}\r\n          <div class='field'>\r\n            <slot />\r\n          </div>\r\n          <div class='subtitle'>\r\n            {this.renderSubtitle()}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n"],"version":3}