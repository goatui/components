{"version":3,"sources":["src/components/table/table/table.scss?tag=goat-table&encapsulation=shadow","src/components/table/table/table.tsx"],"names":["tableCss","DEFAULT_CELL_WIDTH","SUPPORTED_PAGE_SIZES","value","label","Table","[object Object]","hostRef","this","columns","data","selectedRowKeys","keyField","managed","sortable","sortOrder","paginate","page","pageSize","emptyState","title","description","hoveredCell","isSelectAll","onSelectAllClick","map","row","onSelectChange","onRowSelectClick","includes","filter","rowId","push","onCellMouseOver","column","goatSelectChange","emit","col","goatCellClick","record","fixedCols","scrollCols","selectionType","h","class","size","onGoat:change","forEach","colWidth","width","parseInt","colEl","sort","sortBy","name","style","icon","variant","onClick","goatSort","rows","a","b","slice","center","tabindex","col-hover","onMouseOver","selection","window","getSelection","type","onCellClick","fixed","row-hover","totalItems","length","inline","items","positions","e","detail","goatPage","getTotalItems","disabled","Host","table","renderHeader","renderBody","renderEmptyState","renderPagination","Object","assign"],"mappings":"gEAAA,MAAMA,EAAW,sjHCGjB,MAAMC,EAAqB,GAC3B,MAAMC,EAAuB,CAAC,CAC5BC,MAAO,GACPC,MAAO,IACN,CACDD,MAAO,GACPC,MAAO,IACN,CACDD,MAAO,GACPC,MAAO,IACN,CACDD,MAAO,IACPC,MAAO,UAcIC,EAAK,MALlBC,YAAAC,qMAyBUC,KAAAC,QAAiB,GAcjBD,KAAAE,KAAc,GAIGF,KAAAG,gBAA4B,GAE7CH,KAAAI,SAAmB,KAEnBJ,KAAAK,QAAmB,MAEnBL,KAAAM,SAAoB,KAIHN,KAAAO,UAA4B,MAE7CP,KAAAQ,SAAoB,KAEpBR,KAAAS,KAAe,EAEfT,KAAAU,SAAmB,GAIFV,KAAAW,WAAkB,CACzCC,MAAS,WACTC,YAAe,iCAGAb,KAAAc,YAAmB,GACnBd,KAAAe,YAAuB,MAOxCf,KAAAgB,iBAAmB,KACjB,IAAIb,EAAkB,GACtBH,KAAKe,aAAef,KAAKe,YACzB,GAAIf,KAAKe,YACPZ,EAAkBH,KAAKE,KAAKe,KAAKC,GAAQA,EAAIlB,KAAKI,YACpDJ,KAAKmB,eAAehB,IAGtBH,KAAAoB,iBAAoBF,IAClB,IAAIf,EAAkB,IAAIH,KAAKG,iBAC/B,GAAIA,EAAgBkB,SAASH,EAAIlB,KAAKI,WAAY,CAChDJ,KAAKe,YAAc,MACnBZ,EAAkBA,EAAgBmB,QAAQC,GAAUA,IAAUL,EAAIlB,KAAKI,gBAClE,CACLD,EAAgBqB,KAAKN,EAAIlB,KAAKI,WAEhCJ,KAAKmB,eAAehB,IAGtBH,KAAAyB,gBAAkB,CAACP,EAAUQ,KAC3B1B,KAAKc,YAAc,CAAEI,IAAAA,EAAKQ,OAAAA,IAG5B5B,eAAeK,GACbH,KAAKG,gBAAkBA,EACvBH,KAAK2B,iBAAiBC,KAAK,CAAEjC,MAAOK,KAAKG,gBAAiBY,YAAaf,KAAKe,cAG9EjB,YAAYoB,EAAUW,GACpB7B,KAAK8B,cAAcF,KAAK,CAAEG,OAAQb,EAAKQ,OAAQG,IAGjD/B,eACE,MAAMkC,EAAY,GAClB,MAAMC,EAAa,GAEnB,GAAIjC,KAAKkC,gBAAkB,WAAY,CACrCF,EAAUR,KACRW,EAAA,MAAA,CAAKC,MAAM,cACTD,EAAA,MAAA,CAAKC,MAAM,eACTD,EAAA,gBAAA,CAAeC,MAAM,iBAAiBC,KAAK,KAAK1C,MAAOK,KAAKe,YAAWuB,gBACzCtC,KAAKgB,sBAI3ChB,KAAKC,QAAQsC,SAASV,IACpB,IAAIW,EAAW/C,EACf,GAAIoC,EAAIY,MACND,EAAWE,SAASb,EAAIY,OAC1B,MAAME,EAAQR,EAAA,MAAA,CAAKC,MAAO,CAAEP,IAAO,KAAMe,KAAQ5C,KAAK6C,SAAWhB,EAAIiB,MAClDC,MAAO,CAAEN,MAAOD,EAAW,QAC5CL,EAAA,MAAA,CAAKC,MAAM,eACTD,EAAA,MAAA,CAAKC,MAAM,YAAYP,EAAIjC,OAC3BuC,EAAA,MAAA,CAAKC,MAAM,eAEP,MACE,IAAKpC,KAAKM,SACR,OACF,IAAI0C,EAAO,gBACX,GAAIhD,KAAK6C,SAAWhB,EAAIiB,KAAM,CAC5B,GAAI9C,KAAKO,YAAc,MACrByC,EAAO,gBAEPA,EAAO,aAEX,OAAOb,EAAA,cAAA,CAAaE,KAAK,KACLW,KAAMA,EACNZ,MAAM,6BACNa,QAAQ,QAAQC,QAAS,KAC3C,GAAIlD,KAAK6C,SAAWhB,EAAIiB,KAAM,CAC5B,GAAI9C,KAAKO,YAAc,MACrBP,KAAKO,UAAY,YAEjBP,KAAK6C,OAAS,SACX,CACL7C,KAAK6C,OAAShB,EAAIiB,KAClB9C,KAAKO,UAAY,MAEnBP,KAAKmD,SAASvB,KAAK,CAAEiB,OAAQ7C,KAAK6C,OAAQtC,UAAWP,KAAKO,gBAvB9D,MA+BPsB,EAAS,MAAIG,EAAUR,KAAKmB,GAASV,EAAWT,KAAKmB,MAGxD,OAAOR,EAAA,MAAA,CAAKC,MAAM,UAChBD,EAAA,MAAA,CAAKC,MAAM,OACTD,EAAA,MAAA,CAAKC,MAAM,mCACRJ,GAEHG,EAAA,MAAA,CAAKC,MAAM,wCACRH,KAMTnC,aACE,MAAMsD,EAAO,GAEb,IAAIlD,EAAO,IAAIF,KAAKE,MAEpB,IAAKF,KAAKK,QAAS,CACjB,GAAIL,KAAKM,UAAYN,KAAK6C,OAAQ,CAChC3C,EAAOA,EAAK0C,MAAK,CAACS,EAAGC,KACnB,GAAID,EAAErD,KAAK6C,QAAUS,EAAEtD,KAAK6C,QAC1B,OAAO7C,KAAKO,YAAc,OAAS,EAAI,EACzC,GAAI8C,EAAErD,KAAK6C,QAAUS,EAAEtD,KAAK6C,QAC1B,OAAO7C,KAAKO,YAAc,MAAQ,GAAK,EACzC,OAAO,KAGX,GAAIP,KAAKQ,SAAU,CACjBN,EAAOA,EAAKqD,OAAOvD,KAAKS,KAAO,GAAKT,KAAKU,SAAWV,KAAS,KAAIA,KAAKU,WAI1ER,EAAKqC,SAASrB,IACZ,MAAMc,EAAY,GAClB,MAAMC,EAAa,GAEnB,GAAIjC,KAAKkC,gBAAkB,WACzBF,EAAUR,KAAKW,EAAA,MAAA,CAAKC,MAAO,CAAEP,IAAO,KAAM2B,OAAU,OAClDrB,EAAA,MAAA,CAAKC,MAAM,eACTD,EAAA,gBAAA,CAAeC,MAAM,iBAAiBC,KAAK,KAAK1C,MAAOK,KAAKG,gBAAgBkB,SAASH,EAAIlB,KAAKI,WAAUkC,gBAC1E,IAAMtC,KAAKoB,iBAAiBF,QAKhElB,KAAKC,QAAQsC,SAASb,IACpB,IAAIc,EAAW/C,EACf,GAAIiC,EAAOe,MACTD,EAAWE,SAAShB,EAAOe,OAC7B,MAAME,EAAQR,EAAA,MAAA,CACZsB,SAAS,IACTrB,MAAO,CAAEP,IAAO,KAAM6B,YAAc1D,KAAKc,YAAYI,MAAQA,GAAOlB,KAAKc,YAAYY,SAAWA,GAChGqB,MAAO,CAAEN,MAAOD,EAAW,OAC3BmB,YAAa,IAAM3D,KAAKyB,gBAAgBP,EAAKQ,GAC7CwB,QAAS,KACP,MAAMU,EAAYC,OAAOC,eACzB,GAAIF,EAAUG,MAAQ,QACpB/D,KAAKgE,YAAY9C,EAAKQ,KAE1BS,EAAA,MAAA,CAAKC,MAAM,eACTD,EAAA,MAAA,CAAKC,MAAM,WAAWxB,MAAOM,IAAG,MAAHA,SAAG,OAAA,EAAHA,EAAMQ,EAAOoB,OAAQ5B,IAAG,MAAHA,SAAG,OAAA,EAAHA,EAAMQ,EAAOoB,SAInEpB,EAAOuC,MAAQjC,EAAUR,KAAKmB,GAASV,EAAWT,KAAKmB,MAEzDS,EAAK5B,KAAKW,EAAA,MAAA,CAAKC,MAAO,CAAElB,IAAO,KAAMgD,YAAclE,KAAKc,YAAYI,MAAQA,IAC1EiB,EAAA,MAAA,CAAKC,MAAM,mCACRJ,GAEHG,EAAA,MAAA,CAAKC,MAAM,wCACRH,QAKP,OAAOE,EAAA,MAAA,CAAKC,MAAM,QACfgB,GAILtD,gBACE,IAAIqE,EAAanE,KAAKmE,WACtB,GAAInE,KAAKQ,WAAaR,KAAKK,QACzB8D,EAAanE,KAAKE,KAAKkE,OACzB,OAAOD,EAGTrE,mBACE,GAAIE,KAAKQ,SACP,OAAO2B,EAAA,MAAA,CAAKC,MAAM,cAChBD,EAAA,MAAA,CAAKC,MAAM,qBACTD,EAAA,oBAAA,CAAmBvC,MAAM,kBAAkByE,OAAM,KAACjC,MAAM,gBACtDD,EAAA,cAAA,CAAaE,KAAK,KACLD,MAAM,SACNkC,MAAO5E,EACP6E,UAAU,YACV5E,MAAOK,KAAKU,SAAQ4B,gBACJkC,IACdxE,KAAKU,SAAW8D,EAAEC,OAAO9E,MACzBK,KAAK0E,SAAS9C,KAAK,CAAEnB,KAAMT,KAAKS,KAAMC,SAAUV,KAAKU,gBAIxEyB,EAAA,MAAA,CAAKC,MAAM,yBACTD,EAAA,YAAA,CACEE,KAAK,MAAMrC,KAAKU,UAAYV,KAAKS,KAAO,GAAE,MAAKT,KAAKU,SAAYV,KAAS,KAAIA,KAAK2E,gBAAkB3E,KAAKU,SAAYV,KAAS,KAAIA,KAAK2E,gBAAe,OAAM3E,KAAK2E,gBAAe,WAGpLxC,EAAA,MAAA,CAAKC,MAAM,oBACTD,EAAA,MAAA,CAAKC,MAAM,8BAETD,EAAA,MAAA,CAAKC,MAAM,yCACTD,EAAA,cAAA,CAAaE,KAAK,KAAKW,KAAK,aAAaC,QAAQ,QACpC2B,SAAU5E,KAAKS,OAAS,EACxByC,QAAS,KACPlD,KAAKS,KAAOT,KAAKS,KAAO,EACxBT,KAAK0E,SAAS9C,KAAK,CAAEnB,KAAMT,KAAKS,KAAMC,SAAUV,KAAKU,cAEpEyB,EAAA,cAAA,CAAaE,KAAK,KAAKW,KAAK,cAAcC,QAAQ,QACrC2B,SAAU5E,KAAKU,SAAYV,KAAS,MAAKA,KAAK2E,gBAC9CzB,QAAS,KACPlD,KAAKS,KAAOT,KAAKS,KAAO,EACxBT,KAAK0E,SAAS9C,KAAK,CAAEnB,KAAMT,KAAKS,KAAMC,SAAUV,KAAKU,kBAQhFZ,SACE,OAAOqC,EAAC0C,EAAI,KACV1C,EAAA,MAAA,CAAKC,MAAO,CAAE0C,MAAS,KAAMxE,SAAYN,KAAKM,SAAUE,SAAYR,KAAKQ,WACvE2B,EAAA,MAAA,CAAKC,MAAM,0BACRpC,KAAK+E,eACJ/E,KAAKE,KAAW,OAAIF,KAAKgF,aAAehF,KAAKiF,oBAEjD9C,EAAA,MAAA,CAAKC,MAAM,gBACRpC,KAAKkF,sBAMNpF,mBACN,OAAOqC,EAAA,MAAA,CAAKC,MAAM,eAChBD,EAAA,mBAAAgD,OAAAC,OAAA,CAAkBhD,MAAM,kBAAqBpC,KAAKW","sourcesContent":["@import \"../../../globalStyles/commons\";\n\n:host {\n  display: block;\n  height: 100%;\n  min-height: 20em;\n  --table-border-color: #{v(--ui-04)};\n}\n\n.table {\n  height: 100%;\n  border: 1px solid var(--table-border-color);\n  @include font-style(text-md);\n\n  .table-scroll-container {\n    position: relative;\n    overflow: auto;\n    height: 100%;\n  }\n\n  .empty-table {\n    height: 80%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  &.paginate .table-scroll-container{\n    height: calc(100% - 2.4375rem); // remove height of pagination bar\n  }\n\n  .pagination {\n    display: flex;\n    border-top: 1px solid var(--table-border-color);\n\n    .form-control {\n      margin: 0;\n    }\n    .select {\n      margin: 0;\n      --input-border-radius: none;\n      --input-border-style: none;\n      border-left: 1px solid var(--table-border-color);\n      border-right: 1px solid var(--table-border-color);\n    }\n\n    .page-sizes-select {\n      margin-inline-start: v(--spacing-3);\n    }\n\n    .pagination-item-count {\n      margin-inline-start: v(--spacing-4);\n      flex: 1;\n      display: flex;\n      align-items: center;\n    }\n  }\n}\n\n\n.row {\n  display: flex;\n  box-sizing: border-box;\n\n\n  .columns-container {\n    display: flex;\n  }\n\n  .col {\n    margin: 0;\n    color: v(--text-primary);\n    box-sizing: border-box;\n    vertical-align: middle;\n    line-height: normal;\n\n    .col-content {\n      display: flex;\n      align-items: center;\n      height: 100%;\n\n      .col-text {\n        padding: v(--spacing-2) v(--spacing-3);\n        flex: 1;\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n      }\n\n      .col-action {\n        --button-border-radius: none;\n\n        &.has-focus {\n          z-index: 12;\n        }\n      }\n\n      .checkbox {\n        padding: 0 v(--spacing-3);\n      }\n    }\n\n    &.center .col-content {\n      justify-content: center;\n    }\n\n    &:last-child {\n      flex: 1;\n    }\n  }\n\n  .fixed-columns {\n    position: sticky;\n    left: 0;\n  }\n\n  .scrollable-columns {\n    flex: 1;\n  }\n\n}\n\n.header {\n  z-index: v(--z-index-table-header);\n  font-weight: v(--font-weight-semi-bold);\n  text-transform: uppercase;\n  position: sticky;\n  top: 0;\n  background: v(--ui-01);\n\n\n  .left-panel {\n    position: sticky;\n    top: 0;\n    left: 0;\n  }\n\n  .col {\n    background: v(--ui-01);\n    border-bottom: 1px solid var(--table-border-color);\n\n    &.sort {\n      background: v(--active-ui);\n    }\n  }\n}\n\n.body {\n\n  .row {\n    &:hover {\n      background-color: v(--hover-ui);\n\n      .col {\n        background-color: v(--hover-ui);\n      }\n    }\n\n    .col {\n      cursor: pointer;\n      background: v(--background);\n      border: 2px solid transparent;\n      border-bottom: 1px solid var(--ui-03);\n\n      &:focus {\n        outline: none;\n        border: 2px solid v(--color-primary);\n        z-index: 1;\n      }\n    }\n  }\n\n\n  .left-panel {\n    position: sticky;\n    left: 0;\n  }\n\n}\n\n:host(.show-full-content) .body .col-text {\n  overflow: initial;\n  white-space: initial;\n  text-overflow: initial;\n}\n\n:host-context([data-theme=dark]) {\n\n}\n\n.empty-data {\n  text-align: center;\n  position: absolute;\n  margin: auto;\n  top: 46px;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  border-radius: 3px;\n  height: max-content;\n  color: v(--color-neutral-600);\n}\n","import { Component, Element, Event, EventEmitter, h, Host, Prop, State } from '@stencil/core';\n\n\nconst DEFAULT_CELL_WIDTH = 16; // in rem\nconst SUPPORTED_PAGE_SIZES = [{\n  value: 10,\n  label: 10,\n}, {\n  value: 25,\n  label: 25,\n}, {\n  value: 50,\n  label: 50,\n}, {\n  value: 100,\n  label: 100,\n}];\n\n\n/**\n * @name Table\n * @description A configurable component for displaying tabular data.\n * @img /assets/img/table.png\n */\n@Component({\n  tag: 'goat-table',\n  styleUrl: 'table.scss',\n  shadow: true,\n})\nexport class Table {\n\n  @Element() elm!: HTMLElement;\n\n\n  /**\n   * Grid columns configuration.\n   * [\n   * {\n   *   \"name\":\"name\",\n   *   \"label\":\"Name\",\n   *   \"width\":300,\n   *   \"fixed\":true\n   *  },\n   * {\n   *   \"name\":\"age\",\n   *   \"label\":\"Age\"\n   * }\n   * ]\n   */\n  @Prop() columns: any[] = [];\n\n  /**\n   * Grid data to display on table\n   * [{\n   *  'id': '5e7118ddce4b3d577956457f',\n   *  'age': 21,\n   *  'name': 'John',\n   *  'company': 'India',\n   *  'email': 'john@example.com',\n   *  'phone': '+1 (839) 560-3581',\n   *  'address': '326 Irving Street, Grimsley, Texas, 4048'\n   *  }]\n   */\n  @Prop() data: any[] = [];\n\n  @Prop() selectionType: 'checkbox' | undefined;\n\n  @Prop({ mutable: true }) selectedRowKeys: string[] = [];\n\n  @Prop() keyField: string = 'id';\n\n  @Prop() managed: boolean = false;\n\n  @Prop() sortable: boolean = true;\n\n  @Prop({ mutable: true }) sortBy: string;\n\n  @Prop({ mutable: true }) sortOrder: 'asc' | 'desc' = 'asc';\n\n  @Prop() paginate: boolean = true;\n\n  @Prop() page: number = 1;\n\n  @Prop() pageSize: number = 10;\n\n  @Prop({ mutable: true }) totalItems;\n\n  @Prop({ mutable: true }) emptyState: any = {\n    'title': 'No items',\n    'description': 'There are no items to display',\n  };\n\n  @State() private hoveredCell: any = {};\n  @State() private isSelectAll: boolean = false;\n\n  @Event({ eventName: 'goat:table-cell-click' }) goatCellClick: EventEmitter;\n  @Event({ eventName: 'goat:table-select-change' }) goatSelectChange: EventEmitter;\n  @Event({ eventName: 'goat:sort' }) goatSort: EventEmitter;\n  @Event({ eventName: 'goat:page' }) goatPage: EventEmitter;\n\n  onSelectAllClick = () => {\n    let selectedRowKeys = [];\n    this.isSelectAll = !this.isSelectAll;\n    if (this.isSelectAll)\n      selectedRowKeys = this.data.map((row) => row[this.keyField]);\n    this.onSelectChange(selectedRowKeys);\n  };\n\n  onRowSelectClick = (row) => {\n    let selectedRowKeys = [...this.selectedRowKeys];\n    if (selectedRowKeys.includes(row[this.keyField])) {\n      this.isSelectAll = false;\n      selectedRowKeys = selectedRowKeys.filter((rowId) => rowId !== row[this.keyField]);\n    } else {\n      selectedRowKeys.push(row[this.keyField]);\n    }\n    this.onSelectChange(selectedRowKeys);\n  };\n\n  onCellMouseOver = (row: any, column: any) => {\n    this.hoveredCell = { row, column };\n  };\n\n  onSelectChange(selectedRowKeys: any) {\n    this.selectedRowKeys = selectedRowKeys;\n    this.goatSelectChange.emit({ value: this.selectedRowKeys, isSelectAll: this.isSelectAll });\n  }\n\n  onCellClick(row: any, col: any) {\n    this.goatCellClick.emit({ record: row, column: col });\n  }\n\n  renderHeader() {\n    const fixedCols = [];\n    const scrollCols = [];\n\n    if (this.selectionType === 'checkbox') {\n      fixedCols.push(\n        <div class='col center'>\n          <div class='col-content'>\n            <goat-checkbox class='checkbox light' size='sm' value={this.isSelectAll}\n                           onGoat:change={this.onSelectAllClick} />\n          </div>\n        </div>);\n    }\n    this.columns.forEach((col) => {\n      let colWidth = DEFAULT_CELL_WIDTH;\n      if (col.width)\n        colWidth = parseInt(col.width);\n      const colEl = <div class={{ 'col': true, 'sort': this.sortBy === col.name }}\n                         style={{ width: colWidth + 'rem' }}>\n        <div class='col-content'>\n          <div class='col-text'>{col.label}</div>\n          <div class='col-actions'>\n            {\n              (() => {\n                if (!this.sortable)\n                  return;\n                let icon = 'arrow-down-up';\n                if (this.sortBy === col.name) {\n                  if (this.sortOrder === 'asc')\n                    icon = 'arrow-up';\n                  else\n                    icon = 'arrow-down';\n                }\n                return <goat-button size='sm'\n                                    icon={icon}\n                                    class='col-action color-secondary'\n                                    variant='ghost' onClick={() => {\n                  if (this.sortBy === col.name) {\n                    if (this.sortOrder === 'asc')\n                      this.sortOrder = 'desc';\n                    else\n                      this.sortBy = null;\n                  } else {\n                    this.sortBy = col.name;\n                    this.sortOrder = 'asc';\n                  }\n                  this.goatSort.emit({ sortBy: this.sortBy, sortOrder: this.sortOrder });\n                }} />;\n              })()\n            }\n          </div>\n        </div>\n\n      </div>;\n      (col.fixed) ? fixedCols.push(colEl) : scrollCols.push(colEl);\n    });\n\n    return <div class='header'>\n      <div class='row'>\n        <div class='fixed-columns columns-container'>\n          {fixedCols}\n        </div>\n        <div class='scrollable-columns columns-container'>\n          {scrollCols}\n        </div>\n      </div>\n    </div>;\n  }\n\n  renderBody() {\n    const rows = [];\n\n    let data = [...this.data];\n\n    if (!this.managed) {\n      if (this.sortable && this.sortBy) {\n        data = data.sort((a, b) => {\n          if (a[this.sortBy] < b[this.sortBy])\n            return this.sortOrder === 'asc' ? -1 : 1;\n          if (a[this.sortBy] > b[this.sortBy])\n            return this.sortOrder === 'asc' ? 1 : -1;\n          return 0;\n        });\n      }\n      if (this.paginate) {\n        data = data.slice((this.page - 1) * this.pageSize, (this.page) * this.pageSize);\n      }\n    }\n\n    data.forEach((row) => {\n      const fixedCols = [];\n      const scrollCols = [];\n\n      if (this.selectionType === 'checkbox')\n        fixedCols.push(<div class={{ 'col': true, 'center': true }}>\n          <div class='col-content'>\n            <goat-checkbox class='checkbox light' size='sm' value={this.selectedRowKeys.includes(row[this.keyField])}\n                           onGoat:change={() => this.onRowSelectClick(row)} />\n          </div>\n        </div>);\n\n\n      this.columns.forEach((column) => {\n        let colWidth = DEFAULT_CELL_WIDTH;\n        if (column.width)\n          colWidth = parseInt(column.width);\n        const colEl = <div\n          tabindex='1'\n          class={{ 'col': true, 'col-hover': (this.hoveredCell.row === row && this.hoveredCell.column === column) }}\n          style={{ width: colWidth + 'rem' }}\n          onMouseOver={() => this.onCellMouseOver(row, column)}\n          onClick={() => {\n            const selection = window.getSelection();\n            if (selection.type != 'Range')\n              this.onCellClick(row, column);\n          }}>\n          <div class='col-content'>\n            <div class='col-text' title={row?.[column.name]}>{row?.[column.name]}</div>\n          </div>\n        </div>;\n\n        column.fixed ? fixedCols.push(colEl) : scrollCols.push(colEl);\n      });\n      rows.push(<div class={{ 'row': true, 'row-hover': (this.hoveredCell.row === row) }}>\n        <div class='fixed-columns columns-container'>\n          {fixedCols}\n        </div>\n        <div class='scrollable-columns columns-container'>\n          {scrollCols}\n        </div>\n      </div>);\n    });\n\n    return <div class='body'>\n      {rows}\n    </div>;\n  }\n\n  getTotalItems() {\n    let totalItems = this.totalItems;\n    if (this.paginate && !this.managed)\n      totalItems = this.data.length;\n    return totalItems;\n  }\n\n  renderPagination() {\n    if (this.paginate)\n      return <div class='pagination'>\n        <div class='page-sizes-select'>\n          <goat-form-control label='Items per page:' inline class='form-control'>\n            <goat-select size='sm'\n                         class='select'\n                         items={SUPPORTED_PAGE_SIZES}\n                         positions='top-right'\n                         value={this.pageSize}\n                         onGoat:change={(e) => {\n                           this.pageSize = e.detail.value;\n                           this.goatPage.emit({ page: this.page, pageSize: this.pageSize });\n                         }} />\n          </goat-form-control>\n        </div>\n        <div class='pagination-item-count'>\n          <goat-text\n            size='sm'>{this.pageSize * (this.page - 1)} - {this.pageSize * (this.page) < this.getTotalItems() ? this.pageSize * (this.page) : this.getTotalItems()} of {this.getTotalItems()} items\n          </goat-text>\n        </div>\n        <div class='pagination-right'>\n          <div class='table-footer-right-content'>\n\n            <div class='table-footer-right-content-pagination'>\n              <goat-button size='sm' icon='arrow-left' variant='ghost'\n                           disabled={this.page === 1}\n                           onClick={() => {\n                             this.page = this.page - 1;\n                             this.goatPage.emit({ page: this.page, pageSize: this.pageSize });\n                           }} />\n              <goat-button size='sm' icon='arrow-right' variant='ghost'\n                           disabled={this.pageSize * (this.page) >= this.getTotalItems()}\n                           onClick={() => {\n                             this.page = this.page + 1;\n                             this.goatPage.emit({ page: this.page, pageSize: this.pageSize });\n                           }} />\n            </div>\n          </div>\n        </div>\n      </div>;\n  }\n\n  render() {\n    return <Host>\n      <div class={{ 'table': true, 'sortable': this.sortable, 'paginate': this.paginate }}>\n        <div class='table-scroll-container'>\n          {this.renderHeader()}\n          {(this.data.length) ? this.renderBody() : this.renderEmptyState()}\n        </div>\n        <div class='table-footer'>\n          {this.renderPagination()}\n        </div>\n      </div>\n    </Host>;\n  }\n\n  private renderEmptyState() {\n    return <div class='empty-table'>\n      <goat-empty-state class='content-center' {...this.emptyState} />\n    </div>;\n  }\n\n}\n"]}