{"file":"goat-tabs.entry.esm.js","mappings":";;AAAA,MAAM,OAAO,GAAG,k9BAAk9B;;ICer9B,IAAI;EALjB;;IAOU,YAAO,GAAyB,MAAM,CAAC;IAEvC,YAAO,GAAY,KAAK,CAAC;GAmClC;EA9BC,QAAQ,CAAC,GAAG;IACV,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;MACjB,IAAI,CAAC,eAAe,EAAE,CAAC;MACvB,GAAG,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;MAC3B,IAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;OAErB;WAAM;QACL,OAAO,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;OAClD;KACF;GACF;EAED,eAAe;IACb,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;IACnD,IAAI,CAAC,OAAO,CAAC,GAAG;MACd,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;KACtB,CAAC,CAAC;GACJ;EAED,MAAM;IAEJ,QAAQ,EAAC,IAAI,QACX,WAAK,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,WAAW,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,EAAE,IAC7D,WAAK,KAAK,EAAC,gBAAgB,IACzB,eAAQ,CACJ,CACF,CACD,EAAE;GACV;;;;;;;","names":[],"sources":["./src/components/navigation/tabs/tabs.scss?tag=goat-tabs&encapsulation=shadow","./src/components/navigation/tabs/tabs.tsx"],"sourcesContent":["@import \"../../../globalStyles/commons\";\n\n\n.tabs {\n  display: flex;\n  position: relative;\n\n  slot::slotted(goat-button) {\n    display: block;\n    margin: 0;\n    --button-border-width: 0.125rem;\n    --button-border-radius: 0;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    display: block;\n    width: 100%;\n    border-bottom: 2px solid v(--border-color);\n  }\n\n  .tabs-container {\n    display: flex;\n    z-index: 1;\n  }\n}\n","import { Component, ComponentInterface, Element, h, Host, Listen, Prop } from '@stencil/core';\n\n/**\n * @name Tabs\n * @description An interactive button with a range of presentation options.\n * @example <goat-tabs>\n *   <goat-tab selected >Tab 1</goat-tab>\n *   <goat-tab>Tab 2</goat-tab>\n * </goat-tabs>\n */\n@Component({\n  tag: 'goat-tabs',\n  styleUrl: 'tabs.scss',\n  shadow: true,\n})\nexport class Tabs implements ComponentInterface {\n\n  @Prop() variant: 'line' | 'contained' = 'line';\n\n  @Prop() managed: boolean = false;\n\n  @Element() elm!: HTMLElement;\n\n  @Listen('goat:tab-click')\n  tabClick(evt) {\n    if (!this.managed) {\n      this.deselectAllTabs();\n      evt.target.selected = true;\n      if(evt.detail.target) {\n\n      } else {\n        console.warn(\"goat-tabs:: No target associated\");\n      }\n    }\n  }\n\n  deselectAllTabs() {\n    const tabs = this.elm.querySelectorAll('goat-tab');\n    tabs.forEach(tab => {\n      tab.selected = false;\n    });\n  }\n\n  render() {\n\n    return (<Host>\n      <div class={{ 'tabs': true, [`variant-${this.variant}`]: true }}>\n        <div class=\"tabs-container\">\n          <slot />\n        </div>\n      </div>\n    </Host>);\n  }\n\n}\n"],"version":3}