{"version":3,"sources":["tokens/_color.scss","theme.scss"],"names":[],"mappings":"AA8NA;AAAA;AAAA;AAMA;AAAA;AAAA;AAQA;AAAA;AAAA;AASA;AAAA;AAAA;AA4BA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAKA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAUA;AAAA;AAAA;AC7XQ;AAER;EAEI;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;;AAIJ;EACE;;;AAGF;EAEI;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA","file":"theme.css","sourcesContent":["@use \"sass:map\";\r\n\r\n$colors: (\r\n  black: (\r\n    100: #000000,\r\n  ),\r\n  blue: (\r\n    10: #edf5ff,\r\n    20: #d0e2ff,\r\n    30: #a6c8ff,\r\n    40: #78a9ff,\r\n    50: #4589ff,\r\n    60: #0f62fe,\r\n    70: #0043ce,\r\n    80: #002d9c,\r\n    90: #001d6c,\r\n    100: #001141,\r\n  ),\r\n  cool-gray: (\r\n    10: #f2f4f8,\r\n    20: #dde1e6,\r\n    30: #c1c7cd,\r\n    40: #a2a9b0,\r\n    50: #878d96,\r\n    60: #697077,\r\n    70: #4d5358,\r\n    80: #343a3f,\r\n    90: #21272a,\r\n    100: #121619,\r\n  ),\r\n  coolGray: (\r\n    10: #f2f4f8,\r\n    20: #dde1e6,\r\n    30: #c1c7cd,\r\n    40: #a2a9b0,\r\n    50: #878d96,\r\n    60: #697077,\r\n    70: #4d5358,\r\n    80: #343a3f,\r\n    90: #21272a,\r\n    100: #121619,\r\n  ),\r\n  cyan: (\r\n    10: #e5f6ff,\r\n    20: #bae6ff,\r\n    30: #82cfff,\r\n    40: #33b1ff,\r\n    50: #1192e8,\r\n    60: #0072c3,\r\n    70: #00539a,\r\n    80: #003a6d,\r\n    90: #012749,\r\n    100: #061727,\r\n  ),\r\n  gray: (\r\n    10: #f4f4f4,\r\n    20: #e0e0e0,\r\n    30: #c6c6c6,\r\n    40: #a8a8a8,\r\n    50: #8d8d8d,\r\n    60: #6f6f6f,\r\n    70: #525252,\r\n    80: #393939,\r\n    90: #262626,\r\n    100: #161616,\r\n  ),\r\n  green: (\r\n    10: #defbe6,\r\n    20: #a7f0ba,\r\n    30: #6fdc8c,\r\n    40: #42be65,\r\n    50: #24a148,\r\n    60: #198038,\r\n    70: #0e6027,\r\n    80: #044317,\r\n    90: #022d0d,\r\n    100: #071908,\r\n  ),\r\n  magenta: (\r\n    10: #fff0f7,\r\n    20: #ffd6e8,\r\n    30: #ffafd2,\r\n    40: #ff7eb6,\r\n    50: #ee5396,\r\n    60: #d02670,\r\n    70: #9f1853,\r\n    80: #740937,\r\n    90: #510224,\r\n    100: #2a0a18,\r\n  ),\r\n  orange: (\r\n    10: #fff2e8,\r\n    20: #ffd9be,\r\n    30: #ffb784,\r\n    40: #ff832b,\r\n    50: #eb6200,\r\n    60: #ba4e00,\r\n    70: #8a3800,\r\n    80: #5e2900,\r\n    90: #3e1a00,\r\n    100: #231000,\r\n  ),\r\n  purple: (\r\n    10: #f6f2ff,\r\n    20: #e8daff,\r\n    30: #d4bbff,\r\n    40: #be95ff,\r\n    50: #a56eff,\r\n    60: #8a3ffc,\r\n    70: #6929c4,\r\n    80: #491d8b,\r\n    90: #31135e,\r\n    100: #1c0f30,\r\n  ),\r\n  red: (\r\n    10: #fff1f1,\r\n    20: #ffd7d9,\r\n    30: #ffb3b8,\r\n    40: #ff8389,\r\n    50: #fa4d56,\r\n    60: #da1e28,\r\n    70: #a2191f,\r\n    80: #750e13,\r\n    90: #520408,\r\n    100: #2d0709,\r\n  ),\r\n  teal: (\r\n    10: #d9fbfb,\r\n    20: #9ef0f0,\r\n    30: #3ddbd9,\r\n    40: #08bdba,\r\n    50: #009d9a,\r\n    60: #007d79,\r\n    70: #005d5d,\r\n    80: #004144,\r\n    90: #022b30,\r\n    100: #081a1c,\r\n  ),\r\n  warm-gray: (\r\n    10: #f7f3f2,\r\n    20: #e5e0df,\r\n    30: #cac5c4,\r\n    40: #ada8a8,\r\n    50: #8f8b8b,\r\n    60: #726e6e,\r\n    70: #565151,\r\n    80: #3c3838,\r\n    90: #272525,\r\n    100: #171414,\r\n  ),\r\n  warmGray: (\r\n    10: #f7f3f2,\r\n    20: #e5e0df,\r\n    30: #cac5c4,\r\n    40: #ada8a8,\r\n    50: #8f8b8b,\r\n    60: #726e6e,\r\n    70: #565151,\r\n    80: #3c3838,\r\n    90: #272525,\r\n    100: #171414,\r\n  ),\r\n  white: (\r\n    0: #ffffff,\r\n  ),\r\n  yellow: (\r\n    10: #fcf4d6,\r\n    20: #fddc69,\r\n    30: #f1c21b,\r\n    40: #d2a106,\r\n    50: #b28600,\r\n    60: #8e6a00,\r\n    70: #684e00,\r\n    80: #483700,\r\n    90: #302400,\r\n    100: #1c1500,\r\n  ),\r\n  new-purple: (\r\n    10: #fff1f1,\r\n    20: #F2CAFD,\r\n    30: #E197FB,\r\n    40: #C662F5,\r\n    50: #A93BEC,\r\n    60: #7F00E0,\r\n    70: #6200C0,\r\n    80: #4900A1,\r\n    90: #330081,\r\n    100: #24006B,\r\n  ),\r\n  new-teal: (\r\n    10: #F3FEFD,\r\n    20:#EFFEFD,\r\n    30:#E0FCFD,\r\n    40:#CFF5F9,\r\n    50:#C0EAF3,\r\n    60:#AADCEC,\r\n    70:#7CB2CA,\r\n    80:#5589A9,\r\n    90:#366388,\r\n    100:#204671\r\n  )\r\n);\r\n\r\n@function getColor($colorName, $grade) {\r\n  @return map.get(map.get($colors, $colorName), $grade);\r\n}\r\n\r\n@mixin cloneColor($to, $from) {\r\n  $colors: map-merge($colors, ($to: map.get($colors, $from))) !global;\r\n}\r\n\r\n\r\n@mixin referColor($to, $from) {\r\n  $toMap: ();\r\n  @for $i from 1 through 10 {\r\n    $toMap: map-merge($toMap, (($i*10): var(--color-#{$from}-#{$i * 10}, getColor($from, $i * 10))));\r\n  }\r\n\r\n  $colors: map-merge($colors, ($to: $toMap)) !global;\r\n}\r\n\r\n\r\n/*\r\n * Theme colors\r\n */\r\n@include cloneColor(brand-primary, purple);\r\n@include cloneColor(brand-secondary, teal);\r\n\r\n/*\r\n * Application colors\r\n */\r\n@include referColor(neutral, gray);\r\n@include referColor(primary, blue);\r\n@include referColor(secondary, warmGray);\r\n\r\n\r\n/*\r\n * Alert colors\r\n */\r\n@include cloneColor(info, blue);\r\n@include cloneColor(success, green);\r\n@include cloneColor(warning, yellow);\r\n@include cloneColor(error, red);\r\n\r\n\r\n/*\r\n * Tokens for developers\r\n */\r\n$color-css-variables: ();\r\n$dark-color-css-variables: ();\r\n\r\n@each $colorName, $colorMap in $colors {\r\n  @each $weight, $value in $colorMap {\r\n    $map: ();\r\n    $map: map-merge($map, (--color-#{$colorName}-#{$weight}: $value));\r\n    @if $weight == 60 {\r\n      $map: map-merge($map, (--color-#{$colorName}: $value));\r\n    }\r\n    $color-css-variables: map-merge($color-css-variables, $map);\r\n  }\r\n}\r\n\r\n@mixin defineVariable($key, $value, $darkValue: \"\") {\r\n  $color-css-variables: map-merge($color-css-variables, ($key: $value)) !global;\r\n  @if $darkValue != \"\" {\r\n    $dark-color-css-variables: map-merge($dark-color-css-variables, ($key: $darkValue)) !global;\r\n  }\r\n}\r\n\r\n@include defineVariable(--color-white, getColor(white, 0));\r\n@include defineVariable(--color-black, getColor(black, 100));\r\n@include defineVariable(--border-color, getColor(neutral, 50));\r\n\r\n/*\r\n * Default page background;\r\n * UI Shell base color\r\n */\r\n@include defineVariable(--background, getColor(white, 0), getColor(neutral, 100));\r\n@include defineVariable(--ui-01, getColor(neutral, 20), getColor(neutral, 80));\r\n\r\n/*\r\nContainer background on $ui-01;\r\n`Light` variant background\r\n */\r\n@include defineVariable(--ui-02, getColor(white, 0), getColor(neutral, 80));\r\n\r\n/*\r\nSubtle border;\r\nTertiary background\r\n */\r\n@include defineVariable(--ui-03, getColor(neutral, 20), getColor(neutral, 60));\r\n\r\n\r\n@include defineVariable(--ui-04, getColor(neutral, 50), getColor(neutral, 10));\r\n\r\n@include defineVariable(--background-inverse, getColor(neutral, 80), getColor(neutral, 10));\r\n/**\r\nPrimary text;\r\nBody copy;\r\nHeaders;\r\nHover text color for --text-secondary\r\n */\r\n@include defineVariable(--text-primary, getColor(neutral, 100), getColor(neutral, 10));\r\n\r\n/**\r\nSecondary text;\r\nInput labels\r\n */\r\n@include defineVariable(--text-secondary, getColor(neutral, 70), getColor(neutral, 30));\r\n\r\n/**\r\nPlaceholder text\r\n */\r\n@include defineVariable(--text-placeholder, getColor(neutral, 40), getColor(neutral, 60));\r\n\r\n/**\r\nText on interactive colors\r\n */\r\n@include defineVariable(--text-04, getColor(white, 0), getColor(white, 0));\r\n\r\n\r\n/**\r\nTertiary text;\r\nHelp text\r\n */\r\n@include defineVariable(--text-05, getColor(neutral, 60), getColor(neutral, 50));\r\n\r\n/**\r\nInverse text color\r\n */\r\n@include defineVariable(--text-inverse, getColor(white, 0), getColor(neutral, 100));\r\n\r\n/*\r\nDefault input fields;\r\nFields on $backgrounds\r\n */\r\n@include defineVariable(--field-01, getColor(neutral, 10), getColor(neutral, 90));\r\n@include defineVariable(--field-02, getColor(white, 0), getColor(neutral, 80));\r\n\r\n/*\r\nSelected UI elements\r\n */\r\n@include defineVariable(--selected-ui, getColor(neutral, 20), getColor(neutral, 80));\r\n\r\n/**\r\n* Disabled fields;\r\n* Disabled backgrounds;\r\n* Disabled border\r\n*/\r\n@include defineVariable(--disabled-01, getColor(neutral, 10), getColor(neutral, 90));\r\n\r\n/**\r\n* Disabled elements on $disabled-01;\r\n* Disabled label;\r\n* Disabled text on $disabled-01;\r\n* Disabled icons;\r\n* Disabled border\r\n*/\r\n@include defineVariable(--text-disabled, getColor(neutral, 30), getColor(neutral, 70));\r\n@include defineVariable(--border-disabled, getColor(neutral, 30), getColor(neutral, 70));\r\n\r\n/**\r\n* Disabled text on $disabled-02;\r\n* Disabled icons on $disabled-02\r\n*/\r\n@include defineVariable(--disabled-03, getColor(neutral, 50), getColor(neutral, 60));\r\n\r\n/**\r\n* Primary links;\r\n* Ghost button\r\n*/\r\n@include defineVariable(--link-01, getColor(primary, 60));\r\n\r\n/**\r\nSecondary link color for lower contrast backgrounds\r\n */\r\n@include defineVariable(--link-02, getColor(primary, 60));\r\n\r\n@include defineVariable(--hover-primary, getColor(primary, 60));\r\n@include defineVariable(--hover-primary-text, getColor(primary, 70));\r\n\r\n@include defineVariable(--visited-link, getColor(purple, 60), getColor(purple, 40));\r\n\r\n/**\r\n* Secondary link color for lower contrast backgrounds\r\n*/\r\n@include defineVariable(--link-02, getColor(primary, 40));\r\n\r\n@include defineVariable(--icon-01, getColor(neutral, 100), getColor(neutral, 10));\r\n@include defineVariable(--icon-02, getColor(neutral, 70), getColor(neutral, 30));\r\n\r\n\r\n@include defineVariable(--hover-ui, getColor(neutral, 10), getColor(neutral, 90));\r\n@include defineVariable(--active-ui, getColor(neutral, 30), getColor(neutral, 30));\r\n\r\n@include defineVariable(--border-subtle-00, getColor(neutral, 30), getColor(neutral, 30));\r\n\r\n@include defineVariable(--border-strong-01, getColor(neutral, 50), getColor(neutral, 60));\r\n\r\n@include defineVariable(--danger-01, getColor(red, 60));\r\n\r\n@include defineVariable(--danger-02, getColor(red, 60), getColor(red, 50));\r\n\r\n@include defineVariable(--support-error, getColor(error, 60), getColor(error, 50));\r\n@include defineVariable(--support-success, getColor(success, 60), getColor(success, 40));\r\n@include defineVariable(--support-warning, getColor(warning, 30), getColor(warning, 30));\r\n@include defineVariable(--support-info, getColor(info, 70), getColor(info, 50));\r\n\r\n@include defineVariable(--support-error-inverse, getColor(error, 50), getColor(error, 60));\r\n@include defineVariable(--support-success-inverse, getColor(success, 40), getColor(success, 50));\r\n@include defineVariable(--support-warning-inverse, getColor(warning, 30), getColor(warning, 30));\r\n@include defineVariable(--support-info-inverse, getColor(info, 50), getColor(info, 70));\r\n\r\n\r\n@each $color in [gray, blue, green, red, yellow, primary, success, info, warning, error] {\r\n  @include defineVariable(--tag-background-#{$color}, getColor($color, 20), getColor($color, 80));\r\n  @include defineVariable(--tag-hover-#{$color}, getColor($color, 30), getColor($color, 70));\r\n  @include defineVariable(--tag-color-#{$color}, getColor($color, 80), getColor($color, 30));\r\n}\r\n","@import \"css-variables\";\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');\r\n\r\n:root {\r\n  @each $name, $value in $css-variables {\r\n    #{$name}: #{$value};\r\n  }\r\n}\r\n\r\nhtml {\r\n  color: var(--text-primary);\r\n}\r\n\r\nhtml[data-theme=\"dark\"] {\r\n  @each $name, $value in $dark-color-css-variables {\r\n    #{$name}: #{$value};\r\n  }\r\n}\r\n"]}