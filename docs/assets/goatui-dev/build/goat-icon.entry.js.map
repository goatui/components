{"file":"goat-icon.entry.esm.js","mappings":";;AAAA,MAAM,KAAK,GAA2B,EAAE,CAAC;AAEzC;AACO,eAAe,SAAS,CAAC,IAAY;EAC1C,IAAI,CAAC,IAAI;IAAE,OAAO,EAAE,CAAC;EACrB,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE;IACf,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC;GACpB;EACD,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,4DAA4D,IAAI,MAAM,EAAE;IAC9F,MAAM,EAAE,KAAK;IACb,IAAI,EAAE,MAAM;IACZ,WAAW,EAAE,MAAM;GACpB,CAAC,CAAC;EACH,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;EAC/B,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC;AACrB;;ACfA,MAAM,OAAO,GAAG,uxBAAuxB;;ICa1xB,IAAI;EALjB;;;;;;IAa2B,SAAI,GAAuC,IAAI,CAAC;IAEhE,QAAG,GAAW,EAAE,CAAC;GA0C3B;EAxCC,MAAM,QAAQ,CAAC,IAAY;IACzB,IAAI,IAAI,CAAC,IAAI;MACX,IAAI,CAAC,GAAG,GAAG,MAAM,SAAS,CAAC,IAAI,CAAC,CAAC;GACpC;EAID,MAAM,gBAAgB,CAAC,QAAgB;IACrC,IAAI,CAAC,GAAG,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,CAAC;GACtC;EAED,MAAM,iBAAiB;IACrB,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAChC;EAEO,OAAO;IACb,IAAI,IAAI,CAAC;IACT,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI;MACpB,IAAI,GAAG,SAAS,CAAC;SACd,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI;MACvC,IAAI,GAAG,QAAQ,CAAC;SACb,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI;MACzB,IAAI,GAAG,SAAS,CAAC;SACd,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI;MACzB,IAAI,GAAG,MAAM,CAAC;;MAEd,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnB,OAAO,IAAI,CAAC;GACb;EAGD,MAAM;IACJ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,iBAAiB,EAAE,SAAS,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,kBAAkB,EAAE,UAAU,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,CAAC;IAClJ,QACE,EAAC,IAAI,QACH,WAAK,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,GAAI,CAC5C,EACP;GACH;;;;;;;;;","names":[],"sources":["./src/components/content/icon/datasource.ts","./src/components/content/icon/icon.scss?tag=goat-icon&encapsulation=shadow","./src/components/content/icon/icon.tsx"],"sourcesContent":["const cache: Record<string, string> = {};\n\n// TODO: prevent duplicated request when rendering multiple icons with same name simultaneously\nexport async function fetchIcon(name: string) {\n  if (!name) return '';\n  if (cache[name]) {\n    return cache[name];\n  }\n  const res = await fetch(`https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/icons/${name}.svg`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'omit',\n  });\n  cache[name] = await res.text();\n  return cache[name];\n}\n","@import \"../../../globalStyles/commons\";\n\n:host {\n  display: inline-block;\n}\n\n.icon {\n  line-height: 0;\n  color: var(--icon-color, v(--text-primary));\n\n}\n\n:host(.inherit) .icon {\n  color: inherit;\n}\n","import { Component, h, Host, Prop, State, Watch } from '@stencil/core';\nimport { fetchIcon } from './datasource';\n\n/**\n * @name Icon\n * @description Renders a specified icon.\n * @example <goat-icon name=\"house\"></goat-icon>\n */\n@Component({\n  tag: 'goat-icon',\n  styleUrl: 'icon.scss',\n  shadow: true,\n})\nexport class Icon {\n\n  @Prop({ reflect: true }) name: string;\n\n  /**\n   * The Icon size.\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`, `\"xl\"` and size in pixel. Defaults to `\"md\"`.\n   */\n  @Prop({ reflect: true }) size: 'sm' | 'md' | 'lg' | 'xl' | string = 'md';\n\n  @State() svg: string = '';\n\n  async fetchSvg(name: string) {\n    if (this.name)\n      this.svg = await fetchIcon(name);\n  }\n\n\n  @Watch('name')\n  async handleNameChange(newValue: string) {\n    this.svg = await fetchIcon(newValue);\n  }\n\n  async componentWillLoad() {\n    await this.fetchSvg(this.name);\n  }\n\n  private getSize() {\n    let size;\n    if (this.size === 'sm')\n      size = '1.25rem';\n    else if (!this.size || this.size === 'md')\n      size = '1.5rem';\n    else if (this.size === 'lg')\n      size = '1.75rem';\n    else if (this.size === 'xl')\n      size = '2rem';\n    else\n      size = this.size;\n    return size;\n  }\n\n\n  render() {\n    const icon = this.svg.replace(/width=\"([^\"]+)\"/, 'width=\"' + this.getSize() + '\"').replace(/height=\"([^\"]+)\"/, 'height=\"' + this.getSize() + '\"');\n    return (\n      <Host>\n        <div innerHTML={icon} class={{ 'icon': true }} />\n      </Host>\n    );\n  }\n\n}\n"],"version":3}