{"version":3,"sources":["src/components/content/divider/divider.scss?tag=goat-divider&encapsulation=shadow","src/components/content/divider/divider.tsx"],"names":["dividerCss","Divider","[object Object]","hostRef","this","vertical","slotHasContent","elm","hasChildNodes","h","Host","class","divider","has-content"],"mappings":"oDAAA,MAAMA,EAAa,q6CCYNC,EAAO,MALpBC,YAAAC,aAQyBC,KAAAC,SAAoB,MAElCD,KAAAE,eAAiB,MAG1BJ,oBACEE,KAAKE,eAAiBF,KAAKG,IAAIC,gBAGjCN,SACE,OACEO,EAACC,EAAI,KACHD,EAAA,MAAA,CAAKE,MAAO,CACVC,QAAW,KACXP,SAAYD,KAAKC,SACjBQ,cAAeT,KAAKE,iBAEpBG,EAAA,MAAA,CAAKE,MAAM,SACXF,EAAA,MAAA,CAAKE,MAAM,kBACTF,EAAA,OAAA,OAEFA,EAAA,MAAA,CAAKE,MAAM","sourcesContent":["@import \"../../../globalStyles/commons\";\r\n\r\n:host {\r\n  color: v(--text-secondary);\r\n  display: block;\r\n}\r\n\r\n.divider {\r\n  display: flex;\r\n  margin: 0;\r\n\r\n  &:not(.vertical) {\r\n    width: 100%;\r\n    padding: v(--spacing-2) 0;\r\n    align-items: center;\r\n    justify-content: center;\r\n    .line {\r\n      width: 100%;\r\n      border-top: 1px solid v(--border-color);\r\n    }\r\n\r\n    &.has-content .slot-container {\r\n      padding: 0 v(--spacing-3);\r\n    }\r\n  }\r\n\r\n  &.vertical {\r\n    height: 100%;\r\n    padding: 0 v(--spacing-2);\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    .line {\r\n      height: 100%;\r\n      border-right: 1px solid v(--border-color);\r\n    }\r\n\r\n    &.has-content .slot-container {\r\n      padding: v(--spacing-3) 0;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n:host(:not([vertical])) {\r\n  width: 100%;\r\n}\r\n\r\n:host([vertical]) {\r\n  height: 100%;\r\n}\r\n","import { Component, ComponentInterface, Element, h, Host, Prop, State } from '@stencil/core';\r\n\r\n/**\r\n * @name Divider\r\n * @description A divider can be used to segment content vertically or horizontally.\r\n * @example <goat-divider style=\"width: 12rem;\">or</goat-divider>\r\n */\r\n@Component({\r\n  tag: 'goat-divider',\r\n  styleUrl: 'divider.scss',\r\n  shadow: true,\r\n})\r\nexport class Divider implements ComponentInterface {\r\n\r\n\r\n  @Prop({reflect: true}) vertical: boolean = false;\r\n\r\n  @State() slotHasContent = false;\r\n  @Element() elm!: HTMLElement;\r\n\r\n  componentWillLoad() {\r\n    this.slotHasContent = this.elm.hasChildNodes();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={{\r\n          'divider': true,\r\n          'vertical': this.vertical,\r\n          'has-content': this.slotHasContent,\r\n        }}>\r\n          <div class=\"line\"/>\r\n          <div class='slot-container'>\r\n            <slot />\r\n          </div>\r\n          <div class=\"line\" />\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n"]}