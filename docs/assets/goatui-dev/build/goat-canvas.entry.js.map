{"file":"goat-canvas.entry.esm.js","mappings":"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","names":[],"sources":["./src/components/flow-designer/goat-canvas/canvas.scss?tag=goat-canvas&encapsulation=shadow","./src/components/flow-designer/goat-canvas/canvas.tsx"],"sourcesContent":["@import \"../../../globalStyles/commons\";\n\n:host {\n  display: block;\n}\n\n.canvas-wrapper {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='8d8d8d' class='bi bi-dot' viewBox='0 0 16 16'%3E%3Cpath d='M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z'/%3E%3C/svg%3E\");\n  width: max-content;\n}\n\n.line {\n  stroke: v(--border-color);\n\n  &.clickable {\n    cursor: pointer;\n    &:hover {\n      stroke: v(--color-primary);\n    }\n    z-index: 1;\n  }\n}\n","import { Component, Element, h, Host, Prop, State } from '@stencil/core';\n\n@Component({\n  tag: 'goat-canvas',\n  styleUrl: 'canvas.scss',\n  shadow: true,\n})\nexport class Canvas {\n\n  @Prop() unitSize: number = 16;\n  @Prop() lines: any[] = [];\n  @Prop() padding: number = 2;\n\n  @Prop() viewbox?: string;\n\n  private drawingArea = {\n    minX: 0,\n    minY: 0,\n    maxX: 0,\n    maxY: 0,\n  };\n\n  @State() computedViewbox = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  };\n\n  @State() paths: string[] = [];\n\n  @Element() elm!: HTMLElement;\n\n\n  componentDidLoad() {\n    setTimeout(() => {\n      this.renderCanvas();\n    });\n  }\n\n  renderCanvas() {\n\n    for (const line of this.lines) {\n      this.drawLine(line);\n    }\n\n    this.computedViewbox = this.calculateViewbox();\n    this.paths = [...this.paths];\n  }\n\n  calculateViewbox() {\n    let result;\n    if (this.viewbox) {\n      const viewbox = this.viewbox.split(' ');\n      result = {\n        x: parseInt(viewbox[0], 10),\n        y: parseInt(viewbox[1], 10),\n        width: parseInt(viewbox[2], 10),\n        height: parseInt(viewbox[3], 10),\n      };\n    } else {\n      result = {\n        x: this.drawingArea.minX,\n        y: this.drawingArea.minY,\n        width: (this.drawingArea.maxX - this.drawingArea.minX),\n        height: (this.drawingArea.maxY - this.drawingArea.minY),\n      };\n    }\n\n    if (this.padding) {\n      result.x -= this.padding;\n      result.y -= this.padding;\n      result.width += 2 * this.padding;\n      result.height += 2 * this.padding;\n    }\n    return result;\n  }\n\n\n  drawLine(line) {\n\n    const startConnector = {\n      x: line.start.x,\n      y: line.start.y,\n    };\n    if (line.start.gap) {\n      if (line.start.direction == 'down') {\n        startConnector.y += line.start.gap;\n      } else if (line.start.direction == 'up') {\n        startConnector.y -= line.start.gap;\n      } else if (line.start.direction == 'right') {\n        startConnector.x += line.start.gap;\n      } else if (line.start.direction == 'left') {\n        startConnector.x -= line.start.gap;\n      }\n    }\n\n    const endConnector = {\n      x: line.end.x,\n      y: line.end.y,\n    };\n\n    if (line.end.gap) {\n      if (line.end.direction == 'down') {\n        endConnector.y += line.end.gap;\n      } else if (line.end.direction == 'top') {\n        endConnector.y -= line.end.gap;\n      } else if (line.end.direction == 'right') {\n        endConnector.x += line.end.gap;\n      } else if (line.end.direction == 'left') {\n        endConnector.x -= line.end.gap;\n      }\n    }\n\n    let pathString = this.#createStartString(line.start);\n\n    /**\n     * Straight line between two connectors\n     */\n    if (!line.type || line.type == 'straight_line') {\n      pathString += this.createStraightLinePath(line, startConnector, endConnector);\n    }\n\n    if (line.type == 'shape_connector') {\n      pathString += this.createShapeConnectorPath(line, startConnector, endConnector);\n    }\n\n\n    this.updateDrawingArea(line.start);\n    this.updateDrawingArea(line.end);\n\n    this.paths.push(pathString);\n\n  }\n\n  createStraightLinePath(line, startConnector, endConnector) {\n    let pathString = [];\n    pathString.push(this.#createLineString(startConnector));\n    pathString.push(this.#createLineString(endConnector));\n    pathString.push(this.#createLineString(line.end));\n    return ` ${pathString.join(' ')}`;\n  }\n\n  createShapeConnectorPath(line, startConnector, endConnector) {\n\n    let pathString = [];\n    let curveSize = 2;\n\n    if (line.start.direction == 'down') {\n      if (line.end.direction == 'top') {\n        if (startConnector.x === endConnector.x) {\n          pathString.push(this.#createLineString(line.end));\n        } else if (startConnector.x < endConnector.x) {\n          pathString.push(this.#createLineString({ x: startConnector.x, y: startConnector.y - curveSize }));\n          pathString.push(this.#createQuadraticCurveString({ x: startConnector.x, y: startConnector.y },\n            { x: startConnector.x + curveSize, y: startConnector.y }));\n\n          pathString.push(this.#createLineString({ x: endConnector.x - curveSize, y: startConnector.y }));\n          pathString.push(this.#createQuadraticCurveString({ x: endConnector.x, y: startConnector.y },\n            { x: endConnector.x, y: startConnector.y + curveSize }));\n          pathString.push(this.#createLineString(line.end));\n        } else {\n          pathString.push(this.#createLineString({ x: startConnector.x, y: startConnector.y - curveSize }));\n          pathString.push(this.#createQuadraticCurveString({ x: startConnector.x, y: startConnector.y },\n            { x: startConnector.x - curveSize, y: startConnector.y }));\n\n          pathString.push(this.#createLineString({ x: endConnector.x + curveSize, y: startConnector.y }));\n          pathString.push(this.#createQuadraticCurveString({ x: endConnector.x, y: startConnector.y },\n            { x: endConnector.x, y: startConnector.y + curveSize }));\n          pathString.push(this.#createLineString(line.end));\n        }\n      }\n    }\n\n\n    /*if (startConnector.x === endConnector.x) {\n      pathString.push(this.#createLineString(endConnector));\n    } else {\n      if (line.start.direction === 'down' && line.end.direction === 'left') {\n        if (startConnector.y < endConnector.y) {\n          pathString += ` ${this.#createLineString({ x: startConnector.x, y: endConnector.y })}`;\n        } else {\n          pathString += ` ${this.#createLineString({ x: endConnector.x, y: startConnector.y })}`;\n        }\n      }\n      pathString += ` ${this.#createLineString(endConnector)}`;\n    }*/\n    return ` ${pathString.join(' ')}`;\n  }\n\n\n  updateDrawingArea(position) {\n    if (position.x > this.drawingArea.maxX) {\n      this.drawingArea.maxX = position.x;\n    }\n    if (position.y > this.drawingArea.maxY) {\n      this.drawingArea.maxY = position.y;\n    }\n    if (position.x < this.drawingArea.minX) {\n      this.drawingArea.minX = position.x;\n    }\n    if (position.y < this.drawingArea.minY) {\n      this.drawingArea.minY = position.y;\n    }\n  }\n\n  render() {\n    return <Host>\n      <div class='canvas-wrapper' style={{\n        'background-size': `${this.unitSize}px ${this.unitSize}px`,\n        'background-position': `${this.unitSize / 2}px ${this.unitSize / 2}px`,\n      }}>\n\n        <svg class='canvas'\n             viewBox={`${this.computedViewbox.x * this.unitSize} ${this.computedViewbox.x * this.unitSize} ${this.computedViewbox.width * this.unitSize} ${this.computedViewbox.height * this.unitSize}`}>\n          {\n            (this.paths.map((path) => {\n              return <path class='line clickable'\n                           stroke-width='4'\n                           stroke-linecap='round'\n                           stroke-linejoin='round'\n                           stroke='#000'\n                           d={`${path}`}\n                           fill='none' />;\n            }))\n          }\n        </svg>\n      </div>\n    </Host>;\n  }\n\n  #createStartString: any = (point) => {\n    this.updateDrawingArea(point);\n    return `M${point.x * this.unitSize} ${point.y * this.unitSize}`;\n  };\n\n  #createQuadraticCurveString: any = (pointA, pointB) => {\n    this.updateDrawingArea(pointA);\n    this.updateDrawingArea(pointA);\n    return `Q ${pointA.x * this.unitSize} ${pointA.y * this.unitSize} ${pointB.x * this.unitSize} ${pointB.y * this.unitSize}`;\n  };\n\n  #createLineString: any = (point) => {\n    this.updateDrawingArea(point);\n    return `L${point.x * this.unitSize} ${point.y * this.unitSize}`;\n  };\n\n}\n"],"version":3}