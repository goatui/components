{"version":3,"sources":["src/components/navigation/tabs/tab/tab.scss?tag=goat-tab&encapsulation=shadow","src/components/navigation/tabs/tab/tab.tsx"],"names":["tabCss","Tab","[object Object]","hostRef","this","gid","getComponentIndex","size","selected","disabled","disabledReason","showLoader","hasFocus","isActive","slotHasContent","clickHandler","goatTabClick","emit","value","target","blurHandler","focusHandler","mouseDownHandler","keyDownHandler","evt","key","renderIcon","h","name","icon","getIconSize","class","nativeInput","focus","click","ElementSize","SMALL","LARGE","X_LARGE","XX_LARGE","elm","hasAttribute","tabindex","getAttribute","undefined","removeAttribute","hasChildNodes","id","role","Host","has-focus","active","tab","has-content","show-loader","ref","input","onBlur","onFocus","onClick","onMouseDown","onKeyDown","aria-describedby","aria-disabled","renderDisabledReason"],"mappings":"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","sourcesContent":["@import \"../../../../globalStyles/commons\";\r\n\r\n$border-width: 0.125;\r\n$tab-color: var(--tab-color, v(--color-primary));\r\n\r\n@function removeBorder($width) {\r\n  @return #{($width*1 - ($border-width * 2))}rem;\r\n}\r\n\r\n:host {\r\n  display: inline-block;\r\n}\r\n\r\n.tab {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  height: var(--button-height, auto);\r\n\r\n  .native-button {\r\n    height: 100%;\r\n    cursor: pointer;\r\n    z-index: v(--z-index-button);\r\n    background: transparent;\r\n    padding: 0;\r\n    border: none;\r\n    border-bottom: 2px solid transparent;\r\n    outline: none;\r\n\r\n    .slot-container {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .tab-content {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: row;\r\n    height: 100%;\r\n    gap: v(--spacing-2);\r\n    border: 2px solid transparent;\r\n    border-bottom: 0;\r\n  }\r\n\r\n  .tab-background {\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    pointer-events: none;\r\n  }\r\n\r\n  &.disabled .native-button {\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  &.has-content .slot-container {\r\n    display: flex;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n  * SIZES\r\n  */\r\n.tab.size-sm, .tab.size-small {\r\n  .tab-content {\r\n    padding: removeBorder(0.5) removeBorder(0.875);\r\n    @include font-style(text-sm);\r\n    font-weight: var(--button-font-weight, v(--font-weight-medium));\r\n  }\r\n}\r\n\r\n\r\n.tab.size-md, .tab.size-medium {\r\n  .tab-content {\r\n    padding: removeBorder(0.625) removeBorder(1.125);\r\n    @include font-style(text-sm);\r\n    font-weight: var(--button-font-weight, v(--font-weight-medium));\r\n  }\r\n}\r\n\r\n.tab.size-lg, .tab.size-large {\r\n  .tab-content {\r\n    padding: removeBorder(0.625);\r\n    @include font-style(text-md);\r\n    font-weight: var(--button-font-weight, v(--font-weight-medium));\r\n  }\r\n}\r\n\r\n.tab.size-xl {\r\n  .tab-content {\r\n    padding: removeBorder(0.75);\r\n    @include font-style(text-md);\r\n    font-weight: var(--button-font-weight, v(--font-weight-medium));\r\n  }\r\n}\r\n\r\n\r\n.tab.size-xxl {\r\n  .tab-content {\r\n    padding: removeBorder(1);\r\n    @include font-style(text-lg);\r\n    font-weight: var(--button-font-weight, v(--font-weight-medium));\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Tab variant definitions\r\n */\r\n.tab {\r\n\r\n  .native-button {\r\n    color: v(--text-secondary);\r\n    border-bottom-color: v(--border-subtle-00);\r\n  }\r\n\r\n  .tab-background {\r\n    background: transparent;\r\n  }\r\n\r\n  &:hover {\r\n    .native-button {\r\n      color: v(--text-primary);\r\n      border-bottom-color: v(--border-strong-01);\r\n    }\r\n  }\r\n\r\n  &.selected {\r\n    .native-button {\r\n      color: v(--text-primary);\r\n      border-bottom-color: #{$tab-color};\r\n    }\r\n\r\n    .tab-content {\r\n      font-weight: v(--font-weight-bold);\r\n    }\r\n  }\r\n\r\n\r\n  &.has-focus:not(.active) {\r\n    .native-button {\r\n      border-bottom-color: v(--color-primary);\r\n    }\r\n\r\n    .tab-content {\r\n      border-color: v(--color-primary);\r\n    }\r\n  }\r\n\r\n  &.disabled {\r\n    .native-button {\r\n      color: v(--text-disabled);\r\n      border-bottom-color: v(--border-disabled) !important;\r\n    }\r\n\r\n    &.has-focus:not(.active) .tab-content {\r\n      border-color: transparent !important;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n  * Color Variants\r\n  */\r\n@each $color in [brand-primary, brand-secondary, primary, success, error, info, warning, secondary] {\r\n  :host(.color-#{$color}) .tab {\r\n    --tab-color: #{v(--color-#{$color})};\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ComponentInterface,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n  h,\r\n  Host,\r\n  Listen, Method,\r\n  Prop,\r\n  State,\r\n} from '@stencil/core';\r\nimport { ElementSize, getComponentIndex } from '../../../../utils/utils';\r\n\r\n\r\n@Component({\r\n  tag: 'goat-tab',\r\n  styleUrl: 'tab.scss',\r\n  shadow: true,\r\n})\r\nexport class Tab implements ComponentInterface {\r\n\r\n  gid: string = getComponentIndex();\r\n\r\n  /**\r\n   * Button size.\r\n   * Possible values are `\"sm\"`, `\"md\"`, `\"lg\"`, `\"xl\"`, `\"xxl\"`. Defaults to `\"md\"`.\r\n   */\r\n  @Prop() size: 'sm' | 'md' | 'lg' | 'xl' | 'xxl' = 'md';\r\n\r\n\r\n  /**\r\n   * Button selection state.\r\n   */\r\n  @Prop({ reflect: true }) selected: boolean = false;\r\n\r\n  /**\r\n   * If true, the user cannot interact with the button. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n\r\n  @Prop() disabledReason: string = '';\r\n  /**\r\n   * Icon which will displayed on button.\r\n   * Possible values are bootstrap icon names.\r\n   */\r\n  @Prop() icon: string;\r\n\r\n\r\n  @Prop() label: string;\r\n  @Prop() value: string;\r\n  @Prop() target: string;\r\n\r\n  /**\r\n   * Show loader.\r\n   */\r\n  @Prop() showLoader: boolean = false;\r\n\r\n  /**\r\n   * On click of tab, a CustomEvent 'goat:tab-click' will be triggered.\r\n   */\r\n  @Event({ eventName: 'goat:tab-click' }) goatTabClick: EventEmitter;\r\n\r\n\r\n  @State() hasFocus = false;\r\n  @State() isActive = false;\r\n  @State() slotHasContent = false;\r\n  @Element() elm!: HTMLElement;\r\n  private tabindex?: string | number;\r\n  private nativeInput?: HTMLButtonElement;\r\n\r\n\r\n  @Listen('mouseup', { target: 'window' })\r\n  windowMouseUp() {\r\n    if (this.isActive)\r\n      this.isActive = false;\r\n  }\r\n\r\n  @Listen('keyup', { target: 'window' })\r\n  windowKeyUp(evt) {\r\n    if (this.isActive && (evt.key == ' '))\r\n      this.isActive = false;\r\n  }\r\n\r\n  @Method()\r\n  async setFocus() {\r\n    if (this.nativeInput) {\r\n      this.nativeInput.focus();\r\n    }\r\n  }\r\n\r\n  @Method()\r\n  async triggerClick() {\r\n    if (this.nativeInput) {\r\n      this.nativeInput.click();\r\n    }\r\n  }\r\n\r\n\r\n  private getIconSize() {\r\n    switch (this.size) {\r\n      case ElementSize.SMALL:\r\n        return 'sm';\r\n      case ElementSize.LARGE:\r\n        return 'md';\r\n      case ElementSize.X_LARGE:\r\n        return 'md';\r\n      case ElementSize.XX_LARGE:\r\n        return 'lg';\r\n      default:\r\n        return 'sm';\r\n    }\r\n  }\r\n\r\n\r\n  private clickHandler = () => {\r\n    this.goatTabClick.emit({\r\n      value: this.value,\r\n      target: this.target,\r\n    });\r\n  };\r\n  private blurHandler = () => {\r\n    this.hasFocus = false;\r\n  };\r\n\r\n  private focusHandler = () => {\r\n    this.hasFocus = true;\r\n  };\r\n\r\n  private mouseDownHandler = () => {\r\n    this.isActive = true;\r\n  };\r\n\r\n  private keyDownHandler = (evt) => {\r\n    if (evt.key == ' ') {\r\n      this.isActive = true;\r\n      this.clickHandler();\r\n    }\r\n  };\r\n\r\n  componentWillLoad() {\r\n    // If the ion-input has a tabindex attribute we get the value\r\n    // and pass it down to the native input, then remove it from the\r\n    // goat-input to avoid causing tabbing twice on the same element\r\n    if (this.elm.hasAttribute('tabindex')) {\r\n      const tabindex = this.elm.getAttribute('tabindex');\r\n      this.tabindex = tabindex !== null ? tabindex : undefined;\r\n      this.elm.removeAttribute('tabindex');\r\n    }\r\n    this.slotHasContent = this.elm.hasChildNodes();\r\n  }\r\n\r\n  private renderDisabledReason() {\r\n    if (this.disabled && this.disabledReason)\r\n      return <div id={`disabled-reason-${this.gid}`} role='tooltip' class='sr-only'>\r\n        {this.disabledReason}\r\n      </div>;\r\n  }\r\n\r\n  render() {\r\n\r\n    return (<Host has-focus={this.hasFocus} active={this.isActive}>\r\n      <div class={{\r\n        tab: true,\r\n        [`size-${this.size}`]: true,\r\n        'disabled': this.disabled,\r\n        'selected': this.selected,\r\n        'has-focus': this.hasFocus,\r\n        'active': this.isActive,\r\n        'has-content': this.slotHasContent,\r\n        'show-loader': this.showLoader,\r\n      }}>\r\n        <div class='tab-background' />\r\n        <button\r\n          class='native-button'\r\n          tabindex={this.tabindex}\r\n          ref={input => this.nativeInput = input}\r\n          onBlur={this.blurHandler}\r\n          onFocus={this.focusHandler}\r\n          onClick={this.clickHandler}\r\n          onMouseDown={this.mouseDownHandler}\r\n          onKeyDown={this.keyDownHandler}\r\n          disabled={this.disabled}\r\n          aria-describedby={this.disabled && this.disabledReason ? `disabled-reason-${this.gid}` : null}\r\n          aria-disabled={(this.disabled || this.showLoader) + ''}>\r\n\r\n          <div class='tab-content'>\r\n            {this.showLoader && <goat-spinner class='spinner inherit' size={this.getIconSize()} />}\r\n\r\n            {!this.showLoader && this.icon && this.renderIcon()}\r\n\r\n            {!this.showLoader && <div class='slot-container'>\r\n              <slot />\r\n            </div>}\r\n          </div>\r\n\r\n        </button>\r\n        {this.renderDisabledReason()}\r\n      </div>\r\n    </Host>);\r\n  }\r\n\r\n  private renderIcon = () => {\r\n    return <goat-icon name={this.icon} size={this.getIconSize()} class='icon inherit' />;\r\n  };\r\n\r\n}\r\n"]}