{"file":"goat-link.entry.esm.js","mappings":";;;AAAA,MAAM,OAAO,GAAG,0gDAA0gD;;ICa7gD,IAAI;EALjB;;IAOE,QAAG,GAAW,iBAAiB,EAAE,CAAC;IAazB,aAAQ,GAAG,KAAK,CAAC;IACjB,aAAQ,GAAG,KAAK,CAAC;IAGlB,aAAQ,GAAqB,CAAC,CAAC;IAsB/B,gBAAW,GAAG;MACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB,CAAC;IAEM,iBAAY,GAAG;MACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACtB,CAAC;IAEM,qBAAgB,GAAG;MACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACtB,CAAC;IAEM,mBAAc,GAAG,CAAC,GAAG;MAC3B,IAAI,GAAG,CAAC,GAAG,IAAI,OAAO,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,EAAE;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;OACtB;KACF,CAAC;GAqCH;EAvEC,aAAa;IACX,IAAI,IAAI,CAAC,QAAQ;MACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;GACzB;EAGD,WAAW,CAAC,GAAG;IACb,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,CAAC,GAAG,IAAI,OAAO,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC;MACzD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;GACzB;EAGD,MAAM,YAAY;IAChB,IAAI,IAAI,CAAC,WAAW,EAAE;MACpB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;KAC1B;GACF;EAoBD,iBAAiB;;;;IAIf,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE;MACrC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;MACnD,IAAI,CAAC,QAAQ,GAAG,QAAQ,KAAK,IAAI,GAAG,QAAQ,GAAG,SAAS,CAAC;MACzD,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;KACtC;GACF;EAGD,MAAM;IAEJ,QAAQ,EAAC,IAAI,iBAAY,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,IAC3D,SAAG,KAAK,EAAE;QACR,MAAM,EAAE,IAAI;QACZ,WAAW,EAAE,IAAI,CAAC,QAAQ;QAC1B,QAAQ,EAAE,IAAI,CAAC,QAAQ;OACxB,EACE,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,GAAG,EAAE,KAAK,IAAI,IAAI,CAAC,WAAW,GAAG,KAAK,EACtC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,MAAM,EAAE,IAAI,CAAC,WAAW,EACxB,OAAO,EAAE,IAAI,CAAC,YAAY,EAC1B,WAAW,EAAE,IAAI,CAAC,gBAAgB,EAClC,SAAS,EAAE,IAAI,CAAC,cAAc,IAE/B,eAAQ,CAEN,CACC,EAAE;GACV;;;;;;;","names":[],"sources":["./src/components/navigation/link/link.scss?tag=goat-link&encapsulation=shadow","./src/components/navigation/link/link.tsx"],"sourcesContent":["@import \"../../../globalStyles/commons\";\n\n\n:host {\n  display: inline-block;\n}\n\n.link {\n\n  border-radius: v(--border-radius);\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  cursor: pointer;\n  text-decoration: var(--link-decoration, none);\n\n  color: var(--link-color, v(--link-01));\n\n  &:hover {\n    color: var(--link-color-hover, v(--hover-primary-text));\n    text-decoration: var(--link-decoration-hover, underline);\n  }\n\n  &:visited {\n    color: var(--link-color-visited, v(--visited-link));\n  }\n\n  &.active {\n    color: var(--link-color-active, v(--text-primary));\n  }\n\n\n}\n\n:host(.no-style) .link {\n  color: inherit !important;\n  text-decoration: none !important;\n}\n\n:host(.no-decoration) .link {\n  text-decoration: none !important;\n}\n\n:host(.inline) .link {\n  text-decoration: var(--link-decoration, underline);\n}\n\n.link.has-focus:not(.active) {\n  text-decoration: none;\n  @include focus-ring();\n}\n","import { Component, ComponentInterface, Element, h, Host, Listen, Method, Prop, State } from '@stencil/core';\nimport { getComponentIndex } from '../../../utils/utils';\n\n/**\n * @name Link\n * @description Links allow users to click their way from page to page.\n * @example <goat-link>Link</goat-link>\n */\n@Component({\n  tag: 'goat-link',\n  styleUrl: 'link.scss',\n  shadow: true,\n})\nexport class Link implements ComponentInterface {\n\n  gid: string = getComponentIndex();\n\n  /**\n   * Hyperlink to navigate to on click.\n   */\n  @Prop() href: string;\n\n  /**\n   * Sets or retrieves the window or frame at which to target content.\n   */\n  @Prop() target: string;\n\n\n  @State() hasFocus = false;\n  @State() isActive = false;\n\n  @Element() elm!: HTMLElement;\n  private tabindex?: string | number = 1;\n  private nativeInput?: HTMLAnchorElement;\n\n  @Listen('mouseup', { target: 'window' })\n  windowMouseUp() {\n    if (this.isActive)\n      this.isActive = false;\n  }\n\n  @Listen('keyup', { target: 'window' })\n  windowKeyUp(evt) {\n    if (this.isActive && (evt.key == 'Enter' || evt.key == ' '))\n      this.isActive = false;\n  }\n\n  @Method()\n  async triggerClick() {\n    if (this.nativeInput) {\n      this.nativeInput.click();\n    }\n  }\n\n  private blurHandler = () => {\n    this.hasFocus = false;\n  };\n\n  private focusHandler = () => {\n    this.hasFocus = true;\n  };\n\n  private mouseDownHandler = () => {\n    this.isActive = true;\n  };\n\n  private keyDownHandler = (evt) => {\n    if (evt.key == 'Enter' || evt.key == ' ') {\n      this.isActive = true;\n    }\n  };\n\n  componentWillLoad() {\n    // If the ion-input has a tabindex attribute we get the value\n    // and pass it down to the native input, then remove it from the\n    // goat-input to avoid causing tabbing twice on the same element\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex !== null ? tabindex : undefined;\n      this.elm.removeAttribute('tabindex');\n    }\n  }\n\n\n  render() {\n\n    return (<Host has-focus={this.hasFocus} active={this.isActive}>\n      <a class={{\n        'link': true,\n        'has-focus': this.hasFocus,\n        'active': this.isActive,\n      }}\n         href={this.href}\n         target={this.target}\n         ref={input => this.nativeInput = input}\n         tabindex={this.tabindex}\n         onBlur={this.blurHandler}\n         onFocus={this.focusHandler}\n         onMouseDown={this.mouseDownHandler}\n         onKeyDown={this.keyDownHandler}>\n\n        <slot />\n\n      </a>\n    </Host>);\n  }\n\n}\n"],"version":3}