{"version":3,"sources":["src/3d-party/dompurify/index.tsx","src/components/content/empty-state/empty-state.scss?tag=goat-empty-state&encapsulation=shadow","src/components/content/empty-state/empty-state.tsx","src/components/content/svg/datasource.ts","src/components/content/svg/svg.scss?tag=goat-svg&encapsulation=shadow","src/components/content/svg/svg.tsx"],"names":["async","loadDOMPurify","version","loadScript","emptyStateCss","EmptyState","[object Object]","hostRef","this","illustration","actionVariant","actionDisabled","vertical","elm","clientWidth","window","resizeHandler","h","Host","class","empty-state","src","getAssetPath","headline","description","innerHTML","sanitize","action","href","actionUrl","icon","iconEnd","disabled","variant","cache","fetchIcon","url","res","fetch","method","mode","credentials","text","svgCss","Svg","svg","name","newValue","fetchSvg"],"mappings":"oGAEeA,eAAeC,IAC5B,MAAMC,EAAU,cAEVC,EAAW,oDAAoDD,mBCLvE,MAAME,EAAgB,q8ECeTC,EAAU,MALvBC,YAAAC,aAS2BC,KAAAC,aAA8B,cAU/CD,KAAAE,cAAoE,UAEpEF,KAAAG,eAA0B,MAEzBH,KAAAI,SAAoB,MAG7BN,gBACEE,KAAKI,SAAWJ,KAAKK,IAAIC,YAAc,IAGzCR,0BACE,IAAKS,OAAO,aAAc,OAClBd,KAIVK,mBACEE,KAAKQ,gBAGPV,SACE,OACEW,EAACC,EAAI,KACHD,EAAA,MAAA,CAAKE,MAAO,CAAEC,cAAe,KAAMR,SAAYJ,KAAKI,WAClDK,EAAA,MAAA,CAAKE,MAAM,gBACTF,EAAA,WAAA,CAAUI,IAAKC,EAAa,+BAA+Bd,KAAKC,uBAGlEQ,EAAA,MAAA,CAAKE,MAAM,WACRX,KAAKe,UAAYN,EAAA,MAAA,CAAKE,MAAM,SAASX,KAAKe,UAC1Cf,KAAKgB,aAAeP,EAAA,MAAA,CAAKE,MAAM,cAAcM,UAAWV,OAAO,aAAaW,SAASlB,KAAKgB,eAC3FP,EAAA,MAAA,CAAKE,MAAM,WACRX,KAAKmB,QACJV,EAAA,cAAA,CACEW,KAAMpB,KAAKqB,UACXC,KAAM,cACNC,QAAS,KACTC,SAAUxB,KAAKG,eACfsB,QAASzB,KAAKE,eACbF,KAAKmB,iDCrExB,MAAMO,EAAgC,GAG/BlC,eAAemC,EAAUC,GAC9B,IAAKA,EAAK,MAAO,GACjB,GAAIF,EAAME,GAAM,CACd,OAAOF,EAAME,GAEf,MAAMC,QAAYC,MAAMF,EAAK,CAC3BG,OAAQ,MACRC,KAAM,OACNC,YAAa,SAEfP,EAAME,SAAaC,EAAIK,OACvB,OAAOR,EAAME,GCdf,MAAMO,EAAS,iwBCQFC,EAAG,MALhBtC,YAAAC,aAOUC,KAAAa,IAAc,GAEbb,KAAAqC,IAAc,GAEvBvC,eAAewC,GACb,GAAItC,KAAKa,IACPb,KAAKqC,UAAYV,EAAUW,GAK/BxC,uBAAuByC,GACrBvC,KAAKqC,UAAYV,EAAUY,GAG7BzC,gCACQE,KAAKwC,SAASxC,KAAKa,KAI3Bf,SACE,OACEW,EAACC,EAAI,KACHD,EAAA,MAAA,CAAKQ,UAAWjB,KAAKqC,IAAK1B,MAAO,CAAEW,KAAQ","sourcesContent":["import { loadScript } from '../../utils/utils';\n\nexport default async function loadDOMPurify() {\n  const version = '2.3.6';\n  // @ts-ignore\n  await loadScript(`https://cdnjs.cloudflare.com/ajax/libs/dompurify/${version}/purify.min.js`);\n}\n","@import \"../../../globalStyles/commons\";\n\n:host {\n  display: block;\n}\n\n.empty-state {\n  display: flex;\n  padding: v(--spacing-3);\n  justify-content: center;\n  gap: v(--spacing-8);\n  height: 100%;\n  align-items: center;\n  max-width: v(--container-lg);\n  margin: auto;\n}\n\n.illustration {\n  height: 100%;\n  display: flex;\n\n  svg {\n    height: 100%;\n  }\n\n  --empty-state-outline: #{v(--color-brand-primary)};\n  --empty-state-bg-primary: #{v(--color-brand-secondary)};\n  --empty-state-bg-secondary: #{v(--color-brand-secondary-40)};\n  --empty-state-bg-tertiary: #{v(--color-brand-secondary-30)};\n\n  --empty-state-text: #{v(--text-primary)};\n  --empty-state-bg-surface: #{v(--background)};\n\n  --empty-state-green: #{v(--color-success-50)};\n}\n\n:host-context([data-theme=\"dark\"]) {\n  .illustration {\n    --empty-state-bg-secondary: #{v(--color-brand-secondary-80)};\n    --empty-state-bg-tertiary: #{v(--color-brand-secondary-100)};\n  }\n}\n\n\n.content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  .title {\n    @include font-style(text-md);\n    font-weight: v(--font-weight-semi-bold);\n    margin-bottom: v(--spacing-2);\n    color: var(--text-color, v(--text-primary))\n  }\n\n  .description {\n    @include font-style(text-sm);\n    margin-bottom: v(--spacing-4);\n    color: var(--text-color, v(--text-secondary))\n  }\n}\n\n:host(.content-center) .content {\n  align-items: center;\n}\n\n.empty-state:not(.vertical) {\n\n  .illustration {\n    width: 50%;\n  }\n\n  .content {\n    width: 50%;\n  }\n}\n\n\n.empty-state.vertical {\n  flex-direction: column;\n  gap: v(--spacing-5);\n\n  .illustration {\n    height: auto;\n    width: 100%;\n    justify-content: center;\n  }\n}\n\n","import { Component, ComponentInterface, Element, getAssetPath, h, Host, Listen, Prop, State } from '@stencil/core';\nimport loadDOMPurify from '../../../3d-party/dompurify';\n\n\n/**\n * @name Empty State\n * @description A message that displays when there is no information to display.\n * @example <goat-empty-state class=\"content-center\" headline=\"Empty list\" description=\"Nothing to display\">\n * </goat-empty-state>\n */\n@Component({\n  tag: 'goat-empty-state',\n  styleUrl: 'empty-state.scss',\n  shadow: true,\n})\nexport class EmptyState implements ComponentInterface {\n\n  @Element() elm!: HTMLElement;\n\n  @Prop({ reflect: true }) illustration: 'no-document' = 'no-document';\n\n  @Prop({ reflect: true }) headline: string;\n\n  @Prop({ reflect: true }) description: string;\n\n  @Prop({ reflect: true }) action: string;\n\n  @Prop() actionUrl: string;\n\n  @Prop() actionVariant: 'default' | 'light' | 'outline' | 'ghost' | 'link' = 'default';\n\n  @Prop() actionDisabled: boolean = false;\n\n  @State() vertical: boolean = false;\n\n  @Listen('resize', { target: 'window' })\n  resizeHandler() {\n    this.vertical = this.elm.clientWidth < 768;\n  }\n\n  async componentWillLoad() {\n    if (!window['DOMPurify']) {\n      await loadDOMPurify();\n    }\n  }\n\n  componentDidLoad() {\n    this.resizeHandler();\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={{ 'empty-state': true, 'vertical': this.vertical }}>\n          <div class='illustration'>\n            <goat-svg src={getAssetPath(`./assets/images/empty-state/${this.illustration}.svg`)} />\n          </div>\n\n          <div class='content'>\n            {this.headline && <div class='title'>{this.headline}</div>}\n            {this.description && <div class='description' innerHTML={window['DOMPurify'].sanitize(this.description)}/>}\n            <div class='actions'>\n              {this.action &&\n                <goat-button\n                  href={this.actionUrl}\n                  icon={'arrow-right'}\n                  iconEnd={true}\n                  disabled={this.actionDisabled}\n                  variant={this.actionVariant}>\n                  {this.action}\n                </goat-button>}\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n\n}\n","const cache: Record<string, string> = {};\n\n// TODO: prevent duplicated request when rendering multiple icons with same name simultaneously\nexport async function fetchIcon(url) {\n  if (!url) return '';\n  if (cache[url]) {\n    return cache[url];\n  }\n  const res = await fetch(url, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'omit',\n  });\n  cache[url] = await res.text();\n  return cache[url];\n}\n","@import \"../../../globalStyles/commons\";\n\n:host {\n  display: inline-block;\n}\n\n.icon {\n  line-height: 0;\n  height: 100%;\n  width: 100%;\n}\n\nsvg {\n  height: 100%;\n  width: 100%;\n}\n\n:host(.inherit) .icon {\n  color: inherit;\n}\n","import { Component, h, Host, Prop, State, Watch } from '@stencil/core';\nimport { fetchIcon } from './datasource';\n\n@Component({\n  tag: 'goat-svg',\n  styleUrl: 'svg.scss',\n  shadow: true,\n})\nexport class Svg {\n\n  @Prop() src: string = '';\n\n  @State() svg: string = '';\n\n  async fetchSvg(name: string) {\n    if (this.src)\n      this.svg = await fetchIcon(name);\n  }\n\n\n  @Watch('src')\n  async handleNameChange(newValue: string) {\n    this.svg = await fetchIcon(newValue);\n  }\n\n  async componentWillLoad() {\n    await this.fetchSvg(this.src);\n  }\n\n\n  render() {\n    return (\n      <Host>\n        <div innerHTML={this.svg} class={{ 'icon': true }} />\n      </Host>\n    );\n  }\n\n}\n"]}