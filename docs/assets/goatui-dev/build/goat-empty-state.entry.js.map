{"file":"goat-empty-state.entry.esm.js","mappings":";;;AAEe,eAAe,aAAa;EACzC,MAAM,OAAO,GAAG,OAAO,CAAC;;EAExB,MAAM,UAAU,CAAC,oDAAoD,OAAO,gBAAgB,CAAC,CAAC;AAChG;;ACNA,MAAM,aAAa,GAAG,g8EAAg8E;;MCez8E,UAAU;EALvB;;IAS2B,iBAAY,GAAkB,aAAa,CAAC;IAU7D,kBAAa,GAAuD,SAAS,CAAC;IAE9E,mBAAc,GAAY,KAAK,CAAC;IAE/B,aAAQ,GAAY,KAAK,CAAC;GA8CpC;EA3CC,aAAa;IACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;GAC5C;EAED,MAAM,iBAAiB;IACrB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;MACxB,MAAM,aAAa,EAAE,CAAC;KACvB;GACF;EAED,gBAAgB;IACd,IAAI,CAAC,aAAa,EAAE,CAAC;GACtB;EAED,MAAM;IACJ,QACE,EAAC,IAAI,QACH,WAAK,KAAK,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAC5D,WAAK,KAAK,EAAC,cAAc,IACvB,gBAAU,GAAG,EAAE,YAAY,CAAC,+BAA+B,IAAI,CAAC,YAAY,MAAM,CAAC,GAAI,CACnF,EAEN,WAAK,KAAK,EAAC,SAAS,IACjB,IAAI,CAAC,QAAQ,IAAI,WAAK,KAAK,EAAC,OAAO,IAAE,IAAI,CAAC,QAAQ,CAAO,EACzD,IAAI,CAAC,WAAW,IAAI,WAAK,KAAK,EAAC,aAAa,EAAC,SAAS,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAC1G,WAAK,KAAK,EAAC,SAAS,IACjB,IAAI,CAAC,MAAM;MACV,mBACE,IAAI,EAAE,IAAI,CAAC,SAAS,EACpB,IAAI,EAAE,aAAa,EACnB,OAAO,EAAE,IAAI,EACb,QAAQ,EAAE,IAAI,CAAC,cAAc,EAC7B,OAAO,EAAE,IAAI,CAAC,aAAa,IAC1B,IAAI,CAAC,MAAM,CACA,CACZ,CACF,CACF,CACD,EACP;GACH;;;;;;;","names":[],"sources":["./src/3d-party/dompurify/index.tsx","./src/components/content/empty-state/empty-state.scss?tag=goat-empty-state&encapsulation=shadow","./src/components/content/empty-state/empty-state.tsx"],"sourcesContent":["import { loadScript } from '../../utils/utils';\r\n\r\nexport default async function loadDOMPurify() {\r\n  const version = '2.3.6';\r\n  // @ts-ignore\r\n  await loadScript(`https://cdnjs.cloudflare.com/ajax/libs/dompurify/${version}/purify.min.js`);\r\n}\r\n","@import \"../../../globalStyles/commons\";\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.empty-state {\r\n  display: flex;\r\n  padding: v(--spacing-3);\r\n  justify-content: center;\r\n  gap: v(--spacing-8);\r\n  height: 100%;\r\n  align-items: center;\r\n  max-width: v(--container-lg);\r\n  margin: auto;\r\n}\r\n\r\n.illustration {\r\n  height: 100%;\r\n  display: flex;\r\n\r\n  svg {\r\n    height: 100%;\r\n  }\r\n\r\n  --empty-state-outline: #{v(--color-brand-primary)};\r\n  --empty-state-bg-primary: #{v(--color-brand-secondary)};\r\n  --empty-state-bg-secondary: #{v(--color-brand-secondary-40)};\r\n  --empty-state-bg-tertiary: #{v(--color-brand-secondary-30)};\r\n\r\n  --empty-state-text: #{v(--text-primary)};\r\n  --empty-state-bg-surface: #{v(--background)};\r\n\r\n  --empty-state-green: #{v(--color-success-50)};\r\n}\r\n\r\n:host-context([data-theme=\"dark\"]) {\r\n  .illustration {\r\n    --empty-state-bg-secondary: #{v(--color-brand-secondary-80)};\r\n    --empty-state-bg-tertiary: #{v(--color-brand-secondary-100)};\r\n  }\r\n}\r\n\r\n\r\n.content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  .title {\r\n    @include font-style(text-md);\r\n    font-weight: v(--font-weight-semi-bold);\r\n    margin-bottom: v(--spacing-2);\r\n    color: var(--text-color, v(--text-primary))\r\n  }\r\n\r\n  .description {\r\n    @include font-style(text-sm);\r\n    margin-bottom: v(--spacing-4);\r\n    color: var(--text-color, v(--text-secondary))\r\n  }\r\n}\r\n\r\n:host(.content-center) .content {\r\n  align-items: center;\r\n}\r\n\r\n.empty-state:not(.vertical) {\r\n\r\n  .illustration {\r\n    width: 50%;\r\n  }\r\n\r\n  .content {\r\n    width: 50%;\r\n  }\r\n}\r\n\r\n\r\n.empty-state.vertical {\r\n  flex-direction: column;\r\n  gap: v(--spacing-5);\r\n\r\n  .illustration {\r\n    height: auto;\r\n    width: 100%;\r\n    justify-content: center;\r\n  }\r\n}\r\n\r\n","import { Component, ComponentInterface, Element, getAssetPath, h, Host, Listen, Prop, State } from '@stencil/core';\r\nimport loadDOMPurify from '../../../3d-party/dompurify';\r\n\r\n\r\n/**\r\n * @name Empty State\r\n * @description A message that displays when there is no information to display.\r\n * @example <goat-empty-state class=\"content-center\" headline=\"Empty list\" description=\"Nothing to display\">\r\n * </goat-empty-state>\r\n */\r\n@Component({\r\n  tag: 'goat-empty-state',\r\n  styleUrl: 'empty-state.scss',\r\n  shadow: true,\r\n})\r\nexport class EmptyState implements ComponentInterface {\r\n\r\n  @Element() elm!: HTMLElement;\r\n\r\n  @Prop({ reflect: true }) illustration: 'no-document' = 'no-document';\r\n\r\n  @Prop({ reflect: true }) headline: string;\r\n\r\n  @Prop({ reflect: true }) description: string;\r\n\r\n  @Prop({ reflect: true }) action: string;\r\n\r\n  @Prop() actionUrl: string;\r\n\r\n  @Prop() actionVariant: 'default' | 'light' | 'outline' | 'ghost' | 'link' = 'default';\r\n\r\n  @Prop() actionDisabled: boolean = false;\r\n\r\n  @State() vertical: boolean = false;\r\n\r\n  @Listen('resize', { target: 'window' })\r\n  resizeHandler() {\r\n    this.vertical = this.elm.clientWidth < 768;\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    if (!window['DOMPurify']) {\r\n      await loadDOMPurify();\r\n    }\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.resizeHandler();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={{ 'empty-state': true, 'vertical': this.vertical }}>\r\n          <div class='illustration'>\r\n            <goat-svg src={getAssetPath(`./assets/images/empty-state/${this.illustration}.svg`)} />\r\n          </div>\r\n\r\n          <div class='content'>\r\n            {this.headline && <div class='title'>{this.headline}</div>}\r\n            {this.description && <div class='description' innerHTML={window['DOMPurify'].sanitize(this.description)}/>}\r\n            <div class='actions'>\r\n              {this.action &&\r\n                <goat-button\r\n                  href={this.actionUrl}\r\n                  icon={'arrow-right'}\r\n                  iconEnd={true}\r\n                  disabled={this.actionDisabled}\r\n                  variant={this.actionVariant}>\r\n                  {this.action}\r\n                </goat-button>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n"],"version":3}