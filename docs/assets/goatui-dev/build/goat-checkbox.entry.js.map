{"file":"goat-checkbox.entry.esm.js","mappings":"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","names":[],"sources":["./src/components/form/checkbox/checkbox.scss?tag=goat-checkbox&encapsulation=shadow","./src/components/form/checkbox/checkbox.tsx"],"sourcesContent":["@import \"../../../globalStyles/commons\";\r\n@import \"checkbox-animation\";\r\n\r\n:host {\r\n  display: inline-block;\r\n  color: v(--text-primary);\r\n}\r\n\r\n.checkbox {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &.has-content {\r\n    gap: v(--spacing-2);\r\n  }\r\n\r\n\r\n  .input-native {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    border: 0;\r\n  }\r\n\r\n  .box {\r\n    position: relative;\r\n    background: v(--field-01);\r\n    border: 1px solid v(--ui-04);\r\n    border-radius: v(--border-radius);\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &:before {\r\n      pointer-events: none;\r\n      content: \"\";\r\n      display: block;\r\n      width: 100%;\r\n      height: 100%;\r\n      box-sizing: border-box;\r\n      border-radius: v(--border-radius);\r\n      border: 1px solid transparent;\r\n    }\r\n  }\r\n\r\n  &.rounded {\r\n    .box {\r\n      border-radius: 50%;\r\n\r\n      &:before {\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n  }\r\n\r\n  .tick {\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n\r\n  &.has-focus:not(.active) {\r\n    .box {\r\n      @include focus-ring;\r\n      border-color: transparent;\r\n    }\r\n\r\n    &:not(.state-checked) .box:before {\r\n      border-color: v(--icon-01);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n:host(.light) .box {\r\n  background-color: v(--field-02);\r\n}\r\n\r\n\r\n.checkbox.state-checked {\r\n  .box {\r\n    background: v(--color-primary);\r\n    border-color: transparent;\r\n  }\r\n\r\n  .tick {\r\n    width: 33%;\r\n    height: 67%;\r\n    border-right: 3px solid transparent;\r\n    border-bottom: 3px solid transparent;\r\n    transform: rotate(45deg);\r\n    transform-origin: 0 100%;\r\n\r\n    &.animate {\r\n      animation: checkbox-check 125ms 250ms cubic-bezier(.4, .0, .23, 1) forwards;\r\n    }\r\n\r\n    &:not(.animate) {\r\n      border-color: v(--color-white);\r\n      top: -15%;\r\n      left: 15%;\r\n    }\r\n  }\r\n\r\n  &:hover .box {\r\n    background: v(--color-primary-70);\r\n  }\r\n\r\n  &.active .box {\r\n    border-color: v(--color-white);\r\n  }\r\n\r\n  &.has-focus:not(.active) {\r\n    .box {\r\n      @include focus-ring;\r\n      border-color: v(--color-white);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n.checkbox.state-intermediate {\r\n  .box {\r\n    background: v(--color-primary);\r\n    border-color: transparent;\r\n  }\r\n\r\n\r\n  .tick {\r\n    width: 67%;\r\n    height: 0;\r\n    margin: auto;\r\n    border-right: 3px solid transparent;\r\n    border-bottom: 3px solid transparent;\r\n    transform-origin: 0 100%;\r\n\r\n    &.animate {\r\n      animation: checkbox-slash 125ms 250ms cubic-bezier(.4, .0, .23, 1) forwards;\r\n    }\r\n\r\n    &:not(.animate) {\r\n      border-color: v(--color-white);\r\n    }\r\n  }\r\n\r\n  &:hover .box {\r\n    background: v(--color-primary-90);\r\n  }\r\n\r\n  &.active .box {\r\n    border-color: v(--color-white);\r\n  }\r\n\r\n  &.has-focus:not(.active) {\r\n    .box {\r\n      @include focus-ring;\r\n      border-color: v(--color-white);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * SIZES\r\n */\r\n.checkbox.size-sm {\r\n\r\n  @include font-style(text-sm);\r\n\r\n  .box {\r\n    width: 1.25rem;\r\n    height: 1.25rem;\r\n  }\r\n\r\n}\r\n\r\n.checkbox.size-md {\r\n  @include font-style(text-md);\r\n\r\n  .box {\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n  }\r\n}\r\n\r\n.checkbox.size-lg {\r\n  @include font-style(text-lg);\r\n\r\n  .box {\r\n    width: 1.75rem;\r\n    height: 1.75rem;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * States\r\n */\r\n@each $state in [success, warning, error] {\r\n  :host-context(.input-state-#{$state}) {\r\n    .checkbox .box {\r\n      border-color: v(--color-#{$state});\r\n    }\r\n  }\r\n}\r\n\r\n.checkbox.readonly {\r\n  cursor: default;\r\n  color: v(--text-disabled) !important;\r\n  border-color: v(--text-disabled) !important;\r\n\r\n  &.state-checked .box {\r\n    background: v(--text-disabled) !important;\r\n  }\r\n\r\n  .box {\r\n    border: 1px solid v(--text-disabled) !important;\r\n  }\r\n\r\n  .tick {\r\n    border-color: #{v(--disabled-01)} !important;\r\n  }\r\n\r\n}\r\n\r\n\r\n.checkbox.disabled {\r\n  cursor: not-allowed;\r\n  color: v(--text-disabled) !important;\r\n  border-color: v(--text-disabled) !important;\r\n\r\n  &.state-checked .box {\r\n    background: v(--text-disabled) !important;\r\n  }\r\n\r\n  .box {\r\n    border: 1px solid v(--text-disabled) !important;\r\n  }\r\n\r\n  .tick {\r\n    border-color: #{v(--disabled-01)} !important;\r\n  }\r\n\r\n}\r\n\r\n\r\n","import {\r\n  Component,\r\n  ComponentInterface,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n  h,\r\n  Host,\r\n  Listen,\r\n  Method,\r\n  Prop,\r\n  State,\r\n} from '@stencil/core';\r\nimport { getComponentIndex } from '../../../utils/utils';\r\n\r\n/**\r\n * @name Checkbox\r\n * @description Captures boolean input with an optional indeterminate mode.\r\n * @example <goat-checkbox value='true'>Want ice cream?</goat-checkbox>\r\n */\r\n@Component({\r\n  tag: 'goat-checkbox',\r\n  styleUrl: 'checkbox.scss',\r\n  shadow: true,\r\n})\r\nexport class Checkbox implements ComponentInterface, InputComponentInterface {\r\n\r\n  gid: string = getComponentIndex();\r\n\r\n  /**\r\n   * The input field name.\r\n   */\r\n  @Prop() name: string = `goat-input-${this.gid}`;\r\n\r\n  /**\r\n   * The checkbox label.\r\n   */\r\n  @Prop() label: string;\r\n\r\n  /**\r\n   * The input field value.\r\n   */\r\n  @Prop({ mutable: true }) value: boolean = false;\r\n\r\n  @Prop({ mutable: true }) intermediate: boolean = false;\r\n\r\n  @Prop() rounded: boolean = false;\r\n\r\n  /**\r\n   * The button size.\r\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\r\n   */\r\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\r\n\r\n  /**\r\n   * If true, required icon is show. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) required: boolean = false;\r\n\r\n\r\n  @Prop({ reflect: true }) readonly : boolean = false;\r\n\r\n  /**\r\n   * If true, the user cannot interact with the button. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n\r\n  @Prop( {reflect: true, mutable: true}) configAria: any = {};\r\n\r\n  /**\r\n   * On change of input a CustomEvent 'goat:change' will be triggered. Event details contains parent event, oldValue, newValue of input.\r\n   */\r\n  @Event({ eventName: 'goat:change' }) goatChange: EventEmitter;\r\n\r\n  /**\r\n   * Emitted when the input loses focus.\r\n   */\r\n  @Event({ eventName: 'goat:blur' }) goatBlur: EventEmitter;\r\n\r\n  /**\r\n   * Emitted when the input has focus.\r\n   */\r\n  @Event({ eventName: 'goat:focus' }) goatFocus: EventEmitter;\r\n\r\n  @Method()\r\n  async getComponentId() {\r\n    return this.gid;\r\n  }\r\n\r\n  /**\r\n   * Sets focus on the native `input` in `goat-input`. Use this method instead of the global\r\n   * `input.focus()`.\r\n   */\r\n  @Method()\r\n  async setFocus() {\r\n    if (this.nativeInput) {\r\n      this.nativeInput.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global\r\n   * `input.blur()`.\r\n   */\r\n  @Method()\r\n  async setBlur() {\r\n    if (this.nativeInput) {\r\n      this.nativeInput.blur();\r\n    }\r\n  }\r\n\r\n  @Listen('mouseup', { target: 'window' })\r\n  windowMouseUp() {\r\n    if (this.isActive)\r\n      this.isActive = false;\r\n  }\r\n\r\n  @Listen('keyup', { target: 'window' })\r\n  windowKeyUp(evt) {\r\n    if (this.isActive && (evt.key == ' '))\r\n      this.isActive = false;\r\n  }\r\n\r\n  private mouseDownHandler = () => {\r\n    this.isActive = true;\r\n  };\r\n\r\n  private keyDownHandler = (evt) => {\r\n    if (evt.key == ' ') {\r\n      evt.preventDefault();\r\n      this.isActive = true;\r\n      this.clickHandler(evt);\r\n    }\r\n  };\r\n\r\n  @Element() elm!: HTMLElement;\r\n  private nativeInput?: HTMLInputElement;\r\n  private iconContainer?: HTMLElement;\r\n  private tabindex?: string | number = 1;\r\n  @State() hasFocus = false;\r\n  @State() animate = true;\r\n  @State() isActive = false;\r\n  @State() slotHasContent = false;\r\n\r\n  private clickHandler = (ev: MouseEvent | KeyboardEvent) => {\r\n    if (!this.disabled && !this.readonly) {\r\n      this.value = !JSON.parse(this.nativeInput.value);\r\n      this.intermediate = false;\r\n      this.goatChange.emit(ev);\r\n      this.iconContainer.focus();\r\n    }\r\n  };\r\n\r\n  private blurHandler = (ev: FocusEvent) => {\r\n    this.hasFocus = false;\r\n    this.goatBlur.emit(ev);\r\n  };\r\n\r\n  private focusHandler = (ev: FocusEvent) => {\r\n    this.hasFocus = true;\r\n    this.goatFocus.emit(ev);\r\n  };\r\n\r\n  componentWillLoad() {\r\n    // If the ion-input has a tabindex attribute we get the value\r\n    // and pass it down to the native input, then remove it from the\r\n    // goat-input to avoid causing tabbing twice on the same element\r\n    if (this.elm.hasAttribute('tabindex')) {\r\n      const tabindex = this.elm.getAttribute('tabindex');\r\n      this.tabindex = tabindex !== null ? tabindex : undefined;\r\n      this.elm.removeAttribute('tabindex');\r\n    }\r\n    this.elm.getAttributeNames().forEach((name: string) => {\r\n      if (name.includes('aria-')) {\r\n        this.configAria[name] = this.elm.getAttribute(name);\r\n        this.elm.removeAttribute(name);\r\n      }\r\n    });\r\n    this.slotHasContent = this.elm.hasChildNodes();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host has-focus={this.hasFocus} active={this.isActive}>\r\n        <label class={{\r\n          'checkbox': true,\r\n          'state-checked': this.value,\r\n          'state-intermediate': !this.value && this.intermediate,\r\n          [`size-${this.size}`]: true,\r\n          'has-focus': this.hasFocus,\r\n          'active': this.isActive,\r\n          'disabled': this.disabled,\r\n          'readonly': this.readonly,\r\n          'required': this.required,\r\n          'rounded': this.rounded,\r\n          'has-content': this.slotHasContent,\r\n        }}>\r\n          <div class='box'\r\n               tabindex={this.tabindex}\r\n               ref={elm => this.iconContainer = elm}\r\n               onKeyUp={(evt) => {\r\n                 if (evt.keyCode === 13) {\r\n                   this.clickHandler(evt);\r\n                 }\r\n               }}\r\n               onMouseDown={this.mouseDownHandler}\r\n               onKeyDown={this.keyDownHandler}\r\n               onBlur={this.blurHandler}\r\n               onFocus={this.focusHandler}\r\n\r\n               role=\"checkbox\"\r\n               aria-disabled={this.disabled + ''}\r\n               aria-required={this.required + ''}\r\n               aria-checked={this.value + ''}\r\n               {...this.configAria}>\r\n            <div class={{\r\n              'tick': true,\r\n              'animate': this.animate,\r\n            }} />\r\n          </div>\r\n\r\n          <input type='checkbox'\r\n                 class='input-native'\r\n                 name={this.name}\r\n                 value={this.value + ''}\r\n                 checked={this.value}\r\n                 aria-hidden='true'\r\n                 required={this.required}\r\n                 ref={elm => this.nativeInput = elm}\r\n                 tabindex='-1'\r\n                 onClick={this.clickHandler} />\r\n\r\n          <div class='slot-container'>\r\n            <slot />\r\n          </div>\r\n\r\n        </label>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n"],"version":3}