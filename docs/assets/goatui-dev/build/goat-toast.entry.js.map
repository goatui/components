{"file":"goat-toast.entry.esm.js","mappings":";;;AAAA,MAAM,QAAQ,GAAG,4wDAA4wD;;ICchxD,KAAK;EALlB;;IASU,YAAO,GAAW,EAAE,CAAC;IAEJ,UAAK,GAA6C,MAAM,CAAC;IAEzE,eAAU,GAAY,UAAU,EAAE,CAAC;GAqC7C;EAnCC,iBAAiB;IACf,kBAAkB,CAAC;MACjB,IAAI,CAAC,UAAU,GAAG,UAAU,EAAE,CAAC;KAChC,CAAC,CAAC;GACJ;EAED,eAAe;IACb,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;MAC5B,OAAO,iBAAW,KAAK,EAAC,SAAS,EAAC,IAAI,EAAC,mBAAmB,EAAC,IAAI,EAAC,IAAI,GAAG,CAAC;KACzE;SAAM,IAAI,IAAI,CAAC,KAAK,KAAK,OAAO,EAAE;MACjC,OAAO,iBAAW,KAAK,EAAC,SAAS,EAAC,IAAI,EAAC,eAAe,EAAC,IAAI,EAAC,IAAI,GAAG,CAAC;KACrE;SAAM,IAAI,IAAI,CAAC,KAAK,KAAK,MAAM,EAAE;MAChC,OAAO,iBAAW,KAAK,EAAC,SAAS,EAAC,IAAI,EAAC,kBAAkB,EAAC,IAAI,EAAC,IAAI,GAAG,CAAC;KACxE;SAAM,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;MACnC,OAAO,iBAAW,KAAK,EAAC,SAAS,EAAC,IAAI,EAAC,yBAAyB,EAAC,IAAI,EAAC,IAAI,GAAG,CAAC;KAC/E;GACF;EAED,MAAM;IACJ,QACE,EAAC,IAAI,QACH,WAAK,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAC,OAAO,IACvE,WAAK,KAAK,EAAC,YAAY,IACpB,IAAI,CAAC,eAAe,EAAE,CACnB,EACN,WAAK,KAAK,EAAC,SAAS,IAClB,WAAK,KAAK,EAAC,SAAS,IACjB,IAAI,CAAC,OAAO,CACT,CACF,CACF,CACD,EACP;GACH;;;;;;;","names":[],"sources":["./src/components/content/toast/toast.scss?tag=goat-toast&encapsulation=shadow","./src/components/content/toast/toast.tsx"],"sourcesContent":["@import \"../../../globalStyles/commons\";\n\n\n:host {\n  display: inline-block;\n  margin-bottom: v(--spacing-3);\n}\n\n.toast {\n  border-radius: v(--border-radius);\n  display: flex;\n  align-items: center;\n  gap: v(--spacing-2);\n  padding: v(--spacing-2) v(--spacing-4);\n  border: 1px solid v(--ui-03);\n  box-shadow: v(--shadow-lg);\n  background-color: v(--background);\n\n  .content {\n    flex: 1;\n    color: v(--text-primary);\n\n    .message {\n      @include font-style(text-md);\n    }\n\n    .description {\n      @include font-style(text-sm);\n    }\n  }\n\n  .state-icon {\n    line-height: 0;\n  }\n}\n\n\n@each $state in [info, success, warning, error] {\n  :host([state=\"#{$state}\"]) {\n    .state-icon {\n      color: v(--color-#{$state});\n    }\n  }\n  :host-context([data-theme=\"dark\"]):host([state=\"#{$state}\"]) {\n\n  }\n}\n","import { Component, ComponentInterface, Element, h, Host, Prop, State } from '@stencil/core';\nimport { isDarkMode, observeThemeChange } from '../../../utils/utils';\n\n\n/**\n * @name Toast\n * @description Toasts are lightweight notifications.\n * @example <goat-toast state=\"success\" message=\"Successful saved the record\"></goat-toast>\n */\n@Component({\n  tag: 'goat-toast',\n  styleUrl: 'toast.scss',\n  shadow: true,\n})\nexport class Toast implements ComponentInterface {\n\n  @Element() elm!: HTMLElement;\n\n  @Prop() message: string = '';\n\n  @Prop({ reflect: true }) state: 'success' | 'error' | 'info' | 'warning' = 'info';\n\n  @State() isDarkMode: boolean = isDarkMode();\n\n  componentWillLoad() {\n    observeThemeChange(() => {\n      this.isDarkMode = isDarkMode();\n    });\n  }\n\n  renderStateIcon() {\n    if (this.state === 'success') {\n      return <goat-icon class='inherit' name='check-circle-fill' size='sm' />;\n    } else if (this.state === 'error') {\n      return <goat-icon class='inherit' name='x-circle-fill' size='sm' />;\n    } else if (this.state === 'info') {\n      return <goat-icon class='inherit' name='info-circle-fill' size='sm' />;\n    } else if (this.state === 'warning') {\n      return <goat-icon class='inherit' name='exclamation-circle-fill' size='sm' />;\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={{ 'toast': true, 'dark-mode': this.isDarkMode }} role='alert'>\n          <div class='state-icon'>\n            {this.renderStateIcon()}\n          </div>\n          <div class='content'>\n            <div class='message'>\n              {this.message}\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n}\n"],"version":3}