{"file":"goat-menu.entry.esm.js","mappings":"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","names":[],"sources":["./src/components/menu/menu/menu.scss?tag=goat-menu&encapsulation=shadow","./src/components/menu/menu/menu.tsx"],"sourcesContent":["@import \"../../../globalStyles/commons\";\r\n\r\n:host {\r\n  display: inline-block;\r\n  --list-border-radius: #{v(--border-radius)};\r\n  --list-max-height: inherit;\r\n}\r\n\r\n\r\n.menu {\r\n  background-color: v(--field-02);\r\n  padding: v(--spacing-2) 0;\r\n  border: 1px solid v(--color-neutral-200);\r\n  box-sizing: border-box;\r\n  border-radius: var(--list-border-radius);\r\n  box-shadow: v(--shadow-sm);\r\n}\r\n","import { Component, ComponentInterface, Element, h, Listen, Method, Prop, State, Watch } from '@stencil/core';\r\n\r\n/**\r\n * @name Menu\r\n * @description Menus display a list of choices on temporary surfaces.\r\n * @img /assets/img/menu.png\r\n */\r\n@Component({\r\n  tag: 'goat-menu',\r\n  styleUrl: 'menu.scss',\r\n  shadow: true,\r\n})\r\nexport class Menu implements ComponentInterface {\r\n\r\n\r\n  @Element() elm!: HTMLElement;\r\n\r\n  @Prop() showLoader: boolean = false;\r\n\r\n  @Prop({ mutable: true }) value?: string | number;\r\n\r\n  @Prop({ mutable: true }) empty: boolean = false;\r\n\r\n  @Prop({ mutable: true }) emptyState: any = {\r\n    'headline': 'No items',\r\n    'description': 'There are no items to display',\r\n  };\r\n\r\n  @State()\r\n  internalEmptyState: any;\r\n\r\n  @Watch('emptyState')\r\n  parseEmptyState() {\r\n    if (typeof this.emptyState === 'string') {\r\n      this.internalEmptyState = JSON.parse(this.emptyState);\r\n    }\r\n  }\r\n\r\n  @Listen('keydown', { target: 'window' })\r\n  handleKeyDown(evt: KeyboardEvent) {\r\n    const path = evt.composedPath();\r\n    let menuItem = null;\r\n    for (const elm of path) {\r\n      // @ts-ignore\r\n      if (elm.tagName === 'GOAT-MENU-ITEM') {\r\n        menuItem = elm;\r\n      }\r\n      if (elm !== this.elm)\r\n        continue;\r\n      if (evt.key === 'ArrowDown') {\r\n        evt.preventDefault();\r\n        this.focusNextItem(menuItem);\r\n      } else if (evt.key === 'ArrowUp') {\r\n        evt.preventDefault();\r\n        this.focusPreviousItem(menuItem);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets focus on first menu item. Use this method instead of the global\r\n   * `element.focus()`.\r\n   */\r\n  @Method()\r\n  async setFocus() {\r\n    const firstMenuItem = this.getFirstItem();\r\n    firstMenuItem?.setFocus();\r\n  }\r\n\r\n  private getFirstItem() {\r\n    return this.elm.querySelector('goat-menu-item');\r\n  }\r\n\r\n  private focusNextItem(currentItem) {\r\n    let nextItem: any = currentItem.nextElementSibling;\r\n    do {\r\n      if (nextItem && nextItem.tagName === 'GOAT-MENU-ITEM' && !nextItem.disabled) {\r\n        nextItem.setFocus();\r\n        return;\r\n      }\r\n      if (!nextItem) {\r\n        nextItem = this.elm.querySelector('goat-menu-item');\r\n      } else {\r\n        nextItem = nextItem.nextElementSibling;\r\n      }\r\n    } while (nextItem !== currentItem);\r\n  }\r\n\r\n  private focusPreviousItem(currentItem) {\r\n    let previousItem: any = currentItem.previousElementSibling;\r\n    do {\r\n      if (previousItem && previousItem.tagName === 'GOAT-MENU-ITEM' && !previousItem.disabled) {\r\n        previousItem.setFocus();\r\n        return;\r\n      }\r\n      if (!previousItem) {\r\n        previousItem = this.elm.querySelector('goat-menu-item:last-child');\r\n      } else {\r\n        previousItem = previousItem.previousElementSibling;\r\n      }\r\n    } while (previousItem !== currentItem);\r\n  }\r\n\r\n\r\n  componentDidLoad() {\r\n    this.parseEmptyState();\r\n  }\r\n\r\n\r\n  render() {\r\n    return <div class='menu'>\r\n      <slot />\r\n      {this.renderEmptyState()}\r\n    </div>;\r\n  }\r\n\r\n  private renderEmptyState() {\r\n    if (this.empty)\r\n      return <goat-empty-state class='empty-menu' {...this.internalEmptyState} />;\r\n  }\r\n\r\n}\r\n"],"version":3}