{"version":3,"names":["menuCss","Menu","parseEmptyState","this","emptyState","internalEmptyState","JSON","parse","handleKeyDown","evt","path","composedPath","menuItem","elm","tagName","key","preventDefault","focusNextItem","focusPreviousItem","setFocus","firstMenuItem","getFirstItem","querySelector","currentItem","nextItem","nextElementSibling","disabled","previousItem","previousElementSibling","componentDidLoad","render","h","class","renderEmptyState","empty","Object","assign","menuItemCss","GoatMenu","gid","getComponentIndex","tabindex","clickHandler","event","goatMenuItemClick","emit","value","innerText","stopPropagation","blurHandler","hasFocus","focusHandler","mouseDownHandler","isActive","keyDownHandler","Host","active","ref","el","nativeElement","selected","startSlotHasContent","endSlotHasContent","onBlur","onFocus","onClick","onMouseDown","onKeyDown","name","focus","setBlur","blur","windowMouseUp","windowKeyUp","componentWillLoad","hasAttribute","getAttribute","undefined","removeAttribute","selectCss","Select","selectHandler","selectItemValue","readonly","addItem","closeList","clearInput","removeItem","isOpen","setTimeout","openList","search","searchString","dropdownContent","dropdownContentElm","dropdownContentHeight","getBoundingClientRect","height","dropdownContentWidth","width","fixPosition","toggleList","goatSearchEnter","currentItems","filterItems","console","log","menuElm","onInput","ev","input","target","goatSearch","displayElement","debounceChanged","debounceEvent","debounce","windowClick","menuItemClick","detail","getComponentId","tagDismissClick","getValues","toString","split","includes","multiple","push","join","goatChange","newItem","getItemByValue","filter","item","removedItem","hasValue","length","items","find","getDisplayValue","icon","size","label","placeholder","positions","position","getAttributeNames","forEach","configAria","i","dropdownButtonRect","dropdownContentRect","top","bottom","left","right","isOut","isOutOfViewport","any","connectedCallback","renderMultiSelectValues","values","map","dropdown","select","type","clearable","color","kind","variant","getModeIcon","renderDropdownList","showLoader","hideDropdownIcon","filteredItems","slot","toLocaleLowerCase"],"sources":["src/components/navigation/menu/menu/menu.scss?tag=goat-menu&encapsulation=shadow","src/components/navigation/menu/menu/menu.tsx","src/components/navigation/menu/menu-item/menu-item.scss?tag=goat-menu-item&encapsulation=shadow","src/components/navigation/menu/menu-item/menu-item.tsx","src/components/data-entry/select/select.scss?tag=goat-select&encapsulation=shadow","src/components/data-entry/select/select.tsx"],"sourcesContent":["@import \"../../../../globalStyles/commons\";\r\n\r\n:host {\r\n  display: inline-block;\r\n  --list-border-radius: var(--border-radius);\r\n  --list-background: #{v(--background)};\r\n  --list-max-height: 100%;\r\n  --list-border-color:  #{v(--border-strong-01)};\r\n  --list-shadow: #{v(--shadow-sm)};\r\n}\r\n\r\n.menu {\r\n  background: var(--list-background);\r\n  box-sizing: border-box;\r\n  border-radius: var(--list-border-radius);\r\n  max-height: var(--list-max-height);\r\n  overflow: auto;\r\n  border: 1px solid var(--list-border-color);\r\n  box-shadow: var(--list-shadow);\r\n}\r\n\r\nslot::slotted(goat-divider) {\r\n  --divider-color:#{v(--border-subtle-01)};\r\n  --divider-padding:#{v(--spacing-03)};\r\n}\r\n","import { Component, ComponentInterface, Element, h, Listen, Method, Prop, State, Watch } from '@stencil/core';\r\n\r\n/**\r\n * @name Menu\r\n * @description Menus display a list of choices on temporary surfaces.\r\n * @category Navigation\r\n * @img /assets/img/menu.png\r\n * @imgDark /assets/img/menu-dark.png\r\n */\r\n@Component({\r\n  tag: 'goat-menu',\r\n  styleUrl: 'menu.scss',\r\n  shadow: true,\r\n})\r\nexport class Menu implements ComponentInterface {\r\n  @Element() elm!: HTMLElement;\r\n\r\n  @Prop() showLoader: boolean = false;\r\n\r\n  @Prop({ mutable: true }) value?: string | number;\r\n\r\n  /**\r\n   * The menu item size.\r\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\r\n   */\r\n  @Prop({ reflect: true }) size: 'sm' | 'md' | 'lg' = 'md';\r\n\r\n  @Prop({ mutable: true }) empty: boolean = false;\r\n\r\n  @Prop({ mutable: true }) emptyState: any = `{\r\n    \"headline\": \"No items\",\r\n    \"description\": \"There are no items to display\"\r\n  }`;\r\n\r\n  @State()\r\n  internalEmptyState: any;\r\n\r\n  @Watch('emptyState')\r\n  parseEmptyState() {\r\n    if (typeof this.emptyState === 'string') {\r\n      this.internalEmptyState = JSON.parse(this.emptyState);\r\n    } else {\r\n      this.internalEmptyState = this.emptyState;\r\n    }\r\n  }\r\n\r\n  @Listen('keydown', { target: 'window' })\r\n  handleKeyDown(evt: KeyboardEvent) {\r\n    const path = evt.composedPath();\r\n    let menuItem = null;\r\n    for (const elm of path) {\r\n      // @ts-ignore\r\n      if (elm.tagName === 'GOAT-MENU-ITEM') {\r\n        menuItem = elm;\r\n      }\r\n      if (elm !== this.elm) continue;\r\n      if (evt.key === 'ArrowDown') {\r\n        evt.preventDefault();\r\n        this.focusNextItem(menuItem);\r\n      } else if (evt.key === 'ArrowUp') {\r\n        evt.preventDefault();\r\n        this.focusPreviousItem(menuItem);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets focus on first menu item. Use this method instead of the global\r\n   * `element.focus()`.\r\n   */\r\n  @Method()\r\n  async setFocus() {\r\n    const firstMenuItem = this.getFirstItem();\r\n    firstMenuItem?.setFocus();\r\n  }\r\n\r\n  private getFirstItem() {\r\n    return this.elm.querySelector('goat-menu-item');\r\n  }\r\n\r\n  private focusNextItem(currentItem) {\r\n    let nextItem: any = currentItem.nextElementSibling;\r\n    do {\r\n      if (nextItem && nextItem.tagName === 'GOAT-MENU-ITEM' && !nextItem.disabled) {\r\n        nextItem.setFocus();\r\n        return;\r\n      }\r\n      if (!nextItem) {\r\n        nextItem = this.elm.querySelector('goat-menu-item');\r\n      } else {\r\n        nextItem = nextItem.nextElementSibling;\r\n      }\r\n    } while (nextItem !== currentItem);\r\n  }\r\n\r\n  private focusPreviousItem(currentItem) {\r\n    let previousItem: any = currentItem.previousElementSibling;\r\n    do {\r\n      if (previousItem && previousItem.tagName === 'GOAT-MENU-ITEM' && !previousItem.disabled) {\r\n        previousItem.setFocus();\r\n        return;\r\n      }\r\n      if (!previousItem) {\r\n        previousItem = this.elm.querySelector('goat-menu-item:last-child');\r\n      } else {\r\n        previousItem = previousItem.previousElementSibling;\r\n      }\r\n    } while (previousItem !== currentItem);\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.parseEmptyState();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"menu\">\r\n        <slot />\r\n        {this.renderEmptyState()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderEmptyState() {\r\n    if (this.empty) return <goat-empty-state class=\"empty-menu\" {...this.internalEmptyState} />;\r\n  }\r\n}\r\n","@import \"../../../../globalStyles/commons\";\r\n\r\n:host {\r\n  display: block;\r\n  --menu-item-padding: #{v(--spacing-04)};\r\n}\r\n\r\n\r\n.menu-item {\r\n  border: 1px solid transparent;\r\n  min-height: 2.5rem;\r\n\r\n  cursor: pointer;\r\n  @include font-style(text-md);\r\n  padding: 0 var(--menu-item-padding);\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: v(--spacing-02);\r\n  color: v(--text-secondary);\r\n\r\n  .item-section {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .slot-main {\r\n    display: block;\r\n    flex: 1;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  .slot-end {\r\n    color: v(--text-helper);\r\n  }\r\n\r\n}\r\n\r\n:host-context([size=\"sm\"]) {\r\n  .menu-item {\r\n    min-height: 2rem;\r\n  }\r\n}\r\n\r\n:host-context([size=\"md\"]) {\r\n  .menu-item {\r\n    min-height: 2.5rem;\r\n  }\r\n}\r\n\r\n:host-context([size=\"lg\"]) {\r\n  .menu-item {\r\n    min-height: 3rem;\r\n  }\r\n}\r\n\r\n.menu-item {\r\n  &:hover, &.has-focus:not(.active) {\r\n    background: v(--layer-hover-01);\r\n    color: v(--text-primary);\r\n\r\n    .slot-end {\r\n      color: v(--icon-01);\r\n    }\r\n  }\r\n\r\n  &.active, &.selected {\r\n    background: v(--selected-ui);\r\n  }\r\n}\r\n\r\n.menu-item.has-focus:not(.active) {\r\n  outline: none;\r\n  border: 1px solid v(--color-primary);\r\n}\r\n\r\n.menu-item.disabled {\r\n  cursor: not-allowed;\r\n  color: v(--text-disabled) !important;\r\n  background-color: v(--disabled-01) !important;\r\n\r\n  &:hover, &.has-focus:not(.active) {\r\n    color: v(--text-disabled) !important;\r\n    background-color: v(--disabled-01) !important;\r\n  }\r\n\r\n  &.active, &.selected {\r\n    color: v(--text-disabled) !important;\r\n    background-color: v(--disabled-01) !important;\r\n  }\r\n}\r\n\r\n\r\n.menu-item:not(.start-slot-has-content) {\r\n  .slot-start {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.menu-item:not(.end-slot-has-content) {\r\n  .slot-end {\r\n    display: none;\r\n  }\r\n}\r\n\r\n\r\n","import { Component, Element, Event, EventEmitter, h, Host, Listen, Method, Prop, State } from '@stencil/core';\r\nimport { getComponentIndex } from '../../../../utils/utils';\r\n\r\n\r\n@Component({\r\n  tag: 'goat-menu-item',\r\n  styleUrl: 'menu-item.scss',\r\n  shadow: true,\r\n})\r\nexport class GoatMenu {\r\n\r\n  gid: string = getComponentIndex();\r\n\r\n  private nativeElement?: HTMLElement;\r\n\r\n  private tabindex?: string | number = 1;\r\n\r\n\r\n  /**\r\n   * The menu item value.\r\n   */\r\n  @Prop({ mutable: true }) value?: string | number | null;\r\n\r\n  /**\r\n   * If true, the user cannot interact with the button. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n\r\n  /**\r\n   * Menu item selection state.\r\n   */\r\n  @Prop({ reflect: true }) selected: boolean = false;\r\n\r\n  /**\r\n   * Emitted when the menu item is clicked.\r\n   */\r\n  @Event({ eventName: 'goat:menu-item-click' }) goatMenuItemClick: EventEmitter;\r\n\r\n\r\n  @State() startSlotHasContent = false;\r\n  @State() endSlotHasContent = false;\r\n\r\n  /**\r\n   * Sets focus on the native `input` in `goat-input`. Use this method instead of the global\r\n   * `input.focus()`.\r\n   */\r\n  @Method()\r\n  async setFocus() {\r\n    if (this.nativeElement) {\r\n      this.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global\r\n   * `input.blur()`.\r\n   */\r\n  @Method()\r\n  async setBlur() {\r\n    if (this.nativeElement) {\r\n      this.nativeElement.blur();\r\n    }\r\n  }\r\n\r\n  @Listen('mouseup', { target: 'window' })\r\n  windowMouseUp() {\r\n    if (this.isActive)\r\n      this.isActive = false;\r\n  }\r\n\r\n  @Listen('keyup', { target: 'window' })\r\n  windowKeyUp(evt) {\r\n    if (this.isActive && (evt.key == ' '))\r\n      this.isActive = false;\r\n  }\r\n\r\n  @State() hasFocus = false;\r\n  @State() isActive = false;\r\n  @Element() elm!: HTMLElement;\r\n\r\n  private clickHandler = (event) => {\r\n    if (!this.disabled) {\r\n      this.setFocus();\r\n      this.goatMenuItemClick.emit({\r\n        value: this.value || this.elm.innerText,\r\n      });\r\n    } else {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      return;\r\n    }\r\n  };\r\n\r\n  private blurHandler = () => {\r\n    this.hasFocus = false;\r\n  };\r\n\r\n  private focusHandler = () => {\r\n    this.hasFocus = true;\r\n  };\r\n\r\n  private mouseDownHandler = () => {\r\n    this.isActive = true;\r\n  };\r\n\r\n  private keyDownHandler = (evt) => {\r\n    if (evt.key == ' ' || evt.key == 'Enter') {\r\n      evt.preventDefault();\r\n      this.isActive = true;\r\n      this.clickHandler(evt);\r\n    }\r\n  };\r\n\r\n  componentWillLoad() {\r\n    // If the ion-input has a tabindex attribute we get the value\r\n    // and pass it down to the native input, then remove it from the\r\n    // goat-input to avoid causing tabbing twice on the same element\r\n    if (this.elm.hasAttribute('tabindex')) {\r\n      const tabindex = this.elm.getAttribute('tabindex');\r\n      this.tabindex = tabindex !== null ? tabindex : undefined;\r\n      this.elm.removeAttribute('tabindex');\r\n    }\r\n    this.startSlotHasContent = !!this.elm.querySelector('[slot=\"start\"]');\r\n    this.endSlotHasContent = !!this.elm.querySelector('[slot=\"end\"]');\r\n  }\r\n\r\n  render = () => {\r\n    return <Host active={this.isActive} has-focus={this.hasFocus}>\r\n      <div\r\n        ref={(el) => this.nativeElement = el as HTMLElement}\r\n        class={{\r\n          'menu-item': true,\r\n          'selected': this.selected,\r\n          'active': this.isActive,\r\n          'disabled': this.disabled,\r\n          'has-focus': this.hasFocus,\r\n          'start-slot-has-content': this.startSlotHasContent,\r\n          'end-slot-has-content': this.endSlotHasContent,\r\n        }}\r\n        tabindex={this.tabindex}\r\n        onBlur={this.blurHandler}\r\n        onFocus={this.focusHandler}\r\n        onClick={this.clickHandler}\r\n        onMouseDown={this.mouseDownHandler}\r\n        onKeyDown={this.keyDownHandler}\r\n        aria-disabled={this.disabled}>\r\n\r\n        <div class='item-section slot-start' tabindex={0}>\r\n          <slot name='start' />\r\n        </div>\r\n\r\n        <div class='item-section slot-main' tabindex={0}>\r\n          <slot />\r\n        </div>\r\n\r\n        <div class='item-section slot-end' tabindex={0}>\r\n          <slot name='end' />\r\n        </div>\r\n\r\n      </div>\r\n    </Host>;\r\n  };\r\n\r\n\r\n}\r\n","@import \"../common-input\";\r\n\r\n\r\n.dropdown {\r\n  position: relative;\r\n\r\n  .dropdown-content {\r\n    z-index: v(--z-index-dropdown-content);\r\n    position: absolute;\r\n    width: max-content;\r\n    line-height: 0;\r\n    transform: scale(0);\r\n    transition: transform 0.1s ease-out 0s;\r\n    max-height: 300px;\r\n  }\r\n\r\n  .chevron-down {\r\n    transition: transform 0.1s ease-out 0s;\r\n    padding: 0 0.625rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .loader {\r\n    padding: 0 0.625rem;\r\n  }\r\n\r\n  &.is-open {\r\n    .dropdown-content {\r\n      transform: scale(1);\r\n    }\r\n    .chevron-down {\r\n      transform: rotate(180deg);\r\n    }\r\n  }\r\n\r\n  &.bottom-right .dropdown-content {\r\n    top: calc(100% + #{v(--spacing-02)});\r\n    left: 0;\r\n    transform-origin: top;\r\n  }\r\n\r\n  &.bottom-left .dropdown-content {\r\n    top: calc(100% + #{v(--spacing-02)});\r\n    right: 0;\r\n    transform-origin: top;\r\n  }\r\n\r\n  &.top-right .dropdown-content {\r\n    bottom: calc(100% + #{v(--spacing-02)});\r\n    left: 0;\r\n    transform-origin: bottom;\r\n  }\r\n\r\n  &.top-left .dropdown-content {\r\n    bottom: calc(100% + #{v(--spacing-02)});\r\n    right: 0;\r\n    transform-origin: bottom;\r\n  }\r\n\r\n  &.search-none.center .dropdown-content {\r\n    top: 0;\r\n    left: 0;\r\n    position: fixed;\r\n    transform-origin: center;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    max-height: 100%;\r\n    justify-content: center;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    pointer-events: none;\r\n    padding: 0 1rem;\r\n  }\r\n\r\n}\r\n\r\n.select {\r\n\r\n  .dropdown-content {\r\n    width: 100%;\r\n    min-width: 10rem;\r\n  }\r\n\r\n  .menu {\r\n    width: 100%;\r\n    --list-max-height: 20rem;\r\n  }\r\n\r\n  .display-value {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    cursor: pointer;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .display-value-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: v(--spacing-02);\r\n  }\r\n\r\n  .multi-select-values {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: v(--spacing-03);\r\n    padding-inline-start: v(--spacing-05);\r\n  }\r\n\r\n  .input-container:not(.has-value) {\r\n    .display-value {\r\n      color: v(--text-placeholder);\r\n    }\r\n  }\r\n\r\n  .start-search {\r\n    height: 10rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    gap: v(--spacing-03);\r\n  }\r\n\r\n  .text-secondary {\r\n    color: v(--text-secondary);\r\n  }\r\n\r\n}\r\n","import { Component, ComponentInterface, Element, Event, EventEmitter, h, Host, Listen, Method, Prop, State, Watch } from '@stencil/core';\r\nimport { debounceEvent, getComponentIndex, isOutOfViewport } from '../../../utils/utils';\r\nimport { Components } from '../../../components';\r\nimport GoatMenu = Components.GoatMenu;\r\n\r\n/**\r\n * @name Select\r\n * @description Allows the user to select one or more options using a dropdown.\r\n * @category Form Inputs\r\n * @tags input, form\r\n * @img /assets/img/select.png\r\n * @imgDark /assets/img/select-dark.png\r\n */\r\n@Component({\r\n  tag: 'goat-select',\r\n  styleUrl: 'select.scss',\r\n  shadow: true,\r\n})\r\nexport class Select implements ComponentInterface, InputComponentInterface {\r\n  gid: string = getComponentIndex();\r\n\r\n  /**\r\n   * The input field name.\r\n   */\r\n  @Prop() name: string = `goat-input-${this.gid}`;\r\n\r\n  /**\r\n   * The input field placeholder.\r\n   */\r\n  @Prop() placeholder: string;\r\n\r\n  /**\r\n   * The input field value.\r\n   */\r\n  @Prop({ mutable: true }) value?: string | number = '';\r\n\r\n  @Prop() multiple: boolean = false;\r\n\r\n  @Prop() hideDropdownIcon: boolean = false;\r\n\r\n  /**\r\n   * The select input size.\r\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\r\n   */\r\n  @Prop({ reflect: true }) size: 'sm' | 'md' | 'lg' = 'md';\r\n\r\n  @Prop({ reflect: true }) inline: boolean = false;\r\n\r\n  /**\r\n   * Search type\r\n   * Possible values are `\"none\"`, `\"initial\"`, `\"contains\"`, `\"managed\"`. Defaults to `\"none\"`.\r\n   */\r\n  @Prop() search: 'none' | 'initial' | 'contains' | 'managed' = 'none';\r\n\r\n  /**\r\n   * The input state.\r\n   * Possible values are: `\"success\"`, `\"error\"`, `\"warning\"`, 'default'. Defaults to `\"default\"`.\r\n   */\r\n  @Prop({ reflect: true }) state: 'success' | 'error' | 'warning' | 'default' = 'default';\r\n\r\n  /**\r\n   * If true, required icon is show. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) required: boolean = false;\r\n\r\n  /**\r\n   * If true, the user cannot interact with the button. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n\r\n  /**\r\n   * If true, the user cannot interact with the button. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) readonly: boolean = false;\r\n\r\n  @Prop() showLoader: boolean = false;\r\n\r\n  @Prop({ mutable: true }) isOpen: boolean = false;\r\n\r\n  @Prop({ reflect: true, mutable: true }) configAria: any = {};\r\n\r\n  /**\r\n   *  [{\r\n   *    label: 'Shivaji Varma',\r\n   *    value: 'shivaji-varma',\r\n   *    icon: 'person'\r\n   *  }]\r\n   */\r\n  @Prop() items: any = [];\r\n\r\n  @Prop() positions: string = 'bottom-right,top-right,bottom-left,top-left';\r\n\r\n  /**\r\n   * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\r\n   */\r\n  @Prop() clearable: boolean = false;\r\n\r\n  /**\r\n   * Set the amount of time, in milliseconds, to wait to trigger the `goatChange` event after each keystroke.\r\n   */\r\n  @Prop() debounce = 300;\r\n\r\n  /**\r\n   * Emitted when the value has changed.\r\n   */\r\n  @Event({ eventName: 'goat:change' }) goatChange: EventEmitter;\r\n\r\n  /**\r\n   * Emitted when a keyboard input occurred.\r\n   */\r\n  @Event({ eventName: 'goat:search' }) goatSearch: EventEmitter;\r\n\r\n  @Event({ eventName: 'goat:search-enter' }) goatSearchEnter: EventEmitter;\r\n\r\n  /**\r\n   * Sets focus on the native `input` in `ion-input`. Use this method instead of the global\r\n   * `input.focus()`.\r\n   */\r\n  @Method()\r\n  async setFocus(): Promise<void> {\r\n    if (!this.isOpen && this.displayElement) {\r\n      this.displayElement.focus();\r\n    } else if (this.isOpen && this.nativeElement) {\r\n      this.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global\r\n   * `input.blur()`.\r\n   */\r\n  @Method()\r\n  async setBlur() {\r\n    if (this.nativeElement) {\r\n      this.nativeElement.blur();\r\n    }\r\n  }\r\n\r\n  @Watch('debounce')\r\n  protected debounceChanged() {\r\n    this.goatSearch = debounceEvent(this.goatSearch, this.debounce);\r\n  }\r\n\r\n  @Listen('click', { target: 'window' })\r\n  windowClick(evt) {\r\n    const path = evt.path || evt.composedPath();\r\n    for (const elm of path) {\r\n      if (elm == this.elm) return;\r\n    }\r\n    this.isOpen = false;\r\n  }\r\n\r\n  @Listen('goat:menu-item-click')\r\n  menuItemClick(evt) {\r\n    this.selectHandler(evt.detail.value);\r\n  }\r\n\r\n  @Method()\r\n  async getComponentId() {\r\n    return this.gid;\r\n  }\r\n\r\n  @Element() elm!: HTMLElement;\r\n  private nativeElement?: HTMLInputElement;\r\n  private dropdownContentElm?: HTMLElement;\r\n  private menuElm?: GoatMenu;\r\n  private dropdownContentHeight: any;\r\n  private dropdownContentWidth: any;\r\n  @State() hasFocus = false;\r\n  @State() searchString: string = '';\r\n  @State() startSlotHasContent = false;\r\n  @State() endSlotHasContent = false;\r\n  @State() position: string;\r\n  private displayElement?: HTMLElement;\r\n\r\n  @Listen('goat:tag-dismiss')\r\n  tagDismissClick(evt) {\r\n    this.removeItem(evt.detail.value);\r\n  }\r\n\r\n  private getValues() {\r\n    if (this.value) return this.value.toString().split(',');\r\n    else return [];\r\n  }\r\n\r\n  private addItem(selectItemValue) {\r\n    let value = this.getValues();\r\n    if (!value.includes(selectItemValue)) {\r\n      if (!this.multiple) value = [];\r\n      value.push(selectItemValue);\r\n      this.value = value.join(',');\r\n      this.goatChange.emit({ value: this.value, newItem: this.getItemByValue(selectItemValue) });\r\n    }\r\n  }\r\n\r\n  private removeItem(selectItemValue) {\r\n    let value = this.getValues();\r\n    if (value.includes(selectItemValue)) {\r\n      value = value.filter(item => item !== selectItemValue);\r\n      this.value = value.join(',');\r\n      this.goatChange.emit({ value: this.value, removedItem: this.getItemByValue(selectItemValue) });\r\n    }\r\n  }\r\n\r\n  private selectHandler = selectItemValue => {\r\n    if (!this.disabled && !this.readonly) {\r\n      this.addItem(selectItemValue);\r\n    }\r\n    this.closeList();\r\n  };\r\n\r\n  private clearInput = () => {\r\n    if (!this.disabled && !this.readonly) {\r\n      this.removeItem(this.value);\r\n    }\r\n  };\r\n\r\n  private blurHandler = () => {\r\n    this.hasFocus = false;\r\n  };\r\n\r\n  private focusHandler = () => {\r\n    this.hasFocus = true;\r\n  };\r\n\r\n  private closeList = () => {\r\n    if (!this.disabled && !this.readonly && this.isOpen) {\r\n      this.isOpen = false;\r\n      setTimeout(() => this.setFocus(), 100);\r\n    }\r\n  };\r\n\r\n  private openList = () => {\r\n    if (!this.disabled && !this.readonly && !this.isOpen) {\r\n      this.isOpen = true;\r\n      if (this.search !== 'none') {\r\n        this.searchString = '';\r\n        setTimeout(() => {\r\n          const dropdownContent = this.dropdownContentElm;\r\n          this.dropdownContentHeight = dropdownContent.getBoundingClientRect().height;\r\n          this.dropdownContentWidth = dropdownContent.getBoundingClientRect().width;\r\n          this.fixPosition();\r\n          this.nativeElement.focus();\r\n        }, 100);\r\n      } else {\r\n        setTimeout(() => {\r\n          const dropdownContent = this.dropdownContentElm;\r\n          this.dropdownContentHeight = dropdownContent.getBoundingClientRect().height;\r\n          this.dropdownContentWidth = dropdownContent.getBoundingClientRect().width;\r\n          this.fixPosition();\r\n        }, 100);\r\n      }\r\n    }\r\n  };\r\n\r\n  private toggleList = evt => {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n    if (this.isOpen) this.closeList();\r\n    else this.openList();\r\n  };\r\n\r\n  private keyDownHandler = evt => {\r\n    if (evt.key === 'Enter') {\r\n      evt.preventDefault();\r\n      this.toggleList(evt);\r\n      this.goatSearchEnter.emit({\r\n        value: this.searchString,\r\n        currentItems: this.filterItems(),\r\n      });\r\n    } else if (evt.key === 'ArrowDown') {\r\n      if (this.isOpen) {\r\n        console.log('inside select');\r\n        evt.preventDefault();\r\n        this.menuElm.setFocus();\r\n      }\r\n    } else if (evt.key === 'ArrowUp') {\r\n      if (this.isOpen) {\r\n        evt.preventDefault();\r\n        this.menuElm.setFocus(); // focus on previous item\r\n      }\r\n    }\r\n  };\r\n\r\n  private onInput = (ev: Event) => {\r\n    const input = ev.target as HTMLInputElement;\r\n    this.searchString = input.value || '';\r\n    this.goatSearch.emit({\r\n      value: this.searchString,\r\n    });\r\n  };\r\n\r\n  private hasValue(): boolean {\r\n    return (this.value || '').toString().length > 0;\r\n  }\r\n\r\n  private getItemByValue(value) {\r\n    if (this.items) {\r\n      return this.items.find(item => {\r\n        return item.value == value;\r\n      });\r\n    }\r\n  }\r\n\r\n  private getDisplayValue() {\r\n    if (!this.multiple) {\r\n      if (this.items) {\r\n        const item = this.getItemByValue(this.value);\r\n        if (item) {\r\n          return (\r\n            <div class=\"display-value-container\">\r\n              {item.icon && <goat-icon name={item.icon} size=\"sm\" />}\r\n              {item.label}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      if (!this.disabled && !this.readonly) {\r\n        return this.placeholder;\r\n      } else {\r\n        return <span>&nbsp;</span>;\r\n      }\r\n    } else {\r\n      if (!this.value && !this.disabled && !this.readonly) {\r\n        return this.placeholder;\r\n      } else {\r\n        return <span>&nbsp;</span>;\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillLoad() {\r\n    if (this.positions) this.position = this.positions.split(',')[0];\r\n    this.elm.getAttributeNames().forEach((name: string) => {\r\n      if (name.includes('aria-')) {\r\n        this.configAria[name] = this.elm.getAttribute(name);\r\n        this.elm.removeAttribute(name);\r\n      }\r\n    });\r\n    this.startSlotHasContent = !!this.elm.querySelector('[slot=\"start\"]');\r\n    this.endSlotHasContent = !!this.elm.querySelector('[slot=\"end\"]');\r\n  }\r\n\r\n  @Listen('scroll', { target: 'window' })\r\n  fixPosition() {\r\n    const isMobile = false; //isMobile();\r\n    if (this.isOpen && this.dropdownContentHeight && this.dropdownContentWidth) {\r\n      if (isMobile) {\r\n        this.position = 'center';\r\n        return;\r\n      } else if (this.position === 'center') {\r\n        this.position = this.positions.split(',')[0];\r\n      }\r\n\r\n      const positions = this.positions.split(',');\r\n      for (let i = 0; i < positions.length; i++) {\r\n        const dropdownButtonRect: any = this.elm.getBoundingClientRect();\r\n        const dropdownContentRect: any = {};\r\n        if (positions[i] === 'bottom-right') {\r\n          dropdownContentRect.top = dropdownButtonRect.top + dropdownButtonRect.height;\r\n          dropdownContentRect.bottom = dropdownContentRect.top + this.dropdownContentHeight;\r\n          dropdownContentRect.left = dropdownButtonRect.left;\r\n          dropdownContentRect.right = dropdownButtonRect.left + this.dropdownContentWidth;\r\n        } else if (positions[i] === 'top-right') {\r\n          dropdownContentRect.top = dropdownButtonRect.top - this.dropdownContentHeight;\r\n          dropdownContentRect.bottom = dropdownButtonRect.top;\r\n          dropdownContentRect.left = dropdownButtonRect.left;\r\n          dropdownContentRect.right = dropdownButtonRect.left + this.dropdownContentWidth;\r\n        } else if (positions[i] === 'bottom-left') {\r\n          dropdownContentRect.top = dropdownButtonRect.top + dropdownButtonRect.height;\r\n          dropdownContentRect.bottom = dropdownContentRect.top + this.dropdownContentHeight;\r\n          dropdownContentRect.left = dropdownButtonRect.left - this.dropdownContentWidth;\r\n          dropdownContentRect.right = dropdownButtonRect.left;\r\n        } else if (positions[i] === 'top-left') {\r\n          dropdownContentRect.top = dropdownButtonRect.top - this.dropdownContentHeight;\r\n          dropdownContentRect.bottom = dropdownButtonRect.top;\r\n          dropdownContentRect.left = dropdownButtonRect.left - this.dropdownContentWidth;\r\n          dropdownContentRect.right = dropdownButtonRect.left;\r\n        }\r\n        const isOut = isOutOfViewport(dropdownContentRect);\r\n        if (!isOut.any) {\r\n          this.position = positions[i];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.debounceChanged();\r\n  }\r\n\r\n  renderMultiSelectValues() {\r\n    const values = this.getValues();\r\n    if (this.multiple && values.length) {\r\n      return (\r\n        <div class=\"multi-select-values\">\r\n          {values.map(value => {\r\n            const item = this.getItemByValue(value);\r\n            if (item) {\r\n              return (\r\n                <goat-tag filter class=\"multi-select-value\" value={item.value}>\r\n                  {item.label}\r\n                </goat-tag>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host has-value={this.hasValue()} has-focus={this.hasFocus} is-open={this.isOpen} position={this.position}>\r\n        <div\r\n          class={{\r\n            'dropdown': true,\r\n            'select': true,\r\n            [this.position]: true,\r\n            'is-open': this.isOpen,\r\n            [`search-${this.search}`]: true,\r\n          }}\r\n        >\r\n          <div\r\n            class={{\r\n              'input-container': true,\r\n              'has-focus': this.hasFocus,\r\n              'disabled': this.disabled,\r\n              'readonly': this.readonly,\r\n              'has-value': this.hasValue(),\r\n              'start-slot-has-content': this.startSlotHasContent,\r\n              'end-slot-has-content': this.endSlotHasContent,\r\n            }}\r\n          >\r\n            <div class=\"slot-container start\">\r\n              <slot name=\"start\" />\r\n            </div>\r\n\r\n            {this.renderMultiSelectValues()}\r\n\r\n            {(() => {\r\n              if (this.search !== 'none' && this.isOpen) {\r\n                return (\r\n                  <input\r\n                    class=\"input input-native\"\r\n                    ref={input => (this.nativeElement = input)}\r\n                    type=\"text\"\r\n                    name={this.name}\r\n                    value={this.searchString}\r\n                    placeholder={this.placeholder}\r\n                    onBlur={this.blurHandler}\r\n                    onFocus={this.focusHandler}\r\n                    onInput={this.onInput}\r\n                    onKeyDown={this.keyDownHandler}\r\n                    {...this.configAria}\r\n                  />\r\n                );\r\n              } else {\r\n                return (\r\n                  <div\r\n                    class=\"input display-value\"\r\n                    tabindex=\"0\"\r\n                    ref={input => (this.displayElement = input)}\r\n                    aria-disabled={this.disabled ? 'true' : null}\r\n                    onFocus={this.focusHandler}\r\n                    onBlur={this.blurHandler}\r\n                    onKeyDown={this.keyDownHandler}\r\n                    onClick={this.toggleList}\r\n                    {...this.configAria}\r\n                  >\r\n                    {this.getDisplayValue()}\r\n                  </div>\r\n                );\r\n              }\r\n            })()}\r\n\r\n            {this.clearable && !this.multiple && this.hasValue() && (\r\n              <goat-button class=\"clear input-action\" size={'full'} color={'secondary'} kind={'simple'} variant=\"ghost\" icon=\"close\" onClick={this.clearInput} />\r\n            )}\r\n\r\n            <div class=\"slot-container end\">\r\n              <slot name=\"end\" />\r\n            </div>\r\n\r\n            {this.getModeIcon()}\r\n          </div>\r\n          <div class=\"dropdown-content\" ref={elm => (this.dropdownContentElm = elm)}>\r\n            {this.isOpen && this.renderDropdownList()}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  private getModeIcon() {\r\n    if (this.showLoader) {\r\n      return <goat-spinner class=\"input-action loader\" />;\r\n    }\r\n    if (!this.disabled && !this.readonly && !this.hideDropdownIcon)\r\n      return <goat-icon tabindex={-1} class=\"chevron-down color-secondary\" size={this.size} name=\"chevron--down\" onClick={this.toggleList}></goat-icon>;\r\n  }\r\n\r\n  private renderDropdownList() {\r\n    if (this.search === 'managed' && !this.items.length) {\r\n      return (\r\n        <goat-menu class=\"menu\" ref={el => (this.menuElm = el)} size={this.size}>\r\n          <div class=\"start-search\">\r\n            <goat-icon name=\"search\" size={this.size} />\r\n            <goat-text class=\"text-secondary\">Start typing to perform search</goat-text>\r\n          </div>\r\n        </goat-menu>\r\n      );\r\n    }\r\n\r\n    if (this.items) {\r\n      const filteredItems = this.filterItems();\r\n      return (\r\n        <goat-menu class=\"menu\" empty={filteredItems.length == 0} ref={el => (this.menuElm = el)} size={this.size}>\r\n          {(() => {\r\n            return filteredItems.map(item => {\r\n              return (\r\n                <goat-menu-item value={item.value}>\r\n                  {item.icon && <goat-icon name={item.icon} slot=\"start\" size=\"sm\" />}\r\n                  {item.label || item.value}\r\n                </goat-menu-item>\r\n              );\r\n            });\r\n          })()}\r\n        </goat-menu>\r\n      );\r\n    }\r\n  }\r\n\r\n  private filterItems() {\r\n    if (this.search === 'managed') return this.items;\r\n    return this.items.filter(item => {\r\n      return !this.searchString || item.label.toLocaleLowerCase().includes(this.searchString.toLocaleLowerCase());\r\n    });\r\n  }\r\n}\r\n"],"mappings":"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"}