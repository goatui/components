{"version":3,"names":["dividerCss","Divider","componentWillLoad","this","slotHasContent","elm","hasChildNodes","render","h","Host","class","divider","vertical"],"sources":["src/components/layout/divider/divider.scss?tag=goat-divider&encapsulation=shadow","src/components/layout/divider/divider.tsx"],"sourcesContent":["@import \"../../../globalStyles/commons\";\r\n\r\n:host {\r\n  color: v(--text-secondary);\r\n  display: block;\r\n  --divider-color: #{v(--border-strong-01)};\r\n  --divider-padding: #{v(--spacing-05)};\r\n}\r\n\r\n.divider {\r\n  display: flex;\r\n  margin: 0;\r\n  @include font-style(body-compact-01);\r\n\r\n  &:not(.vertical) {\r\n    width: 100%;\r\n    padding: v(--divider-padding) 0;\r\n    align-items: center;\r\n    justify-content: center;\r\n    .line {\r\n      width: 100%;\r\n      border-top: 1px solid var(--divider-color);\r\n    }\r\n\r\n    &.has-content .slot-container {\r\n      padding: 0 v(--spacing-04);\r\n    }\r\n  }\r\n\r\n  &.vertical {\r\n    height: 100%;\r\n    padding: 0 v(--divider-padding);\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    .line {\r\n      height: 100%;\r\n      border-right: 1px solid var(--divider-color);\r\n    }\r\n\r\n    &.has-content .slot-container {\r\n      padding: v(--spacing-03) 0;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n:host(:not([vertical])) {\r\n  width: auto;\r\n}\r\n\r\n:host([vertical]) {\r\n  height: auto;\r\n}\r\n","import { Component, ComponentInterface, Element, h, Host, Prop, State } from '@stencil/core';\n\n/**\n * @name Divider\n * @description A divider can be used to segment content vertically or horizontally.\n * @category Layout\n * @example <goat-divider style=\"width: 12rem;\">or</goat-divider>\n */\n@Component({\n  tag: 'goat-divider',\n  styleUrl: 'divider.scss',\n  shadow: true,\n})\nexport class Divider implements ComponentInterface {\n\n\n  @Prop({reflect: true}) vertical: boolean = false;\n\n  @State() slotHasContent = false;\n  @Element() elm!: HTMLElement;\n\n  componentWillLoad() {\n    this.slotHasContent = this.elm.hasChildNodes();\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={{\n          'divider': true,\n          'vertical': this.vertical,\n          'has-content': this.slotHasContent,\n        }}>\n          <div class=\"line\"/>\n          <div class='slot-container'>\n            <slot />\n          </div>\n          <div class=\"line\" />\n        </div>\n      </Host>\n    );\n  }\n\n\n}\n"],"mappings":"yDAAA,MAAMA,EAAa,ywD,MCaNC,EAAO,M,uCAGyB,M,oBAEjB,K,CAG1B,iBAAAC,GACEC,KAAKC,eAAiBD,KAAKE,IAAIC,e,CAGjC,MAAAC,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAO,CACVC,QAAW,KACXC,SAAYT,KAAKS,SACjB,cAAeT,KAAKC,iBAEpBI,EAAA,OAAKE,MAAM,SACXF,EAAA,OAAKE,MAAM,kBACTF,EAAA,cAEFA,EAAA,OAAKE,MAAM,U"}