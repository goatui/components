{"version":3,"names":["addMonths","dirtyDate","dirtyAmount","requiredArgs","arguments","date","toDate","amount","toInteger","isNaN","Date","NaN","dayOfMonth","getDate","endOfDesiredMonth","getTime","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","calendarCss","Calendar","label","value","type","days","columnViewDateClick","evt","this","view","contextDate","detail","columnViewEventClick","goatCalendarEventClick","emit","event","monthViewEventClick","componentWillLoad","timezone","currentTime","toLocaleString","timeZone","componentWillRender","currentView","availableViews","find","previous","addDays","next","renderHeader","h","class","variant","size","kind","onClick","icon","format","positions","items","map","renderCalendarView","events","CalendarEvent","start","end","title","eventClickable","render","Host"],"sources":["node_modules/date-fns/esm/addMonths/index.js","src/components/calendar/calendar/calendar.scss?tag=goat-calendar&encapsulation=shadow","src/components/calendar/calendar/calendar.tsx"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  var dayOfMonth = date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","@import \"../../../globalStyles/commons\";\r\n\r\n:host {\r\n  display: block;\r\n  height: 100%;\r\n  min-height: 20em;\r\n  --calendar-border-color: #{v(--border-strong-01)};\r\n  --scale-color: #{v(--text-placeholder)}\r\n}\r\n\r\n.calendar {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .calendar-header {\r\n    .calendar-header-classic {\r\n      display: flex;\r\n      padding: 1rem;\r\n\r\n      .header-left {\r\n        display: flex;\r\n        gap: 1rem;\r\n        align-items: center;\r\n        flex: 1;\r\n\r\n        .title {\r\n          display: flex;\r\n          align-items: center;\r\n        }\r\n      }\r\n    }\r\n\r\n    goat-select {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n\r\n  .calendar-body {\r\n    flex: 1;\r\n    overflow: auto;\r\n\r\n    .view-container {\r\n      height: 100%;\r\n    }\r\n  }\r\n}\r\n","import { Component, ComponentInterface, Element, Event, EventEmitter, h, Host, Listen, Prop } from '@stencil/core';\r\nimport { addDays, addMonths, format } from 'date-fns';\r\nimport { CalendarEvent } from './CalendarEvent';\r\n\r\n/**\r\n * @name Calendar\r\n * @description The calendar component is used to display information in a daily, weekly, monthly, or category view.\r\n * @category Data Display\r\n * @tags calendar\r\n * @img /assets/img/calendar.png\r\n * @imgDark /assets/img/calendar-dark.png\r\n */\r\n@Component({\r\n  tag: 'goat-calendar',\r\n  styleUrl: 'calendar.scss',\r\n  shadow: true,\r\n})\r\nexport class Calendar implements ComponentInterface {\r\n  @Element() elm!: HTMLElement;\r\n\r\n  @Prop() events: any[] = [];\r\n\r\n  @Prop() availableViews: any = [\r\n    { label: 'Day', value: 'day', type: 'column', days: 1 },\r\n    {\r\n      label: 'Week',\r\n      value: 'week',\r\n      type: 'column',\r\n      days: 7,\r\n    },\r\n    {\r\n      label: 'Month',\r\n      value: 'month',\r\n      type: 'month',\r\n    },\r\n  ];\r\n\r\n  @Prop() view: string = 'week';\r\n\r\n  @Prop() eventClickable: boolean = true;\r\n\r\n  /**\r\n   * Show loader.\r\n   */\r\n  @Prop() showLoader: boolean = false;\r\n\r\n  @Prop() timezone;\r\n\r\n  currentTime;\r\n  currentView: any;\r\n\r\n  @Prop({ mutable: true }) contextDate;\r\n\r\n  @Event({ eventName: 'goat:calendar-event-click' }) goatCalendarEventClick: EventEmitter;\r\n\r\n  @Listen('goat:column-view-date-click')\r\n  columnViewDateClick(evt) {\r\n    this.view = 'day';\r\n    this.contextDate = evt.detail.date;\r\n  }\r\n\r\n  @Listen('goat:column-view-event-click')\r\n  columnViewEventClick(evt) {\r\n    this.goatCalendarEventClick.emit(evt.detail.event);\r\n  }\r\n\r\n  @Listen('goat:month-view-event-click')\r\n  monthViewEventClick(evt) {\r\n    this.goatCalendarEventClick.emit(evt.detail.event);\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    if (this.timezone) {\r\n      this.currentTime = new Date(new Date().toLocaleString('en', { timeZone: this.timezone }));\r\n    } else {\r\n      this.currentTime = new Date();\r\n    }\r\n    if (!this.contextDate) {\r\n      this.contextDate = this.currentTime;\r\n    }\r\n  }\r\n\r\n  async componentWillRender() {\r\n    this.currentView = this.availableViews.find(view => view.value === this.view);\r\n  }\r\n\r\n  previous() {\r\n    if (this.currentView.days) {\r\n      this.contextDate = addDays(this.contextDate, -1 * this.currentView.days);\r\n    } else if (this.currentView.type === 'month') {\r\n      this.contextDate = addMonths(this.contextDate, -1);\r\n    }\r\n  }\r\n\r\n  next() {\r\n    if (this.currentView.days) {\r\n      this.contextDate = addDays(this.contextDate, this.currentView.days);\r\n    } else if (this.currentView.type === 'month') {\r\n      this.contextDate = addMonths(this.contextDate, 1);\r\n    }\r\n  }\r\n\r\n  renderHeader() {\r\n    return (\r\n      <div class=\"calendar-header-classic\">\r\n        <div class=\"header-left\">\r\n          <goat-button variant=\"outline\" size=\"sm\" kind=\"simple\" class=\"color-secondary\" onClick={() => (this.contextDate = this.currentTime)}>\r\n            Today\r\n          </goat-button>\r\n          <goat-button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            class=\"color-secondary\"\r\n            icon=\"chevron--left\"\r\n            onClick={() => this.previous()}\r\n          ></goat-button>\r\n          <goat-button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            class=\"color-secondary\"\r\n            icon=\"chevron--right\"\r\n            onClick={() => this.next()}\r\n          ></goat-button>\r\n          <div class=\"title\">{format(this.contextDate, 'MMMM d, yyyy')}</div>\r\n        </div>\r\n        <div class=\"header-right\">\r\n          <goat-select\r\n            size=\"sm\"\r\n            positions={'bottom-left'}\r\n            value={this.view}\r\n            items={this.availableViews.map(view => {\r\n              return {\r\n                label: view.label,\r\n                value: view.value,\r\n              };\r\n            })}\r\n            onGoat:change={event => {\r\n              this.view = event.detail.value;\r\n            }}\r\n          ></goat-select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCalendarView() {\r\n    if (!this.currentView) return 'Invalid view';\r\n\r\n    const events = this.events.map(event => {\r\n      return new CalendarEvent(event.start, event.end, event.title, event);\r\n    });\r\n\r\n    if (this.currentView.type === 'column') {\r\n      return (\r\n        <goat-calendar-column-view\r\n          view={this.currentView.value}\r\n          days={this.currentView.days}\r\n          currentTime={this.currentTime}\r\n          contextDate={this.contextDate}\r\n          eventClickable={this.eventClickable}\r\n          events={events}\r\n        />\r\n      );\r\n    } else if (this.currentView.type === 'month') {\r\n      return <goat-calendar-month-view currentTime={this.currentTime} contextDate={this.contextDate} eventClickable={this.eventClickable} events={events} />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"calendar\">\r\n          <div class=\"calendar-header\">{this.renderHeader()}</div>\r\n          <div class=\"calendar-body\">\r\n            <div class=\"view-container\">{this.renderCalendarView()}</div>\r\n            <div class=\"contextual-panel\"></div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}