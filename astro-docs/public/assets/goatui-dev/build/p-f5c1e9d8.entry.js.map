{"version":3,"names":["treeViewCss","TreeView","this","subscribers","parseEmptyState","emptyState","internalEmptyState","JSON","parse","treeNodeClick","evt","selectedNode","detail","id","forEach","cb","value","getSelectedNode","subscribeToSelect","push","handleKeyDown","path","composedPath","menuItem","elm","tagName","key","preventDefault","focusNextItem","focusPreviousItem","setFocus","firstMenuItem","getFirstItem","querySelector","currentItem","nextItem","nextElementSibling","disabled","previousItem","previousElementSibling","componentWillLoad","render","empty","h","class","renderEmptyState","Object","assign"],"sources":["src/components/navigation/tree-view/tree-view/tree-view.scss?tag=goat-tree-view&encapsulation=shadow","src/components/navigation/tree-view/tree-view/tree-view.tsx"],"sourcesContent":["@import \"../../../../globalStyles/commons\";\n\n:host {\n  display: block;\n}\n\n\n.treeview {\n  background-color: v(--layer-01);\n}\n","import { Component, ComponentInterface, Element, h, Listen, Method, Prop, State, Watch } from '@stencil/core';\n\n/**\n * @name TreeView\n * @description A tree view is a hierarchical structure that provides nested levels of navigation.\n * @category Navigation\n * @img /assets/img/tree-view.png\n * @imgDark /assets/img/tree-view-dark.png\n */\n@Component({\n  tag: 'goat-tree-view',\n  styleUrl: 'tree-view.scss',\n  shadow: true,\n})\nexport class TreeView implements ComponentInterface {\n  @Element() elm!: HTMLElement;\n\n  @Prop({ mutable: true }) empty: boolean = false;\n\n  @Prop({ mutable: true }) emptyState: string = `{\n    \"headline\": \"No items\",\n    \"description\": \"There are no items to display\"\n  }`;\n\n  @State()\n  internalEmptyState: any;\n\n  @Prop({mutable: true})\n  selectedNode: string;\n\n  @Watch('emptyState')\n  parseEmptyState() {\n    if (typeof this.emptyState === 'string') {\n      this.internalEmptyState = JSON.parse(this.emptyState);\n    } else {\n      this.internalEmptyState = this.emptyState;\n    }\n  }\n\n  @Listen('goat:tree-node-click')\n  treeNodeClick(evt) {\n    this.selectedNode = evt.detail.id;\n    this.subscribers.forEach(cb => cb(evt.detail.value));\n  }\n\n  subscribers: any[] = [];\n\n  @Method()\n  async getSelectedNode() {\n    return this.selectedNode;\n  }\n\n  @Method()\n  async subscribeToSelect(cb) {\n    this.subscribers.push(cb);\n  }\n\n  @Listen('keydown', { target: 'window' })\n  handleKeyDown(evt: KeyboardEvent) {\n    const path = evt.composedPath();\n    let menuItem = null;\n    for (const elm of path) {\n      // @ts-ignore\n      if (elm.tagName === 'GOAT-TREE-NODE') {\n        menuItem = elm;\n      }\n      if (elm !== this.elm) continue;\n      if (evt.key === 'ArrowDown') {\n        evt.preventDefault();\n        this.focusNextItem(menuItem);\n      } else if (evt.key === 'ArrowUp') {\n        evt.preventDefault();\n        this.focusPreviousItem(menuItem);\n      }\n    }\n  }\n\n  /**\n   * Sets focus on first menu item. Use this method instead of the global\n   * `element.focus()`.\n   */\n  @Method()\n  async setFocus() {\n    const firstMenuItem = this.getFirstItem();\n    firstMenuItem?.setFocus();\n  }\n\n  private getFirstItem() {\n    return this.elm.querySelector('goat-menu-item');\n  }\n\n  private focusNextItem(currentItem) {\n    let nextItem: any = currentItem.nextElementSibling;\n    do {\n      if (nextItem && nextItem.tagName === 'GOAT-TREE-NODE' && !nextItem.disabled) {\n        nextItem.setFocus();\n        return;\n      }\n      if (!nextItem) {\n        nextItem = this.elm.querySelector('goat-tree-node:first-child');\n      } else {\n        nextItem = nextItem.nextElementSibling;\n      }\n    } while (nextItem !== currentItem);\n  }\n\n  private focusPreviousItem(currentItem) {\n    let previousItem: any = currentItem.previousElementSibling;\n    do {\n      if (previousItem && previousItem.tagName === 'GOAT-TREE-NODE' && !previousItem.disabled) {\n        previousItem.setFocus();\n        return;\n      }\n      if (!previousItem) {\n        previousItem = this.elm.querySelector('goat-tree-node:last-child');\n      } else {\n        previousItem = previousItem.previousElementSibling;\n      }\n    } while (previousItem !== currentItem);\n  }\n\n  componentWillLoad() {\n    this.parseEmptyState();\n  }\n\n  render() {\n    if (this.empty) {\n      return <div class=\"treeview\">{this.renderEmptyState()}</div>;\n    } else\n      return (\n        <div class=\"treeview\">\n          <slot></slot>\n        </div>\n      );\n  }\n\n  private renderEmptyState() {\n    if (this.empty) return <goat-empty-state class=\"empty-menu\" {...this.internalEmptyState} />;\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAc,8tB,MCcPC,EAAQ,M,yBA+BnBC,KAAAC,YAAqB,G,WA5BqB,M,gBAEI,0F,8DAY9C,eAAAC,GACE,UAAWF,KAAKG,aAAe,SAAU,CACvCH,KAAKI,mBAAqBC,KAAKC,MAAMN,KAAKG,W,KACrC,CACLH,KAAKI,mBAAqBJ,KAAKG,U,EAKnC,aAAAI,CAAcC,GACZR,KAAKS,aAAeD,EAAIE,OAAOC,GAC/BX,KAAKC,YAAYW,SAAQC,GAAMA,EAAGL,EAAIE,OAAOI,Q,CAM/C,qBAAMC,GACJ,OAAOf,KAAKS,Y,CAId,uBAAMO,CAAkBH,GACtBb,KAAKC,YAAYgB,KAAKJ,E,CAIxB,aAAAK,CAAcV,GACZ,MAAMW,EAAOX,EAAIY,eACjB,IAAIC,EAAW,KACf,IAAK,MAAMC,KAAOH,EAAM,CAEtB,GAAIG,EAAIC,UAAY,iBAAkB,CACpCF,EAAWC,C,CAEb,GAAIA,IAAQtB,KAAKsB,IAAK,SACtB,GAAId,EAAIgB,MAAQ,YAAa,CAC3BhB,EAAIiB,iBACJzB,KAAK0B,cAAcL,E,MACd,GAAIb,EAAIgB,MAAQ,UAAW,CAChChB,EAAIiB,iBACJzB,KAAK2B,kBAAkBN,E,GAU7B,cAAMO,GACJ,MAAMC,EAAgB7B,KAAK8B,eAC3BD,IAAa,MAAbA,SAAa,SAAbA,EAAeD,U,CAGT,YAAAE,GACN,OAAO9B,KAAKsB,IAAIS,cAAc,iB,CAGxB,aAAAL,CAAcM,GACpB,IAAIC,EAAgBD,EAAYE,mBAChC,EAAG,CACD,GAAID,GAAYA,EAASV,UAAY,mBAAqBU,EAASE,SAAU,CAC3EF,EAASL,WACT,M,CAEF,IAAKK,EAAU,CACbA,EAAWjC,KAAKsB,IAAIS,cAAc,6B,KAC7B,CACLE,EAAWA,EAASC,kB,QAEfD,IAAaD,E,CAGhB,iBAAAL,CAAkBK,GACxB,IAAII,EAAoBJ,EAAYK,uBACpC,EAAG,CACD,GAAID,GAAgBA,EAAab,UAAY,mBAAqBa,EAAaD,SAAU,CACvFC,EAAaR,WACb,M,CAEF,IAAKQ,EAAc,CACjBA,EAAepC,KAAKsB,IAAIS,cAAc,4B,KACjC,CACLK,EAAeA,EAAaC,sB,QAEvBD,IAAiBJ,E,CAG5B,iBAAAM,GACEtC,KAAKE,iB,CAGP,MAAAqC,GACE,GAAIvC,KAAKwC,MAAO,CACd,OAAOC,EAAA,OAAKC,MAAM,YAAY1C,KAAK2C,mB,MAEnC,OACEF,EAAA,OAAKC,MAAM,YACTD,EAAA,a,CAKA,gBAAAE,GACN,GAAI3C,KAAKwC,MAAO,OAAOC,EAAA,mBAAAG,OAAAC,OAAA,CAAkBH,MAAM,cAAiB1C,KAAKI,oB"}