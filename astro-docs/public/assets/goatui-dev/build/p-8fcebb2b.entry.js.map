{"version":3,"names":["dropdownCss","Dropdown","this","openList","disabled","isOpen","setTimeout","dropdownContent","elm","querySelector","dropdownContentHeight","getBoundingClientRect","height","dropdownContentWidth","width","fixPosition","toggleList","closeList","blurHandler","hasFocus","focusHandler","keyDownHandler","evt","$menuElm","getMenuElement","key","preventDefault","setFocus","windowClick","path","composedPath","firstChild","children","listenMenuItemClick","isEventTriggerByElement","listenClick","listenKeyDown","componentWillLoad","positions","position","split","isMobile","i","length","dropdownButtonRect","dropdownContentRect","top","bottom","left","right","isOut","isOutOfViewport","any","renderItems","items","h","class","size","map","item","value","tabindex","icon","name","slot","label","hint","render","Host","dropdown","onKeyDown","onBlur","onFocus","onClick"],"sources":["src/components/navigation/menu/dropdown/dropdown.scss?tag=goat-dropdown&encapsulation=shadow","src/components/navigation/menu/dropdown/dropdown.tsx"],"sourcesContent":["@import \"../../../../globalStyles/commons\";\r\n\r\n:host {\r\n  display: inline-block;\r\n  height: var(--dropdown-height, auto);\r\n}\r\n\r\n.dropdown {\r\n  position: relative;\r\n  height: var(--dropdown-height, auto);\r\n\r\n  .dropdown-button {\r\n    border: none;\r\n    background: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    .slot-container {\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  .dropdown-content {\r\n    z-index: v(--z-index-dropdown-content);\r\n    position: absolute;\r\n    width: max-content;\r\n    line-height: 0;\r\n    transform: scale(0);\r\n    transition: transform 0.1s ease-out 0s;\r\n  }\r\n\r\n\r\n  &.is-open {\r\n    .dropdown-content {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n\r\n  $menuSpace: v(--spacing-02);\r\n\r\n  &.bottom-right .dropdown-content {\r\n    top: calc(100% + $menuSpace);\r\n    left: 0;\r\n    transform-origin: top;\r\n  }\r\n\r\n  &.bottom-left .dropdown-content {\r\n    top: calc(100% + $menuSpace);\r\n    right: 0;\r\n    transform-origin: top;\r\n  }\r\n\r\n  &.top-right .dropdown-content {\r\n    bottom: calc(100% + $menuSpace);\r\n    left: 0;\r\n    transform-origin: bottom;\r\n  }\r\n\r\n  &.top-left .dropdown-content {\r\n    bottom: calc(100% + $menuSpace);\r\n    right: 0;\r\n    transform-origin: bottom;\r\n  }\r\n\r\n  &.center .dropdown-content {\r\n    top: 0;\r\n    left: 0;\r\n    position: fixed;\r\n    transform-origin: center;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    justify-content: center;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    pointer-events: none;\r\n  }\r\n\r\n  .items {\r\n    min-width: 12rem;\r\n  }\r\n\r\n}\r\n\r\n:host([has-focus]) {\r\n  .dropdown {\r\n    outline: none;\r\n  }\r\n}\r\n","import { Component, ComponentInterface, Element, h, Host, Listen, Method, Prop, State } from '@stencil/core';\r\nimport { isEventTriggerByElement, isMobile, isOutOfViewport } from '../../../../utils/utils';\r\n\r\n/**\r\n * @name Dropdown\r\n * @description Enables native inputs to be used within a Form field.\r\n * @category Navigation\r\n * @img /assets/img/dropdown.png\r\n * @imgDark /assets/img/dropdown-dark.png\r\n */\r\n@Component({\r\n  tag: 'goat-dropdown',\r\n  styleUrl: 'dropdown.scss',\r\n  shadow: true,\r\n})\r\nexport class Dropdown implements ComponentInterface {\r\n  /**\r\n   * The button size.\r\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\r\n   */\r\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\r\n\r\n  @Prop({ mutable: true }) isOpen: boolean = false;\r\n\r\n  /**\r\n   * If true, the user cannot interact with the button. Defaults to `false`.\r\n   */\r\n  @Prop() disabled: boolean = false;\r\n\r\n  @Prop() positions: string = 'bottom-right,top-right,bottom-left,top-left';\r\n\r\n  @Prop() items: any[] = null;\r\n\r\n  @Listen('click', { target: 'window' })\r\n  windowClick(evt) {\r\n    const path = evt.path || evt.composedPath();\r\n    for (const elm of path) {\r\n      if (elm == this.elm) return;\r\n    }\r\n    this.isOpen = false;\r\n  }\r\n\r\n  @Method()\r\n  async setFocus(elm?: HTMLElement) {\r\n    const firstChild = elm.children[0] || this.elm.children[0];\r\n    // @ts-ignore\r\n    if (firstChild.setFocus)\r\n      // @ts-ignore\r\n      firstChild.setFocus();\r\n  }\r\n\r\n  @Listen('goat:menu-item-click', { target: 'window' })\r\n  listenMenuItemClick(evt) {\r\n    if (isEventTriggerByElement(evt, this.elm)) {\r\n      this.closeList();\r\n    }\r\n    this.isOpen = false;\r\n  }\r\n\r\n  @Listen('goat:click', { target: 'window' })\r\n  listenClick(evt) {\r\n    if (isEventTriggerByElement(evt, this.elm)) {\r\n      this.closeList();\r\n    }\r\n    this.isOpen = false;\r\n  }\r\n\r\n  @Listen('keydown', { target: 'window' })\r\n  listenKeyDown(evt: KeyboardEvent) {\r\n    if (isEventTriggerByElement(evt, this.elm)) {\r\n      if (evt.key === 'Escape') {\r\n        this.closeList();\r\n      }\r\n    }\r\n  }\r\n\r\n  @Element() elm!: HTMLElement;\r\n  @State() hasFocus = false;\r\n  @State() position: string;\r\n  private dropdownContentHeight: any;\r\n  private dropdownContentWidth: any;\r\n\r\n  private closeList() {\r\n    if (!this.disabled && this.isOpen) {\r\n      this.isOpen = false;\r\n      setTimeout(() => {\r\n        this.setFocus(this.elm);\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  private openList = () => {\r\n    if (!this.disabled && !this.isOpen) {\r\n      this.isOpen = true;\r\n      setTimeout(() => {\r\n        const dropdownContent = this.elm.querySelector('[slot=\"dropdown-content\"]');\r\n        this.dropdownContentHeight = dropdownContent.getBoundingClientRect().height;\r\n        this.dropdownContentWidth = dropdownContent.getBoundingClientRect().width;\r\n        this.fixPosition();\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  componentWillLoad() {\r\n    if (this.positions) this.position = this.positions.split(',')[0];\r\n  }\r\n\r\n  @Listen('scroll', { target: 'window' })\r\n  fixPosition() {\r\n    if (this.isOpen && this.dropdownContentHeight && this.dropdownContentWidth) {\r\n      if (isMobile()) {\r\n        this.position = 'center';\r\n        return;\r\n      }\r\n\r\n      const positions = this.positions.split(',');\r\n      for (let i = 0; i < positions.length; i++) {\r\n        const dropdownButtonRect: any = this.elm.getBoundingClientRect();\r\n        const dropdownContentRect: any = {};\r\n        if (positions[i] === 'bottom-right') {\r\n          dropdownContentRect.top = dropdownButtonRect.top + dropdownButtonRect.height;\r\n          dropdownContentRect.bottom = dropdownContentRect.top + this.dropdownContentHeight;\r\n          dropdownContentRect.left = dropdownButtonRect.left;\r\n          dropdownContentRect.right = dropdownButtonRect.left + this.dropdownContentWidth;\r\n        } else if (positions[i] === 'top-right') {\r\n          dropdownContentRect.top = dropdownButtonRect.top - this.dropdownContentHeight;\r\n          dropdownContentRect.bottom = dropdownButtonRect.top;\r\n          dropdownContentRect.left = dropdownButtonRect.left;\r\n          dropdownContentRect.right = dropdownButtonRect.left + this.dropdownContentWidth;\r\n        } else if (positions[i] === 'bottom-left') {\r\n          dropdownContentRect.top = dropdownButtonRect.top + dropdownButtonRect.height;\r\n          dropdownContentRect.bottom = dropdownContentRect.top + this.dropdownContentHeight;\r\n          dropdownContentRect.left = dropdownButtonRect.left - this.dropdownContentWidth;\r\n          dropdownContentRect.right = dropdownButtonRect.left;\r\n        } else if (positions[i] === 'top-left') {\r\n          dropdownContentRect.top = dropdownButtonRect.top - this.dropdownContentHeight;\r\n          dropdownContentRect.bottom = dropdownButtonRect.top;\r\n          dropdownContentRect.left = dropdownButtonRect.left - this.dropdownContentWidth;\r\n          dropdownContentRect.right = dropdownButtonRect.left;\r\n        }\r\n        const isOut = isOutOfViewport(dropdownContentRect);\r\n        if (!isOut.any) {\r\n          this.position = positions[i];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private toggleList = () => {\r\n    if (this.isOpen) this.closeList();\r\n    else this.openList();\r\n  };\r\n\r\n  private blurHandler = () => {\r\n    this.hasFocus = false;\r\n  };\r\n\r\n  private focusHandler = () => {\r\n    this.hasFocus = true;\r\n  };\r\n\r\n  private keyDownHandler = evt => {\r\n    const $menuElm = this.getMenuElement();\r\n    if (evt.key === 'Enter') {\r\n      evt.preventDefault();\r\n      this.toggleList();\r\n    } else if (evt.key === 'ArrowDown') {\r\n      if (this.isOpen) {\r\n        evt.preventDefault();\r\n        $menuElm?.setFocus();\r\n      }\r\n    } else if (evt.key === 'ArrowUp') {\r\n      if (this.isOpen) {\r\n        evt.preventDefault();\r\n        $menuElm?.setFocus(); // focus on previous item\r\n      }\r\n    }\r\n  };\r\n\r\n  private getMenuElement() {\r\n    return this.elm.querySelector('goat-menu');\r\n  }\r\n\r\n  renderItems() {\r\n    if (this.items)\r\n      return (\r\n        <goat-menu class=\"items\" size={this.size}>\r\n          {this.items.map(item => {\r\n            return (\r\n              <goat-menu-item value={item.value} tabindex={this.isOpen ? '0' : '-1'}>\r\n                {item.icon && <goat-icon name={item.icon} slot=\"start\" size=\"sm\" />}\r\n                {item.label}\r\n                {item.hint && <span slot=\"end\">{item.hint}</span>}\r\n              </goat-menu-item>\r\n            );\r\n          })}\r\n        </goat-menu>\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host has-focus={this.hasFocus} is-open={this.isOpen}>\r\n        <div\r\n          class={{\r\n            'dropdown': true,\r\n            [this.position]: true,\r\n            'is-open': this.isOpen,\r\n          }}\r\n        >\r\n          <button\r\n            class=\"dropdown-button\"\r\n            onKeyDown={this.keyDownHandler}\r\n            tabindex=\"-1\"\r\n            onBlur={this.blurHandler}\r\n            onFocus={this.focusHandler}\r\n            disabled={this.disabled}\r\n            onClick={() => {\r\n              this.toggleList();\r\n            }}\r\n          >\r\n            <div class=\"slot-container\">\r\n              <slot />\r\n            </div>\r\n          </button>\r\n          <div class=\"dropdown-content\">{this.items ? this.renderItems() : <slot name=\"dropdown-content\" />}</div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}