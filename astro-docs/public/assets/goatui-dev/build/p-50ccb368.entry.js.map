{"version":3,"names":["VERSION","async","loadMonaco","window","paths","vs","loadScript","codeEditorCss","CodeEditor","this","gid","getComponentIndex","isDarkMode","debounceChanged","goatChange","debounceEvent","debounce","disabledWatcher","newValue","editorMonacoInstance","updateOptions","readOnly","readonly","themeWatcher","readonlyWatcher","disabled","languageWatcher","editor","setModelLanguage","getModel","setTheme","getTheme","valueWatcher","getValue","value","setValue","getComponentId","setFocus","focus","setBlur","blur","componentWillLoad","observeThemeChange","componentDidLoad","setTimeout","initializeMonaco","theme","isInViewport","element","rect","getBoundingClientRect","top","left","bottom","right","elm","editorElement","innerHTML","create","lineNumbers","language","onDidChangeModelContent","emit","onDidFocusEditorText","hasFocus","onDidBlurEditorText","render","h","Host","class","component","ref","el"],"sources":["src/3d-party/monaco/index.tsx","src/components/data-entry/code-editor/code-editor.scss?tag=goat-code-editor&encapsulation=shadow","src/components/data-entry/code-editor/code-editor.tsx"],"sourcesContent":["import { loadScript } from '../../utils/utils';\r\n\r\nconst VERSION = '0.40.0';\r\nexport default async function loadMonaco() {\r\n\r\n  // @ts-ignore\r\n  window['require'] = { paths: { 'vs': `https://cdn.jsdelivr.net/npm/monaco-editor@${VERSION}/min/vs` } };\r\n  await loadScript(`https://cdn.jsdelivr.net/npm/monaco-editor@${VERSION}/min/vs/loader.js`);\r\n  await loadScript(`https://cdn.jsdelivr.net/npm/monaco-editor@${VERSION}/min/vs/editor/editor.main.nls.js`);\r\n  await loadScript(`https://cdn.jsdelivr.net/npm/monaco-editor@${VERSION}/min/vs/editor/editor.main.js`);\r\n}\r\n","@import \"../../../3d-party/monaco/editor.main\";\r\n@import \"../../../globalStyles/commons\";\r\n\r\n:host {\r\n  display: block;\r\n  height: 100%;\r\n}\r\n\r\n.code-editor-loader {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: v(--spacing-02);\r\n}\r\n\r\n.code-editor-component {\r\n  height: 100%;\r\n  position: relative;\r\n\r\n  .editor {\r\n    height: 100%;\r\n    min-height: 2rem;\r\n    border: 1px solid v(--border-strong-01);\r\n    border-radius: v(--border-radius);\r\n    overflow: hidden;\r\n  }\r\n\r\n}\r\n\r\n:host(.no-border) {\r\n  .code-editor-component {\r\n    .editor {\r\n      border: none;\r\n      border-radius: 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * States\r\n */\r\n.code-editor-component.has-focus .editor {\r\n  @include focus-ring;\r\n  border-color: transparent;\r\n}\r\n\r\n@each $state in [success, warning, error] {\r\n  :host-context(.input-state-#{$state}) {\r\n    .code-editor-component {\r\n      .editor {\r\n        border-color: v(--support-#{$state});\r\n      }\r\n\r\n      &.has-focus {\r\n        .editor {\r\n          @include focus-ring(v(--support-#{$state}));\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, ComponentInterface, Element, Event, EventEmitter, h, Host, Method, Prop, State, Watch } from '@stencil/core';\r\nimport { debounceEvent, getComponentIndex } from '../../../utils/utils';\r\nimport { isDarkMode, observeThemeChange } from '../../../utils/utils';\r\nimport loadMonaco from '../../../3d-party/monaco';\r\n\r\n/**\r\n * @name Code Editor\r\n * @description A browser based code editor.\r\n * @category Form Inputs\r\n * @tags input, form\r\n * @img /assets/img/code-editor.png\r\n * @imgDark /assets/img/code-editor-dark.png\r\n */\r\n@Component({\r\n  tag: 'goat-code-editor',\r\n  styleUrl: 'code-editor.scss',\r\n  shadow: true,\r\n})\r\nexport class CodeEditor implements ComponentInterface, InputComponentInterface {\r\n  gid: string = getComponentIndex();\r\n\r\n  /**\r\n   * The input field name.\r\n   */\r\n  @Prop() name: string = `goat-input-${this.gid}`;\r\n\r\n  /**\r\n   * The input field value.\r\n   */\r\n  @Prop({ mutable: true }) value: string;\r\n\r\n  /**\r\n   * If true, required icon is show. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) required: boolean = false;\r\n\r\n  /**\r\n   * If true, the user cannot interact with the button. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n\r\n  @Prop({ reflect: true }) readonly: boolean = false;\r\n\r\n  @Prop() language: 'javascript' | 'json' | 'html' = 'javascript';\r\n\r\n  @Prop() lineNumbers: 'off' | 'on' = 'on';\r\n\r\n  @State() isDarkMode: boolean = isDarkMode();\r\n\r\n  /**\r\n   * Emitted when the value has changed.\r\n   */\r\n  @Event({ eventName: 'goat:change' }) goatChange: EventEmitter;\r\n\r\n  /**\r\n   * Set the amount of time, in milliseconds, to wait to trigger the `onChange` event after each keystroke.\r\n   */\r\n  @Prop() debounce = 250;\r\n\r\n  @State() hasFocus = false;\r\n\r\n  @Watch('debounce')\r\n  protected debounceChanged() {\r\n    this.goatChange = debounceEvent(this.goatChange, this.debounce);\r\n  }\r\n\r\n  @Watch('disabled')\r\n  disabledWatcher(newValue: boolean) {\r\n    this.editorMonacoInstance.updateOptions({ readOnly: newValue || this.readonly });\r\n    this.themeWatcher();\r\n  }\r\n\r\n  @Watch('readonly')\r\n  readonlyWatcher(newValue: string) {\r\n    this.editorMonacoInstance.updateOptions({ readOnly: newValue || this.disabled });\r\n    this.themeWatcher();\r\n  }\r\n\r\n  @Watch('language')\r\n  languageWatcher(newValue: string) {\r\n    window['monaco'].editor.setModelLanguage(this.editorMonacoInstance.getModel(), newValue);\r\n  }\r\n\r\n  themeWatcher() {\r\n    window['monaco'].editor.setTheme(this.getTheme());\r\n  }\r\n\r\n  @Watch('value')\r\n  valueWatcher(newValue: string) {\r\n    if (this.editorMonacoInstance && this.editorMonacoInstance.getValue() !== this.value) {\r\n      this.editorMonacoInstance.setValue(newValue);\r\n    }\r\n  }\r\n\r\n  @Method()\r\n  async getComponentId() {\r\n    return this.gid;\r\n  }\r\n\r\n  /**\r\n   * Sets focus on the native `input` in `goat-input`. Use this method instead of the global\r\n   * `input.focus()`.\r\n   */\r\n  @Method()\r\n  async setFocus() {\r\n    if (this.editorMonacoInstance) {\r\n      this.editorMonacoInstance.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global\r\n   * `input.blur()`.\r\n   */\r\n  @Method()\r\n  async setBlur() {\r\n    if (this.editorMonacoInstance) {\r\n      this.editorMonacoInstance.blur();\r\n    }\r\n  }\r\n\r\n  @Element() elm!: HTMLElement;\r\n  private editorElement?: HTMLElement;\r\n  @State() editorMonacoInstance: any;\r\n\r\n  async componentWillLoad() {\r\n    if (!window['monaco']) {\r\n      await loadMonaco();\r\n    }\r\n    this.debounceChanged();\r\n    observeThemeChange(() => {\r\n      this.isDarkMode = isDarkMode();\r\n      this.themeWatcher();\r\n    });\r\n  }\r\n\r\n  componentDidLoad() {\r\n    setTimeout(() => this.initializeMonaco(), 1000);\r\n  }\r\n\r\n  getTheme() {\r\n    let theme: string;\r\n    if (!this.isDarkMode) {\r\n      if (this.disabled || this.readonly) theme = 'hc-black';\r\n      else theme = 'vs';\r\n    } else {\r\n      if (this.disabled || this.readonly) theme = 'hc-light';\r\n      else theme = 'vs-dark';\r\n    }\r\n    return theme;\r\n  }\r\n\r\n  isInViewport(element: HTMLElement) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.top !== 0 && rect.left !== 0 && rect.bottom !== 0 && rect.right !== 0;\r\n  }\r\n\r\n  private initializeMonaco() {\r\n    //monaco.languages.typescript.javascriptDefaults.addExtraLib(this.extraLibs);\r\n    if (!this.editorMonacoInstance && !this.isInViewport(this.elm)) {\r\n      setTimeout(() => this.initializeMonaco(), 1000);\r\n      return;\r\n    }\r\n    this.editorElement.innerHTML = '';\r\n\r\n    this.editorMonacoInstance = window['monaco'].editor.create(this.editorElement, {\r\n      value: this.value,\r\n      lineNumbers: this.lineNumbers,\r\n      language: this.language,\r\n      theme: this.getTheme(),\r\n      readOnly: this.disabled || this.readonly,\r\n    });\r\n\r\n    this.editorMonacoInstance.onDidChangeModelContent(() => {\r\n      this.value = this.editorMonacoInstance.getValue();\r\n      this.goatChange.emit({ value: this.value });\r\n    });\r\n\r\n    this.editorMonacoInstance.onDidFocusEditorText(() => {\r\n      this.hasFocus = true;\r\n    });\r\n\r\n    this.editorMonacoInstance.onDidBlurEditorText(() => {\r\n      this.hasFocus = false;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div\r\n          class={{\r\n            'component': true,\r\n            'code-editor-component': true,\r\n            [this.getTheme()]: true,\r\n            'disabled': this.disabled,\r\n            'readonly': this.readonly,\r\n            'has-focus': this.hasFocus,\r\n          }}\r\n        >\r\n          <div class=\"editor\" ref={el => (this.editorElement = el)} />\r\n          {!this.editorMonacoInstance && (\r\n            <div class=\"code-editor-loader\">\r\n              <goat-spinner />\r\n              Loading editor...\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}