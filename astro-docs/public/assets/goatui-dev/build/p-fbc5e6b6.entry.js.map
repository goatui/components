{"version":3,"names":["notificationCss","Notification","isDarkMode","componentWillLoad","observeThemeChange","this","render","h","Host","state","hidden","class","notification","lowContrast","role","renderStateIcon","name","renderAction","renderCloseButton","actionable","dismissible","variant","kind","evt","goatDismiss","emit","size","toastCss","Toast","toast","message"],"sources":["src/components/feedback/notification/notification.scss?tag=goat-notification&encapsulation=shadow","src/components/feedback/notification/notification.tsx","src/components/feedback/toast/toast.scss?tag=goat-toast&encapsulation=shadow","src/components/feedback/toast/toast.tsx"],"sourcesContent":["@import \"../../../globalStyles/commons\";\r\n\r\n\r\n:host {\r\n  display: block;\r\n  margin-bottom: v(--spacing-03);\r\n}\r\n\r\n.notification {\r\n  border-style: solid;\r\n  border-color: transparent;\r\n  display: flex;\r\n\r\n  .state-icon {\r\n    padding: v(--spacing-05) v(--spacing-04);\r\n    line-height: 0;\r\n  }\r\n\r\n  .content {\r\n    flex: 1;\r\n    padding: v(--spacing-04) 0;\r\n\r\n    .title {\r\n      @include font-style(text-md);\r\n      font-weight: v(--font-weight-bold);\r\n    }\r\n\r\n    .subtitle {\r\n      @include font-style(text-sm);\r\n    }\r\n  }\r\n\r\n\r\n  .close-button {\r\n    margin: 0;\r\n    padding: v(--spacing-03);\r\n  }\r\n}\r\n\r\n:host(:not([dismissible])) .content {\r\n  padding-inline-end: v(--spacing-04);\r\n}\r\n\r\n\r\n@mixin alertState($color, $dark) {\r\n  @if $dark {\r\n    .alert {\r\n      background-color: v(--color-#{$color});\r\n\r\n      .content {\r\n        .message {\r\n          color: white;\r\n          --link-color: white;\r\n        }\r\n\r\n        .description {\r\n          color: v(--text-primary);\r\n        }\r\n      }\r\n    }\r\n  } @else {\r\n    .alert {\r\n      background-color: v(--color-#{$color}-20);\r\n\r\n      .content {\r\n        .message {\r\n          color: v(--color-#{$color}-70);\r\n          --link-color: #{v(--color-#{$color}-70)};\r\n        }\r\n\r\n        .description {\r\n          color: v(--text-secondary);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@each $state in [info, success, warning, error] {\r\n  :host([state=\"#{$state}\"]) {\r\n    .notification {\r\n      border-left-color: v(--support-#{$state}-inverse);\r\n      color: v(--text-inverse);\r\n      background: v(--background-inverse);\r\n      border-width: 0 0 0 3px;\r\n\r\n      .close-button {\r\n        --button-padding: .5rem;\r\n        .icon {\r\n          --icon-color: #{v(--text-inverse)};\r\n        }\r\n\r\n      }\r\n      .state-icon {\r\n        color: v(--support-#{$state}-inverse);\r\n      }\r\n\r\n      &.low-contrast {\r\n        color: var(--color-neutral-100);\r\n        border-color: v(--support-#{$state});\r\n        background: v(--color-#{$state}-10);\r\n        border-width: 1px 1px 1px 3px;\r\n        .close-button {\r\n          .icon {\r\n            --icon-color: #{v(--color-neutral-100)};\r\n          }\r\n        }\r\n        .state-icon {\r\n          color: v(--support-#{$state});\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, ComponentInterface, Element, Event, EventEmitter, h, Host, Prop, State } from '@stencil/core';\r\nimport { isDarkMode, observeThemeChange } from '../../../utils/utils';\r\n\r\n\r\n/**\r\n * @name Notification\r\n * @description Notifications are messages that communicate information to the user.\r\n * @category Feedback\r\n * @tags notification\r\n * @example <goat-notification state=\"success\">\r\n *               <div slot='title'>Successful saved the record</div>\r\n *             </goat-notification>\r\n */\r\n@Component({\r\n  tag: 'goat-notification',\r\n  styleUrl: 'notification.scss',\r\n  shadow: true,\r\n})\r\nexport class Notification implements ComponentInterface {\r\n\r\n  @Element() elm!: HTMLElement;\r\n\r\n  @Prop() state: 'success' | 'error' | 'info' | 'warning' = 'info';\r\n\r\n  @Prop() lowContrast: boolean = false;\r\n\r\n  @Prop() dismissible: boolean = false;\r\n\r\n  @Prop() actionable: boolean = true;\r\n  @Prop() actionName: string = 'dismiss';\r\n  @Prop() actionLabel: string = 'Dismiss';\r\n\r\n  @Event({ eventName: 'goat:dismiss' }) goatDismiss: EventEmitter;\r\n\r\n  @State() hidden: boolean = false;\r\n\r\n  @State() isDarkMode: boolean = isDarkMode();\r\n\r\n  componentWillLoad() {\r\n    observeThemeChange(() => {\r\n      this.isDarkMode = isDarkMode();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host state={this.state} hidden={this.hidden}>\r\n        <div class={{ 'notification': true, 'low-contrast': this.lowContrast }} role='alert'>\r\n          <div class='state-icon'>\r\n            {this.renderStateIcon()}\r\n          </div>\r\n          <div class='content'>\r\n            <div class='title'>\r\n              <slot name='title' />\r\n              <slot />\r\n            </div>\r\n            <div class='subtitle'>\r\n              <slot name='subtitle' />\r\n            </div>\r\n          </div>\r\n          {this.renderAction()}\r\n          {this.renderCloseButton()}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  renderAction() {\r\n    if (this.actionable)\r\n      return (\r\n        <div class='action'>\r\n          <slot name='action' />\r\n        </div>\r\n      );\r\n  }\r\n\r\n  renderCloseButton() {\r\n\r\n    if (this.dismissible) {\r\n      return (\r\n        <div class=\"close-button-container\">\r\n          <goat-button class='close-button color-secondary'\r\n                       aria-label='Close alert'\r\n                       variant='link'\r\n                       kind='simple'\r\n                       onGoat:click={(evt) => {\r\n                         this.hidden = true;\r\n                         this.goatDismiss.emit(evt);\r\n                       }}>\r\n\r\n            <goat-icon class='icon' size=\"1.5rem\" name='close' />\r\n          </goat-button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderStateIcon() {\r\n    if (this.state === 'success') {\r\n      return <goat-icon class='inherit' name='checkmark--filled' />;\r\n    } else if (this.state === 'error') {\r\n      return <goat-icon class='inherit' name='error--filled' />;\r\n    } else if (this.state === 'info') {\r\n      return <goat-icon class='inherit' name='information--filled' />;\r\n    } else if (this.state === 'warning') {\r\n      return <goat-icon class='inherit' name='warning--filled' />;\r\n    }\r\n  }\r\n\r\n}\r\n","@import \"../../../globalStyles/commons\";\n\n\n:host {\n  display: inline-block;\n  margin-bottom: v(--spacing-03);\n}\n\n.toast {\n  border-radius: v(--border-radius);\n  display: flex;\n  align-items: center;\n  gap: v(--spacing-02);\n  padding: v(--spacing-02) v(--spacing-04);\n  border: 1px solid v(--layer-accent-01);\n  box-shadow: v(--shadow-lg);\n  background-color: v(--background);\n\n  .content {\n    flex: 1;\n    color: v(--text-primary);\n\n    .message {\n      @include font-style(text-md);\n    }\n\n    .description {\n      @include font-style(text-sm);\n    }\n  }\n\n  .state-icon {\n    line-height: 0;\n  }\n}\n\n\n@each $state in [info, success, warning, error] {\n  :host([state=\"#{$state}\"]) {\n    .state-icon {\n      color: v(--color-#{$state});\n    }\n  }\n  :host-context([data-theme=\"dark\"]):host([state=\"#{$state}\"]) {\n\n  }\n}\n","import { Component, ComponentInterface, Element, h, Host, Prop, State } from '@stencil/core';\nimport { isDarkMode, observeThemeChange } from '../../../utils/utils';\n\n/**\n * @name Toast\n * @description Toasts are lightweight notifications.\n * @category Feedback\n * @example <goat-toast state=\"success\" message=\"Successful saved the record\"></goat-toast>\n */\n@Component({\n  tag: 'goat-toast',\n  styleUrl: 'toast.scss',\n  shadow: true,\n})\nexport class Toast implements ComponentInterface {\n  @Element() elm!: HTMLElement;\n\n  /**\n   * Message to display in the toast.\n   */\n  @Prop() message: string = '';\n\n  /**\n   * Toast state.\n   * Possible values are `\"success\"`, `\"error\"`, `\"info\"`, `\"warning\"`. Defaults to `\"info\"`.\n   */\n  @Prop({ reflect: true }) state: 'success' | 'error' | 'info' | 'warning' = 'info';\n\n  @State() isDarkMode: boolean = isDarkMode();\n\n  componentWillLoad() {\n    observeThemeChange(() => {\n      this.isDarkMode = isDarkMode();\n    });\n  }\n\n  renderStateIcon() {\n    if (this.state === 'success') {\n      return <goat-icon class='inherit' name='checkmark--filled' />;\n    } else if (this.state === 'error') {\n      return <goat-icon class='inherit' name='error--filled' />;\n    } else if (this.state === 'info') {\n      return <goat-icon class='inherit' name='information--filled' />;\n    } else if (this.state === 'warning') {\n      return <goat-icon class='inherit' name='warning--filled' />;\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={{ 'toast': true, 'dark-mode': this.isDarkMode }} role=\"alert\">\n          <div class=\"state-icon\">{this.renderStateIcon()}</div>\n          <div class=\"content\">\n            <div class=\"message\">{this.message}</div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"2GAAA,MAAMA,EAAkB,+/J,MCkBXC,EAAY,M,8EAImC,O,iBAE3B,M,iBAEA,M,gBAED,K,gBACD,U,iBACC,U,YAIH,M,gBAEIC,G,CAE/B,iBAAAC,GACEC,GAAmB,KACjBC,KAAKH,WAAaA,GAAY,G,CAIlC,MAAAI,GACE,OACEC,EAACC,EAAI,CAACC,MAAOJ,KAAKI,MAAOC,OAAQL,KAAKK,QACpCH,EAAA,OAAKI,MAAO,CAAEC,aAAgB,KAAM,eAAgBP,KAAKQ,aAAeC,KAAK,SAC3EP,EAAA,OAAKI,MAAM,cACRN,KAAKU,mBAERR,EAAA,OAAKI,MAAM,WACTJ,EAAA,OAAKI,MAAM,SACTJ,EAAA,QAAMS,KAAK,UACXT,EAAA,cAEFA,EAAA,OAAKI,MAAM,YACTJ,EAAA,QAAMS,KAAK,eAGdX,KAAKY,eACLZ,KAAKa,qB,CAMd,YAAAD,GACE,GAAIZ,KAAKc,WACP,OACEZ,EAAA,OAAKI,MAAM,UACTJ,EAAA,QAAMS,KAAK,W,CAKnB,iBAAAE,GAEE,GAAIb,KAAKe,YAAa,CACpB,OACEb,EAAA,OAAKI,MAAM,0BACTJ,EAAA,eAAaI,MAAM,+BAA8B,aACzB,cACXU,QAAQ,OACRC,KAAK,SAAQ,eACEC,IACblB,KAAKK,OAAS,KACdL,KAAKmB,YAAYC,KAAKF,EAAI,GAGvChB,EAAA,aAAWI,MAAM,OAAOe,KAAK,SAASV,KAAK,W,EAOrD,eAAAD,GACE,GAAIV,KAAKI,QAAU,UAAW,CAC5B,OAAOF,EAAA,aAAWI,MAAM,UAAUK,KAAK,qB,MAClC,GAAIX,KAAKI,QAAU,QAAS,CACjC,OAAOF,EAAA,aAAWI,MAAM,UAAUK,KAAK,iB,MAClC,GAAIX,KAAKI,QAAU,OAAQ,CAChC,OAAOF,EAAA,aAAWI,MAAM,UAAUK,KAAK,uB,MAClC,GAAIX,KAAKI,QAAU,UAAW,CACnC,OAAOF,EAAA,aAAWI,MAAM,UAAUK,KAAK,mB,uCCzG7C,MAAMW,EAAW,k7D,MCcJC,EAAK,M,sCAMU,G,WAMiD,O,gBAE5C1B,G,CAE/B,iBAAAC,GACEC,GAAmB,KACjBC,KAAKH,WAAaA,GAAY,G,CAIlC,eAAAa,GACE,GAAIV,KAAKI,QAAU,UAAW,CAC5B,OAAOF,EAAA,aAAWI,MAAM,UAAUK,KAAK,qB,MAClC,GAAIX,KAAKI,QAAU,QAAS,CACjC,OAAOF,EAAA,aAAWI,MAAM,UAAUK,KAAK,iB,MAClC,GAAIX,KAAKI,QAAU,OAAQ,CAChC,OAAOF,EAAA,aAAWI,MAAM,UAAUK,KAAK,uB,MAClC,GAAIX,KAAKI,QAAU,UAAW,CACnC,OAAOF,EAAA,aAAWI,MAAM,UAAUK,KAAK,mB,EAI3C,MAAAV,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKI,MAAO,CAAEkB,MAAS,KAAM,YAAaxB,KAAKH,YAAcY,KAAK,SAChEP,EAAA,OAAKI,MAAM,cAAcN,KAAKU,mBAC9BR,EAAA,OAAKI,MAAM,WACTJ,EAAA,OAAKI,MAAM,WAAWN,KAAKyB,W"}