{"version":3,"names":["async","loadGoogleCharts","loadScript","chartDoughnutCss","ChartDoughnut","componentWillLoad","window","initializeChart","that","this","google","charts","load","packages","setOnLoadCallback","drawChart","data","visualization","arrayToDataTable","options","pieHole","slices","color","legend","chart","PieChart","nativeElement","draw","componentDidLoad","setTimeout","render","h","Host","class","ref","el"],"sources":["src/3d-party/google-charts/index.tsx","src/components/charts/chart-doughnut/chart-doughnut.scss?tag=goat-chart-doughnut&encapsulation=shadow","src/components/charts/chart-doughnut/chart-doughnut.tsx"],"sourcesContent":["import { loadScript } from '../../utils/utils';\r\n\r\nexport default async function loadGoogleCharts() {\r\n  await loadScript(`https://www.gstatic.com/charts/loader.js`);\r\n}\r\n","@import \"../../../globalStyles/commons\";\r\n\r\n:host {\r\n  display: inline-block;\r\n}\r\n\r\n.chart-container {\r\n  width: 100px;\r\n  height: 100px;\r\n}\r\n","import { Component, ComponentInterface, h, Host } from '@stencil/core';\r\nimport loadGoogleCharts from '../../../3d-party/google-charts';\r\n\r\n/**\r\n * @name ChartDoughnut\r\n * @description Use tags to label, categorize, or organize items using keywords that describe them.\r\n * @category Up coming\r\n * @tag controls\r\n * @example <goat-chart-doughnut class=\"color-red\"></goat-chart-doughnut>\r\n */\r\n@Component({\r\n  tag: 'goat-chart-doughnut',\r\n  styleUrl: 'chart-doughnut.scss',\r\n  shadow: true,\r\n})\r\nexport class ChartDoughnut implements ComponentInterface {\r\n  private nativeElement?: HTMLElement;\r\n\r\n  async componentWillLoad() {\r\n    if (!window['google']) {\r\n      await loadGoogleCharts();\r\n    }\r\n  }\r\n\r\n  initializeChart() {\r\n    const that = this;\r\n    const google = window['google'];\r\n    google.charts.load('current', { packages: ['corechart'] });\r\n    google.charts.setOnLoadCallback(drawChart);\r\n    function drawChart() {\r\n      var data = google.visualization.arrayToDataTable([\r\n        ['Task', 'Hours per Day'],\r\n        ['Work', 11],\r\n        ['Eat', 2],\r\n        ['Commute', 2],\r\n        ['Watch TV', 2],\r\n        ['Sleep', 7],\r\n      ]);\r\n\r\n      var options = {\r\n        pieHole: 0.4,\r\n        slices: {\r\n          0: { color: '#4589ff' },\r\n          1: { color: 'transparent' },\r\n        },\r\n        legend: 'none',\r\n      };\r\n\r\n      var chart = new google.visualization.PieChart(that.nativeElement);\r\n      chart.draw(data, options);\r\n    }\r\n  }\r\n\r\n  componentDidLoad() {\r\n    setTimeout(() => this.initializeChart(), 1000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={'chart-container'} ref={el => (this.nativeElement = el as HTMLElement)}></div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"sFAEeA,eAAeC,UACtBC,EAAW,2CACnB,CCJA,MAAMC,EAAmB,2tB,MCeZC,EAAa,M,yBAGxB,uBAAMC,GACJ,IAAKC,OAAO,UAAW,OACfL,G,EAIV,eAAAM,GACE,MAAMC,EAAOC,KACb,MAAMC,EAASJ,OAAO,UACtBI,EAAOC,OAAOC,KAAK,UAAW,CAAEC,SAAU,CAAC,eAC3CH,EAAOC,OAAOG,kBAAkBC,GAChC,SAASA,IACP,IAAIC,EAAON,EAAOO,cAAcC,iBAAiB,CAC/C,CAAC,OAAQ,iBACT,CAAC,OAAQ,IACT,CAAC,MAAO,GACR,CAAC,UAAW,GACZ,CAAC,WAAY,GACb,CAAC,QAAS,KAGZ,IAAIC,EAAU,CACZC,QAAS,GACTC,OAAQ,CACN,EAAG,CAAEC,MAAO,WACZ,EAAG,CAAEA,MAAO,gBAEdC,OAAQ,QAGV,IAAIC,EAAQ,IAAId,EAAOO,cAAcQ,SAASjB,EAAKkB,eACnDF,EAAMG,KAAKX,EAAMG,E,EAIrB,gBAAAS,GACEC,YAAW,IAAMpB,KAAKF,mBAAmB,I,CAG3C,MAAAuB,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAO,kBAAmBC,IAAKC,GAAO1B,KAAKiB,cAAgBS,I"}