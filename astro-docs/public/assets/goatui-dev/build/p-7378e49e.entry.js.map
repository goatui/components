{"version":3,"names":["numberCss","Number","this","gid","getComponentIndex","inputHandler","ev","input","target","oldValue","value","undefined","JSON","parse","goatInput","emit","goatChange","keyDownHandler","key","clearable","clearInput","blurHandler","hasFocus","goatBlur","focusHandler","goatFocus","evt","nativeElement","getComponentId","setFocus","focus","setBlur","blur","debounceChanged","debounceEvent","debounce","componentWillLoad","elm","hasAttribute","tabindex","getAttribute","removeAttribute","getAttributeNames","forEach","name","includes","configAria","startSlotHasContent","querySelector","endSlotHasContent","connectedCallback","getValue","toString","hasValue","length","decrease","increment","render","h","Host","class","disabled","Object","assign","ref","type","placeholder","autocomplete","readonly","required","onKeyDown","onInput","onBlur","onFocus","variant","icon","onClick","hideActions","color","kind","size"],"sources":["src/components/data-entry/input/number/number.scss?tag=goat-number&encapsulation=shadow","src/components/data-entry/input/number/number.tsx"],"sourcesContent":["@import \"../../common-input\";\r\n\r\n","import { Component, ComponentInterface, Element, Event, EventEmitter, h, Host, Method, Prop, State, Watch } from '@stencil/core';\nimport { debounceEvent, getComponentIndex } from '../../../../utils/utils';\n\n/**\n * @name Number\n * @description Enables native inputs to be used within a Form field.\n * @category Form Inputs\n * @tags input, form\n * @example <goat-number value=\"100\"></goat-input>\n */\n@Component({\n  tag: 'goat-number',\n  styleUrl: 'number.scss',\n  shadow: true,\n})\nexport class Number implements ComponentInterface, InputComponentInterface {\n  gid: string = getComponentIndex();\n\n  /**\n   * The input field name.\n   */\n  @Prop() name: string = `goat-input-${this.gid}`;\n\n  /**\n   * The input field placeholder.\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * The input field value.\n   */\n  @Prop({ mutable: true }) value?: number | null = null;\n\n  /**\n   * The input field size.\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\n   */\n  @Prop({ reflect: true }) size: 'sm' | 'md' | 'lg' = 'md';\n\n  /**\n   * The input state.\n   * Possible values are: `\"success\"`, `\"error\"`, `\"warning\"`, 'default'. Defaults to `\"default\"`.\n   */\n  @Prop({ reflect: true }) state: 'success' | 'error' | 'warning' | 'default' = 'default';\n\n  /**\n   * If true, the user cannot interact with the button. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  @Prop({ reflect: true }) hideActions: boolean = false;\n\n  /**\n   * If true, the user read the value cannot modify it. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) readonly: boolean = false;\n\n  /**\n   * If true, required icon is show. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  /**\n   * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\n   */\n  @Prop() clearable = false;\n\n  /**\n   * Set the amount of time, in milliseconds, to wait to trigger the `goatChange` event after each keystroke.\n   */\n  @Prop() debounce = 300;\n\n  /**\n   * Indicates whether the value of the control can be automatically completed by the browser.\n   */\n  @Prop() autocomplete: 'on' | 'off' = 'off';\n\n  @Prop({ reflect: true, mutable: true }) configAria: any = {};\n\n  /**\n   * Emitted when a keyboard input occurred.\n   */\n  @Event({ eventName: 'goat:input' }) goatInput: EventEmitter;\n\n  /**\n   * Emitted when the value has changed.\n   */\n  @Event({ eventName: 'goat:change' }) goatChange: EventEmitter;\n\n  /**\n   * Emitted when the input loses focus.\n   */\n  @Event({ eventName: 'goat:blur' }) goatBlur: EventEmitter;\n\n  /**\n   * Emitted when the input has focus.\n   */\n  @Event({ eventName: 'goat:focus' }) goatFocus: EventEmitter;\n\n  @Element() elm!: HTMLElement;\n  private nativeElement?: HTMLInputElement;\n  private tabindex?: string | number;\n\n  @State() startSlotHasContent = false;\n  @State() endSlotHasContent = false;\n  @State() hasFocus = false;\n  @State() passwordVisible = false;\n\n  private inputHandler = (ev: Event) => {\n    const input = ev.target as HTMLInputElement | null;\n    const oldValue = this.value;\n    if (input) {\n      if (input.value === '' || input.value === undefined) {\n        this.value = null;\n      } else {\n        this.value = JSON.parse(input.value);\n      }\n    }\n    this.goatInput.emit(ev as KeyboardEvent);\n    if (oldValue !== this.value) {\n      this.goatChange.emit(ev as KeyboardEvent);\n    }\n  };\n\n  private keyDownHandler = (ev: KeyboardEvent) => {\n    if (ev.key === 'Escape' && this.clearable) {\n      this.clearInput(ev);\n    }\n  };\n\n  private blurHandler = (ev: FocusEvent) => {\n    this.hasFocus = false;\n    this.goatBlur.emit(ev);\n  };\n\n  private focusHandler = (ev: FocusEvent) => {\n    this.hasFocus = true;\n    this.goatFocus.emit(ev);\n  };\n\n  private clearInput = (evt: Event) => {\n    this.nativeElement.value = null;\n    this.inputHandler(evt);\n  };\n\n  @Method()\n  async getComponentId() {\n    return this.gid;\n  }\n\n  /**\n   * Sets focus on the native `input` in `goat-input`. Use this method instead of the global\n   * `input.focus()`.\n   */\n  @Method()\n  async setFocus() {\n    if (this.nativeElement) {\n      this.nativeElement.focus();\n      this.hasFocus = true;\n    }\n  }\n\n  /**\n   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global\n   * `input.blur()`.\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeElement) {\n      this.nativeElement.blur();\n      this.hasFocus = false;\n    }\n  }\n\n  @Watch('debounce')\n  protected debounceChanged() {\n    this.goatChange = debounceEvent(this.goatChange, this.debounce);\n  }\n\n  componentWillLoad() {\n    // If the ion-input has a tabindex attribute we get the value\n    // and pass it down to the native input, then remove it from the\n    // goat-input to avoid causing tabbing twice on the same element\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex !== null ? tabindex : undefined;\n      this.elm.removeAttribute('tabindex');\n    }\n    this.elm.getAttributeNames().forEach((name: string) => {\n      if (name.includes('aria-')) {\n        this.configAria[name] = this.elm.getAttribute(name);\n        this.elm.removeAttribute(name);\n      }\n    });\n    this.startSlotHasContent = !!this.elm.querySelector('[slot=\"start\"]');\n    this.endSlotHasContent = !!this.elm.querySelector('[slot=\"end\"]');\n  }\n\n  connectedCallback() {\n    this.debounceChanged();\n  }\n\n  private getValue(): string {\n    return (this.value || '').toString();\n  }\n\n  private hasValue(): boolean {\n    return this.getValue().length > 0;\n  }\n\n  private decrease(ev) {\n    if (this.value === undefined || this.value === null) this.value = 0;\n    if (typeof this.value === 'number') {\n      this.value = (this.value || 0) - 1;\n      this.goatChange.emit(ev);\n    }\n  }\n\n  private increment(ev) {\n    if (this.value === undefined || this.value === null) this.value = 0;\n    if (typeof this.value === 'number') {\n      this.value = (this.value || 0) + 1;\n      this.goatChange.emit(ev);\n    }\n  }\n\n  render() {\n    return (\n      <Host has-focus={this.hasFocus} has-value={this.hasValue()}>\n        <div\n          class={{\n            'input-container': true,\n            'disabled': this.disabled,\n            'has-focus': this.hasFocus,\n            'start-slot-has-content': this.startSlotHasContent,\n            'end-slot-has-content': this.endSlotHasContent,\n          }}\n        >\n          <div class=\"slot-container start\">\n            <slot name=\"start\" />\n          </div>\n\n          <input\n            class=\"input input-native\"\n            name={this.name}\n            ref={input => (this.nativeElement = input)}\n            type=\"number\"\n            placeholder={this.placeholder}\n            autocomplete={this.autocomplete}\n            value={this.value}\n            tabindex={this.tabindex}\n            readonly={this.readonly}\n            required={this.required}\n            onKeyDown={this.keyDownHandler}\n            onInput={this.inputHandler}\n            onBlur={this.blurHandler}\n            onFocus={this.focusHandler}\n            disabled={this.disabled}\n            {...this.configAria}\n          />\n\n          {this.clearable && this.hasValue() && <goat-button class=\"clear input-action color-secondary\" variant=\"ghost\" icon=\"close\" onClick={this.clearInput} />}\n\n          {!this.readonly && !this.disabled && !this.hideActions && (\n            <goat-button\n              class=\"input-action\"\n              color={'secondary'}\n              kind={'simple'}\n              icon=\"subtract\"\n              variant=\"ghost\"\n              size=\"full\"\n              onGoat:click={evt => {\n                this.decrease(evt);\n              }}\n            ></goat-button>\n          )}\n\n          {!this.readonly && !this.disabled && !this.hideActions && (\n            <goat-button\n              class=\"input-action\"\n              color={'secondary'}\n              kind={'simple'}\n              icon=\"add\"\n              variant=\"ghost\"\n              size=\"full\"\n              onGoat:click={evt => {\n                this.increment(evt);\n              }}\n            ></goat-button>\n          )}\n\n          <div class=\"slot-container end\">\n            <slot name=\"end\" />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}