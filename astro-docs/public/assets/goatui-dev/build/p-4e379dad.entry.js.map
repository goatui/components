{"version":3,"names":["datePickerCss","DatePicker","this","gid","getComponentIndex","inputHandler","ev","input","target","oldValue","value","goatInput","emit","goatChange","keyDownHandler","key","clearInput","blurHandler","hasFocus","goatBlur","focusHandler","goatFocus","evt","nativeElement","hasValue","getValue","length","toString","debounceChanged","debounceEvent","debounce","getComponentId","setFocus","focus","setBlur","blur","connectedCallback","componentWillLoad","elm","hasAttribute","tabindex","getAttribute","undefined","removeAttribute","getAttributeNames","forEach","name","includes","configAria","render","h","Host","class","disabled","type","ref","readonly","onKeyDown","onInput","onBlur","onFocus","kind","color","icon","variant","size","setTimeout","showPicker"],"sources":["src/components/data-entry/date/date-picker/date-picker.scss?tag=goat-date-picker&encapsulation=shadow","src/components/data-entry/date/date-picker/date-picker.tsx"],"sourcesContent":["@import \"../../common-input\";\r\n\r\ninput[type=\"date\"]::-webkit-inner-spin-button,\r\ninput[type=\"date\"]::-webkit-calendar-picker-indicator {\r\n  display: none;\r\n  -webkit-appearance: none;\r\n}\r\n","import { Component, ComponentInterface, Element, Event, EventEmitter, h, Host, Method, Prop, State, Watch } from '@stencil/core';\r\nimport { debounceEvent, getComponentIndex } from '../../../../utils/utils';\r\n\r\n/**\r\n * @name Date Picker\r\n * @category Form Inputs\r\n * @description Captures date input.\r\n * @example <goat-date-picker value='true'></goat-date-picker>\r\n */\r\n@Component({\r\n  tag: 'goat-date-picker',\r\n  styleUrl: 'date-picker.scss',\r\n  shadow: true,\r\n})\r\nexport class DatePicker implements ComponentInterface {\r\n  gid: string = getComponentIndex();\r\n\r\n  /**\r\n   * The input field name.\r\n   */\r\n  @Prop() name: string = `goat-input-${this.gid}`;\r\n\r\n  /**\r\n   * The input field placeholder.\r\n   */\r\n  @Prop() placeholder: string;\r\n\r\n  /**\r\n   * The input field size.\r\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\r\n   */\r\n  @Prop({ reflect: true }) size: 'sm' | 'md' | 'lg' = 'md';\r\n\r\n  /**\r\n   * If true, the user cannot interact with the button. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n\r\n  /**\r\n   * If true, the user read the value cannot modify it. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) readonly: boolean = false;\r\n\r\n  /**\r\n   * The input field value.\r\n   */\r\n  @Prop({ mutable: true }) value?: string | number | null = '';\r\n\r\n  @Prop({ reflect: true, mutable: true }) configAria: any = {};\r\n\r\n  @Prop({ reflect: true }) inline: boolean = false;\r\n\r\n  /**\r\n   * Set the amount of time, in milliseconds, to wait to trigger the `goatChange` event after each keystroke.\r\n   */\r\n  @Prop() debounce = 300;\r\n\r\n  /**\r\n   * Emitted when a keyboard input occurred.\r\n   */\r\n  @Event({ eventName: 'goat:input' }) goatInput: EventEmitter;\r\n\r\n  /**\r\n   * Emitted when the value has changed.\r\n   */\r\n  @Event({ eventName: 'goat:change' }) goatChange: EventEmitter;\r\n\r\n  /**\r\n   * Emitted when the input loses focus.\r\n   */\r\n  @Event({ eventName: 'goat:blur' }) goatBlur: EventEmitter;\r\n\r\n  /**\r\n   * Emitted when the input has focus.\r\n   */\r\n  @Event({ eventName: 'goat:focus' }) goatFocus: EventEmitter;\r\n\r\n  @Element() elm!: HTMLElement;\r\n  private nativeElement?: HTMLInputElement;\r\n  private tabindex?: string | number;\r\n  @State() hasFocus = false;\r\n\r\n  private hasValue(): boolean {\r\n    return this.getValue().length > 0;\r\n  }\r\n\r\n  private getValue(): string {\r\n    return (this.value || '').toString();\r\n  }\r\n\r\n  @Watch('debounce')\r\n  protected debounceChanged() {\r\n    this.goatChange = debounceEvent(this.goatChange, this.debounce);\r\n  }\r\n\r\n  @Method()\r\n  async getComponentId() {\r\n    return this.gid;\r\n  }\r\n\r\n  /**\r\n   * Sets focus on the native `input` in `goat-input`. Use this method instead of the global\r\n   * `input.focus()`.\r\n   */\r\n  @Method()\r\n  async setFocus() {\r\n    if (this.nativeElement) {\r\n      this.nativeElement.focus();\r\n      this.hasFocus = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global\r\n   * `input.blur()`.\r\n   */\r\n  @Method()\r\n  async setBlur() {\r\n    if (this.nativeElement) {\r\n      this.nativeElement.blur();\r\n      this.hasFocus = false;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.debounceChanged();\r\n  }\r\n\r\n  componentWillLoad() {\r\n    // If the ion-input has a tabindex attribute we get the value\r\n    // and pass it down to the native input, then remove it from the\r\n    // goat-input to avoid causing tabbing twice on the same element\r\n    if (this.elm.hasAttribute('tabindex')) {\r\n      const tabindex = this.elm.getAttribute('tabindex');\r\n      this.tabindex = tabindex !== null ? tabindex : undefined;\r\n      this.elm.removeAttribute('tabindex');\r\n    }\r\n    this.elm.getAttributeNames().forEach((name: string) => {\r\n      if (name.includes('aria-')) {\r\n        this.configAria[name] = this.elm.getAttribute(name);\r\n        this.elm.removeAttribute(name);\r\n      }\r\n    });\r\n  }\r\n\r\n  private inputHandler = (ev: Event) => {\r\n    const input = ev.target as HTMLInputElement | null;\r\n    const oldValue = this.value;\r\n    if (input) {\r\n      this.value = input.value;\r\n    }\r\n    this.goatInput.emit(ev as KeyboardEvent);\r\n    if (oldValue !== this.value) {\r\n      this.goatChange.emit(ev as KeyboardEvent);\r\n    }\r\n  };\r\n\r\n  private keyDownHandler = (ev: KeyboardEvent) => {\r\n    if (ev.key === 'Escape') {\r\n      this.clearInput(ev);\r\n    }\r\n  };\r\n\r\n  private blurHandler = (ev: FocusEvent) => {\r\n    this.hasFocus = false;\r\n    this.goatBlur.emit(ev);\r\n  };\r\n\r\n  private focusHandler = (ev: FocusEvent) => {\r\n    this.hasFocus = true;\r\n    this.goatFocus.emit(ev);\r\n  };\r\n\r\n  private clearInput = (evt: Event) => {\r\n    this.nativeElement.value = '';\r\n    this.inputHandler(evt);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Host has-focus={this.hasFocus} has-value={this.hasValue()}>\r\n        <div\r\n          class={{\r\n            'input-container': true,\r\n            'disabled': this.disabled,\r\n            'has-focus': this.hasFocus,\r\n          }}\r\n        >\r\n          <input\r\n            type=\"date\"\r\n            ref={input => (this.nativeElement = input)}\r\n            tabindex={this.tabindex}\r\n            class=\"input input-native\"\r\n            disabled={this.disabled}\r\n            readonly={this.readonly}\r\n            onKeyDown={this.keyDownHandler}\r\n            onInput={this.inputHandler}\r\n            onBlur={this.blurHandler}\r\n            onFocus={this.focusHandler}\r\n          />\r\n\r\n          <goat-button\r\n            class=\"input-action\"\r\n            kind={'simple'}\r\n            color={'secondary'}\r\n            icon={'calendar'}\r\n            variant=\"ghost\"\r\n            size=\"full\"\r\n            onGoat:click={() => {\r\n              setTimeout(() => {\r\n                this.nativeElement.showPicker();\r\n              });\r\n            }}\r\n          ></goat-button>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"2GAAA,MAAMA,EAAgB,mqL,MCcTC,EAAU,M,iLACrBC,KAAAC,IAAcC,IAkINF,KAAAG,aAAgBC,IACtB,MAAMC,EAAQD,EAAGE,OACjB,MAAMC,EAAWP,KAAKQ,MACtB,GAAIH,EAAO,CACTL,KAAKQ,MAAQH,EAAMG,K,CAErBR,KAAKS,UAAUC,KAAKN,GACpB,GAAIG,IAAaP,KAAKQ,MAAO,CAC3BR,KAAKW,WAAWD,KAAKN,E,GAIjBJ,KAAAY,eAAkBR,IACxB,GAAIA,EAAGS,MAAQ,SAAU,CACvBb,KAAKc,WAAWV,E,GAIZJ,KAAAe,YAAeX,IACrBJ,KAAKgB,SAAW,MAChBhB,KAAKiB,SAASP,KAAKN,EAAG,EAGhBJ,KAAAkB,aAAgBd,IACtBJ,KAAKgB,SAAW,KAChBhB,KAAKmB,UAAUT,KAAKN,EAAG,EAGjBJ,KAAAc,WAAcM,IACpBpB,KAAKqB,cAAcb,MAAQ,GAC3BR,KAAKG,aAAaiB,EAAI,E,UA3JD,cAAcpB,KAAKC,M,qCAWU,K,cAKP,M,cAKA,M,WAKa,G,gBAEA,G,YAEf,M,cAKxB,I,cAyBC,K,CAEZ,QAAAqB,GACN,OAAOtB,KAAKuB,WAAWC,OAAS,C,CAG1B,QAAAD,GACN,OAAQvB,KAAKQ,OAAS,IAAIiB,U,CAIlB,eAAAC,GACR1B,KAAKW,WAAagB,EAAc3B,KAAKW,WAAYX,KAAK4B,S,CAIxD,oBAAMC,GACJ,OAAO7B,KAAKC,G,CAQd,cAAM6B,GACJ,GAAI9B,KAAKqB,cAAe,CACtBrB,KAAKqB,cAAcU,QACnB/B,KAAKgB,SAAW,I,EASpB,aAAMgB,GACJ,GAAIhC,KAAKqB,cAAe,CACtBrB,KAAKqB,cAAcY,OACnBjC,KAAKgB,SAAW,K,EAIpB,iBAAAkB,GACElC,KAAK0B,iB,CAGP,iBAAAS,GAIE,GAAInC,KAAKoC,IAAIC,aAAa,YAAa,CACrC,MAAMC,EAAWtC,KAAKoC,IAAIG,aAAa,YACvCvC,KAAKsC,SAAWA,IAAa,KAAOA,EAAWE,UAC/CxC,KAAKoC,IAAIK,gBAAgB,W,CAE3BzC,KAAKoC,IAAIM,oBAAoBC,SAASC,IACpC,GAAIA,EAAKC,SAAS,SAAU,CAC1B7C,KAAK8C,WAAWF,GAAQ5C,KAAKoC,IAAIG,aAAaK,GAC9C5C,KAAKoC,IAAIK,gBAAgBG,E,KAsC/B,MAAAG,GACE,OACEC,EAACC,EAAI,aAAYjD,KAAKgB,SAAQ,YAAahB,KAAKsB,YAC9C0B,EAAA,OACEE,MAAO,CACL,kBAAmB,KACnBC,SAAYnD,KAAKmD,SACjB,YAAanD,KAAKgB,WAGpBgC,EAAA,SACEI,KAAK,OACLC,IAAKhD,GAAUL,KAAKqB,cAAgBhB,EACpCiC,SAAUtC,KAAKsC,SACfY,MAAM,qBACNC,SAAUnD,KAAKmD,SACfG,SAAUtD,KAAKsD,SACfC,UAAWvD,KAAKY,eAChB4C,QAASxD,KAAKG,aACdsD,OAAQzD,KAAKe,YACb2C,QAAS1D,KAAKkB,eAGhB8B,EAAA,eACEE,MAAM,eACNS,KAAM,SACNC,MAAO,YACPC,KAAM,WACNC,QAAQ,QACRC,KAAK,OAAM,eACG,KACZC,YAAW,KACThE,KAAKqB,cAAc4C,YAAY,GAC/B,K"}