{"version":3,"names":["treeNodeCss","GoatTreeNode","this","gid","getComponentIndex","tabindex","clickHandler","event","disabled","expanded","goatTreeNodeClick","emit","value","label","expand","id","preventDefault","stopPropagation","blurHandler","hasFocus","focusHandler","mouseDownHandler","isActive","keyDownHandler","evt","key","hasChildNodes","childNodes","elm","querySelectorAll","length","firstChild","setFocus","render","h","Host","active","class","href","selected","isSelected","style","paddingLeft","level","onClick","onMouseDown","onKeyDown","onBlur","onFocus","ref","el","nativeElement","name","size","focus","setBlur","blur","windowMouseUp","windowKeyUp","undefined","selectedNode","componentWillLoad","hasAttribute","getAttribute","removeAttribute","treeView","closest","getSelectedNode","then","subscribeToSelect","forEach","node"],"sources":["src/components/navigation/tree-view/tree-node/tree-node.scss?tag=goat-tree-node&encapsulation=shadow","src/components/navigation/tree-view/tree-node/tree-node.tsx"],"sourcesContent":["@import \"../../../../globalStyles/commons\";\r\n\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.tree-node {\r\n\r\n\r\n}\r\n\r\n.tree-node-content {\r\n  cursor: pointer;\r\n  height: 2rem;\r\n  @include font-style(text-md);\r\n  padding: 0 v(--spacing-04);\r\n  box-sizing: border-box;\r\n  color: v(--text-secondary);\r\n  outline: none;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  border: 0.125rem solid transparent;\r\n\r\n  .tree-node-label {\r\n    flex: 1;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    padding-left: .5rem;\r\n  }\r\n\r\n  .expand-icon {\r\n    transform: rotate(0deg);\r\n    transition: all .11s cubic-bezier(.2, 0, .38, .9);\r\n  }\r\n\r\n  .expand-icon.expanded {\r\n    transform: rotate(+90deg);\r\n  }\r\n\r\n  .icon-space {\r\n    width: 1rem;\r\n  }\r\n}\r\n\r\n.node-slot {\r\n  display: none;\r\n}\r\n\r\n.node-slot.expanded {\r\n  display: block;\r\n}\r\n\r\n.tree-node-content {\r\n\r\n  &:hover {\r\n    background: v(--layer-hover-01);\r\n  }\r\n\r\n  &.has-focus:not(.selected) {\r\n    color: v(--text-primary);\r\n    border-color: v(--color-primary);\r\n\r\n    .slot-end {\r\n      color: v(--icon-01);\r\n    }\r\n  }\r\n\r\n  &.selected {\r\n    background: v(--selected-ui);\r\n    font-weight: v(--font-weight-semi-bold);\r\n    border-left: 0.125rem solid transparent;\r\n  }\r\n\r\n\r\n\r\n  &.selected::before {\r\n    content: \" \";\r\n    display: block;\r\n    height: calc(100% + 0.25rem);\r\n    border-left: 0.25rem solid var(--color-primary, var(--color-blue-60, #0f62fe)) !important;\r\n    position: absolute;\r\n    top: -0.125rem;\r\n    left: -0.125rem;\r\n  }\r\n\r\n}\r\n\r\n.link {\r\n  color: inherit !important;\r\n  text-decoration: none !important;\r\n}\r\n\r\n.tree-node-content.disabled {\r\n  cursor: not-allowed;\r\n  color: v(--text-disabled) !important;\r\n  background-color: v(--disabled-01) !important;\r\n\r\n  &:hover, &.has-focus:not(.selected) {\r\n    color: v(--text-disabled) !important;\r\n    background-color: v(--disabled-01) !important;\r\n  }\r\n\r\n  &.selected {\r\n    color: v(--text-disabled) !important;\r\n    background-color: v(--disabled-01) !important;\r\n  }\r\n}\r\n","import { Component, Element, Event, EventEmitter, h, Host, Listen, Method, Prop, State } from '@stencil/core';\r\nimport { getComponentIndex } from '../../../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'goat-tree-node',\r\n  styleUrl: 'tree-node.scss',\r\n  shadow: true,\r\n})\r\nexport class GoatTreeNode {\r\n  gid: string = getComponentIndex();\r\n\r\n  private nativeElement?: HTMLElement;\r\n\r\n  private tabindex?: string | number = 1;\r\n\r\n  /**\r\n   * The menu item value.\r\n   */\r\n  @Prop({ mutable: true }) value?: string | number | null;\r\n\r\n  @Prop({ mutable: true }) label: string = '';\r\n\r\n  /**\r\n   * Hyperlink to navigate to on click.\r\n   */\r\n  @Prop() href: string;\r\n\r\n  /**\r\n   * If true, the user cannot interact with the button. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n\r\n  /**\r\n   * Menu item selection state.\r\n   */\r\n  @Prop({ reflect: true }) selectedNode: string;\r\n\r\n  @Prop({ reflect: true }) expanded: boolean = true;\r\n\r\n  @Prop({ reflect: true }) level: number = 0;\r\n\r\n  /**\r\n   * Emitted when the menu item is clicked.\r\n   */\r\n  @Event({ eventName: 'goat:tree-node-click' }) goatTreeNodeClick: EventEmitter;\r\n\r\n  @State() hasChildNodes = false;\r\n\r\n  /**\r\n   * Sets focus on the native `input` in `goat-input`. Use this method instead of the global\r\n   * `input.focus()`.\r\n   */\r\n  @Method()\r\n  async setFocus() {\r\n    if (this.nativeElement) {\r\n      this.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global\r\n   * `input.blur()`.\r\n   */\r\n  @Method()\r\n  async setBlur() {\r\n    if (this.nativeElement) {\r\n      this.nativeElement.blur();\r\n    }\r\n  }\r\n\r\n  @Listen('mouseup', { target: 'window' })\r\n  windowMouseUp() {\r\n    if (this.isActive) this.isActive = false;\r\n  }\r\n\r\n  @Listen('keyup', { target: 'window' })\r\n  windowKeyUp(evt) {\r\n    if (this.isActive && evt.key == ' ') this.isActive = false;\r\n  }\r\n\r\n  @State() hasFocus = false;\r\n  @State() isActive = false;\r\n  @Element() elm!: HTMLElement;\r\n\r\n  private clickHandler = event => {\r\n    if (!this.disabled) {\r\n      this.expanded = !this.expanded;\r\n      this.goatTreeNodeClick.emit({\r\n        value: this.value || this.label,\r\n        expand: this.expanded,\r\n        id: this.gid\r\n      });\r\n    } else {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      return;\r\n    }\r\n  };\r\n\r\n  private blurHandler = () => {\r\n    this.hasFocus = false;\r\n  };\r\n\r\n  private focusHandler = () => {\r\n    this.hasFocus = true;\r\n  };\r\n\r\n  private mouseDownHandler = () => {\r\n    this.isActive = true;\r\n  };\r\n\r\n  isSelected() {\r\n    if (this.value === undefined && this.label === undefined) return false;\r\n    else if (this.value === undefined) return this.selectedNode === this.label;\r\n    else return this.selectedNode === this.value;\r\n  }\r\n\r\n  private keyDownHandler = evt => {\r\n    if (evt.key == ' ' || evt.key == 'Enter') {\r\n      evt.preventDefault();\r\n      this.isActive = true;\r\n      this.clickHandler(evt);\r\n    } else if (evt.key === 'ArrowLeft') {\r\n      evt.preventDefault();\r\n      this.expanded = false;\r\n    } else if (evt.key === 'ArrowRight') {\r\n      evt.preventDefault();\r\n      if (this.expanded && this.hasChildNodes) {\r\n        const childNodes = this.elm.querySelectorAll('goat-tree-node');\r\n        if (childNodes.length) {\r\n          const firstChild = childNodes[0] as any;\r\n          firstChild.setFocus();\r\n        }\r\n      } else {\r\n        this.expanded = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillLoad() {\r\n    // If the ion-input has a tabindex attribute we get the value\r\n    // and pass it down to the native input, then remove it from the\r\n    // goat-input to avoid causing tabbing twice on the same element\r\n    if (this.elm.hasAttribute('tabindex')) {\r\n      const tabindex = this.elm.getAttribute('tabindex');\r\n      this.tabindex = tabindex !== null ? tabindex : undefined;\r\n      this.elm.removeAttribute('tabindex');\r\n    }\r\n\r\n    const treeView = this.elm.closest('goat-tree-view');\r\n\r\n    // @ts-ignore\r\n    treeView.getSelectedNode().then((selectedNode: string) => {\r\n      this.selectedNode = selectedNode;\r\n    });\r\n\r\n    // @ts-ignore\r\n    treeView.subscribeToSelect((selectedNode: string) => {\r\n      this.selectedNode = selectedNode;\r\n    });\r\n\r\n    const childNodes = this.elm.querySelectorAll('goat-tree-node');\r\n    this.hasChildNodes = !!childNodes.length;\r\n    childNodes.forEach((node: any) => {\r\n      node.level = this.level + 1;\r\n    });\r\n  }\r\n\r\n  render = () => {\r\n\r\n    return (\r\n      <Host active={this.isActive} has-focus={this.hasFocus}>\r\n\r\n\r\n        <div class=\"tree-node\">\r\n\r\n          <a class=\"link\" href={this.href}>\r\n          <div\r\n            class={{\r\n              'tree-node-content': true,\r\n              'selected': this.isSelected(),\r\n              'active': this.isActive,\r\n              'disabled': this.disabled,\r\n              'has-focus': this.hasFocus,\r\n            }}\r\n            style={{ paddingLeft: `${this.level + 1}rem` }}\r\n            onClick={this.clickHandler}\r\n            onMouseDown={this.mouseDownHandler}\r\n            onKeyDown={this.keyDownHandler}\r\n            aria-disabled={this.disabled}\r\n            onBlur={this.blurHandler}\r\n            onFocus={this.focusHandler}\r\n            tabindex={this.tabindex}\r\n            ref={el => (this.nativeElement = el as HTMLElement)}\r\n          >\r\n            {this.hasChildNodes && <goat-icon name='chevron--right' class={{\"expand-icon\":true, \"expanded\": this.expanded}} size=\"1rem\" />}\r\n\r\n            {!this.hasChildNodes && <div class=\"icon-space\" />}\r\n\r\n            <span class=\"tree-node-label\">{this.label}</span>\r\n          </div>\r\n          </a>\r\n\r\n          <div\r\n            class={{\r\n              'node-slot': true,\r\n              'expanded': this.expanded,\r\n            }}\r\n          >\r\n            <slot></slot>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  };\r\n}\r\n"],"mappings":"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"}