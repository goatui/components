{"version":3,"names":["timePickerCss","TimePicker","this","gid","getComponentIndex","inputHandler","ev","input","target","oldValue","value","goatInput","emit","goatChange","keyDownHandler","key","clearInput","blurHandler","hasFocus","goatBlur","focusHandler","goatFocus","evt","nativeElement","hasValue","getValue","length","toString","getComponentId","setFocus","focus","setBlur","blur","componentWillLoad","elm","hasAttribute","tabindex","getAttribute","undefined","removeAttribute","getAttributeNames","forEach","name","includes","configAria","render","h","Host","class","disabled","type","ref","readOnly","readonly","onKeyDown","onInput","onBlur","onFocus","kind","color","icon","variant","size","setTimeout","showPicker"],"sources":["src/components/data-entry/date/time-picker/time-picker.scss?tag=goat-time-picker&encapsulation=shadow","src/components/data-entry/date/time-picker/time-picker.tsx"],"sourcesContent":["@import \"../../common-input\";\n\ninput[type=\"time\"]::-webkit-inner-spin-button,\ninput[type=\"time\"]::-webkit-calendar-picker-indicator {\n  display: none;\n  -webkit-appearance: none;\n}\n","import { Component, Host, h, Prop, State, Event, EventEmitter, Element, Method } from '@stencil/core';\r\nimport { getComponentIndex } from '../../../../utils/utils';\r\n\r\n/**\r\n * @name Time Picker\r\n * @description Captures time input.\r\n * @category Form Inputs\r\n * @tags input, form\r\n * @example <goat-time-picker value='true'></goat-time-picker>\r\n */\r\n@Component({\r\n  tag: 'goat-time-picker',\r\n  styleUrl: 'time-picker.scss',\r\n  shadow: true,\r\n})\r\nexport class TimePicker {\r\n\r\n  gid: string = getComponentIndex();\r\n\r\n  /**\r\n   * The input field name.\r\n   */\r\n  @Prop() name: string = `goat-input-${this.gid}`;\r\n\r\n  /**\r\n   * The input field placeholder.\r\n   */\r\n  @Prop() placeholder: string;\r\n\r\n  /**\r\n   * The input field size.\r\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\r\n   */\r\n  @Prop({ reflect: true }) size: 'sm' | 'md' | 'lg' = 'md';\r\n\r\n\r\n  /**\r\n   * If true, the user cannot interact with the button. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n\r\n  /**\r\n   * If true, the user read the value cannot modify it. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) readonly: boolean = false;\r\n\r\n  /**\r\n   * The input field value.\r\n   */\r\n  @Prop({ mutable: true }) value?: string | number | null = '';\r\n\r\n  @Prop({ reflect: true, mutable: true }) configAria: any = {};\r\n\r\n\r\n  /**\r\n   * Emitted when a keyboard input occurred.\r\n   */\r\n  @Event({ eventName: 'goat:input' }) goatInput: EventEmitter;\r\n\r\n  /**\r\n   * Emitted when the value has changed.\r\n   */\r\n  @Event({ eventName: 'goat:change' }) goatChange: EventEmitter;\r\n\r\n  /**\r\n   * Emitted when the input loses focus.\r\n   */\r\n  @Event({ eventName: 'goat:blur' }) goatBlur: EventEmitter;\r\n\r\n  /**\r\n   * Emitted when the input has focus.\r\n   */\r\n  @Event({ eventName: 'goat:focus' }) goatFocus: EventEmitter;\r\n\r\n  @Element() elm!: HTMLElement;\r\n  private nativeElement?: HTMLInputElement;\r\n  private tabindex?: string | number;\r\n  @State() hasFocus = false;\r\n\r\n  @Prop({ reflect: true }) inline: boolean = false;\r\n\r\n  private hasValue(): boolean {\r\n    return this.getValue().length > 0;\r\n  }\r\n\r\n  private getValue(): string {\r\n    return (this.value || '').toString();\r\n  }\r\n\r\n\r\n  @Method()\r\n  async getComponentId() {\r\n    return this.gid;\r\n  }\r\n\r\n  /**\r\n   * Sets focus on the native `input` in `goat-input`. Use this method instead of the global\r\n   * `input.focus()`.\r\n   */\r\n  @Method()\r\n  async setFocus() {\r\n    if (this.nativeElement) {\r\n      this.nativeElement.focus();\r\n      this.hasFocus = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global\r\n   * `input.blur()`.\r\n   */\r\n  @Method()\r\n  async setBlur() {\r\n    if (this.nativeElement) {\r\n      this.nativeElement.blur();\r\n      this.hasFocus = false;\r\n    }\r\n  }\r\n\r\n\r\n  componentWillLoad() {\r\n    // If the ion-input has a tabindex attribute we get the value\r\n    // and pass it down to the native input, then remove it from the\r\n    // goat-input to avoid causing tabbing twice on the same element\r\n    if (this.elm.hasAttribute('tabindex')) {\r\n      const tabindex = this.elm.getAttribute('tabindex');\r\n      this.tabindex = tabindex !== null ? tabindex : undefined;\r\n      this.elm.removeAttribute('tabindex');\r\n    }\r\n    this.elm.getAttributeNames().forEach((name: string) => {\r\n      if (name.includes('aria-')) {\r\n        this.configAria[name] = this.elm.getAttribute(name);\r\n        this.elm.removeAttribute(name);\r\n      }\r\n    });\r\n  }\r\n\r\n  private inputHandler = (ev: Event) => {\r\n    const input = ev.target as HTMLInputElement | null;\r\n    const oldValue = this.value;\r\n    if (input) {\r\n      this.value = input.value;\r\n    }\r\n    this.goatInput.emit(ev as KeyboardEvent);\r\n    if (oldValue !== this.value) {\r\n      this.goatChange.emit(ev as KeyboardEvent);\r\n    }\r\n  };\r\n\r\n  private keyDownHandler = (ev: KeyboardEvent) => {\r\n    if (ev.key === 'Escape') {\r\n      this.clearInput(ev);\r\n    }\r\n  };\r\n\r\n  private blurHandler = (ev: FocusEvent) => {\r\n    this.hasFocus = false;\r\n    this.goatBlur.emit(ev);\r\n  };\r\n\r\n  private focusHandler = (ev: FocusEvent) => {\r\n    this.hasFocus = true;\r\n    this.goatFocus.emit(ev);\r\n  };\r\n\r\n  private clearInput = (evt: Event) => {\r\n    this.nativeElement.value = '';\r\n    this.inputHandler(evt);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Host has-focus={this.hasFocus}\r\n            has-value={this.hasValue()}>\r\n        <div class={{\r\n          'input-container': true,\r\n          'disabled': this.disabled,\r\n          'has-focus': this.hasFocus,\r\n        }}>\r\n          <input type='time'\r\n                 ref={input => (this.nativeElement = input)}\r\n                 tabindex={this.tabindex}\r\n                 class='input input-native'\r\n                 disabled={this.disabled}\r\n                 readOnly={this.readonly}\r\n                 onKeyDown={this.keyDownHandler}\r\n                 onInput={this.inputHandler}\r\n                 onBlur={this.blurHandler}\r\n                 onFocus={this.focusHandler} />\r\n\r\n          <goat-button class=\"input-action\" kind={'simple'} color={'secondary'} icon={'time' } variant=\"ghost\" size=\"full\" onGoat:click={() => {\r\n            setTimeout(() => {\r\n              this.nativeElement.showPicker();\r\n            });\r\n          }}></goat-button>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n"],"mappings":"oGAAA,MAAMA,EAAgB,mqL,MCeTC,EAAU,M,iLAErBC,KAAAC,IAAcC,IAwHNF,KAAAG,aAAgBC,IACtB,MAAMC,EAAQD,EAAGE,OACjB,MAAMC,EAAWP,KAAKQ,MACtB,GAAIH,EAAO,CACTL,KAAKQ,MAAQH,EAAMG,K,CAErBR,KAAKS,UAAUC,KAAKN,GACpB,GAAIG,IAAaP,KAAKQ,MAAO,CAC3BR,KAAKW,WAAWD,KAAKN,E,GAIjBJ,KAAAY,eAAkBR,IACxB,GAAIA,EAAGS,MAAQ,SAAU,CACvBb,KAAKc,WAAWV,E,GAIZJ,KAAAe,YAAeX,IACrBJ,KAAKgB,SAAW,MAChBhB,KAAKiB,SAASP,KAAKN,EAAG,EAGhBJ,KAAAkB,aAAgBd,IACtBJ,KAAKgB,SAAW,KAChBhB,KAAKmB,UAAUT,KAAKN,EAAG,EAGjBJ,KAAAc,WAAcM,IACpBpB,KAAKqB,cAAcb,MAAQ,GAC3BR,KAAKG,aAAaiB,EAAI,E,UAjJD,cAAcpB,KAAKC,M,qCAWU,K,cAMP,M,cAKA,M,WAKa,G,gBAEA,G,cA0BtC,M,YAEuB,K,CAEnC,QAAAqB,GACN,OAAOtB,KAAKuB,WAAWC,OAAS,C,CAG1B,QAAAD,GACN,OAAQvB,KAAKQ,OAAS,IAAIiB,U,CAK5B,oBAAMC,GACJ,OAAO1B,KAAKC,G,CAQd,cAAM0B,GACJ,GAAI3B,KAAKqB,cAAe,CACtBrB,KAAKqB,cAAcO,QACnB5B,KAAKgB,SAAW,I,EASpB,aAAMa,GACJ,GAAI7B,KAAKqB,cAAe,CACtBrB,KAAKqB,cAAcS,OACnB9B,KAAKgB,SAAW,K,EAKpB,iBAAAe,GAIE,GAAI/B,KAAKgC,IAAIC,aAAa,YAAa,CACrC,MAAMC,EAAWlC,KAAKgC,IAAIG,aAAa,YACvCnC,KAAKkC,SAAWA,IAAa,KAAOA,EAAWE,UAC/CpC,KAAKgC,IAAIK,gBAAgB,W,CAE3BrC,KAAKgC,IAAIM,oBAAoBC,SAASC,IACpC,GAAIA,EAAKC,SAAS,SAAU,CAC1BzC,KAAK0C,WAAWF,GAAQxC,KAAKgC,IAAIG,aAAaK,GAC9CxC,KAAKgC,IAAIK,gBAAgBG,E,KAsC/B,MAAAG,GACE,OACEC,EAACC,EAAI,aAAY7C,KAAKgB,SAAQ,YACbhB,KAAKsB,YACpBsB,EAAA,OAAKE,MAAO,CACV,kBAAmB,KACnBC,SAAY/C,KAAK+C,SACjB,YAAa/C,KAAKgB,WAElB4B,EAAA,SAAOI,KAAK,OACLC,IAAK5C,GAAUL,KAAKqB,cAAgBhB,EACpC6B,SAAUlC,KAAKkC,SACfY,MAAM,qBACNC,SAAU/C,KAAK+C,SACfG,SAAUlD,KAAKmD,SACfC,UAAWpD,KAAKY,eAChByC,QAASrD,KAAKG,aACdmD,OAAQtD,KAAKe,YACbwC,QAASvD,KAAKkB,eAErB0B,EAAA,eAAaE,MAAM,eAAeU,KAAM,SAAUC,MAAO,YAAaC,KAAM,OAASC,QAAQ,QAAQC,KAAK,OAAM,eAAe,KAC7HC,YAAW,KACT7D,KAAKqB,cAAcyC,YAAY,GAC/B,K"}