{"version":3,"names":["cbCompoundExpressionCss","CbCompoundExpression","componentDidRender","elm","this","shadowRoot","querySelector","conditionOperatorElm","setTimeout","style","paddingInlineStart","getBoundingClientRect","width","render","h","Host","class","fieldName","inline","fieldLabel","conditionOperator","color","name"],"sources":["src/components/condition-builder/cb-compound-expression/cb-compound-expression.scss?tag=goat-cb-compound-expression&encapsulation=shadow","src/components/condition-builder/cb-compound-expression/cb-compound-expression.tsx"],"sourcesContent":["@import \"../../../globalStyles/commons\";\r\n\r\n\r\n.compound-expression {\r\n  display: flex;\r\n  padding-top: 1rem;\r\n\r\n  .field-name-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-top: .5rem;\r\n    padding-right: 1rem;\r\n\r\n    .field-compound-type {\r\n      flex: 1;\r\n      padding-bottom: 1.25rem;\r\n    }\r\n  }\r\n\r\n  .conditions {\r\n    .condition-builder__condition {\r\n      display: flex;\r\n      gap: .5rem;\r\n      align-items: center;\r\n      padding-bottom: 1rem;\r\n      &:last-child {\r\n        padding-bottom: 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {Component, Element, h, Host, Prop} from '@stencil/core';\r\n\r\n\r\n@Component({\r\n  tag: 'goat-cb-compound-expression',\r\n  styleUrl: 'cb-compound-expression.scss',\r\n  shadow: true,\r\n})\r\nexport class CbCompoundExpression {\r\n\r\n  @Prop() conditionOperator: 'and' | 'or';\r\n\r\n  @Prop() fieldName: string = '';\r\n  @Prop() fieldLabel: string = '';\r\n\r\n  @Element() elm!: HTMLElement;\r\n\r\n  componentDidRender() {\r\n    const elm: HTMLElement = this.elm.shadowRoot.querySelector('.slot-end');\r\n    const conditionOperatorElm: HTMLElement = this.elm.shadowRoot.querySelector('.field-name-container');\r\n    setTimeout(() => {\r\n      if (elm)\r\n        elm.style.paddingInlineStart = conditionOperatorElm.getBoundingClientRect().width + 'px';\r\n    }, 0);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n\r\n        <div class=\"compound-expression\" field-name={this.fieldName}>\r\n          <div class='field-name-container'>\r\n            <goat-text inline={true}>{this.fieldLabel}</goat-text>\r\n            <div class='field-compound-type'>\r\n              {(() => {\r\n                if (this.conditionOperator)\r\n                  return <goat-cb-divider connect-end={true}>\r\n                    <goat-tag color={'warning'}>{this.conditionOperator}</goat-tag>\r\n                  </goat-cb-divider>\r\n              })()}\r\n            </div>\r\n          </div>\r\n          <div class=\"conditions\">\r\n            <slot/>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"slot-end\">\r\n          <slot name={'end'}/>\r\n        </div>\r\n\r\n\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n"],"mappings":"yDAAA,MAAMA,EAA0B,onC,MCQnBC,EAAoB,M,yEAIH,G,gBACC,E,CAI7B,kBAAAC,GACE,MAAMC,EAAmBC,KAAKD,IAAIE,WAAWC,cAAc,aAC3D,MAAMC,EAAoCH,KAAKD,IAAIE,WAAWC,cAAc,yBAC5EE,YAAW,KACT,GAAIL,EACFA,EAAIM,MAAMC,mBAAqBH,EAAqBI,wBAAwBC,MAAQ,IAAI,GACzF,E,CAGL,MAAAC,GACE,OACEC,EAACC,EAAI,KAEHD,EAAA,OAAKE,MAAM,sBAAqB,aAAaZ,KAAKa,WAChDH,EAAA,OAAKE,MAAM,wBACTF,EAAA,aAAWI,OAAQ,MAAOd,KAAKe,YAC/BL,EAAA,OAAKE,MAAM,uBACR,MACC,GAAIZ,KAAKgB,kBACP,OAAON,EAAA,iCAA8B,MACnCA,EAAA,YAAUO,MAAO,WAAYjB,KAAKgB,mBAEvC,EALA,KAQLN,EAAA,OAAKE,MAAM,cACTF,EAAA,eAIJA,EAAA,OAAKE,MAAM,YACTF,EAAA,QAAMQ,KAAM,S"}