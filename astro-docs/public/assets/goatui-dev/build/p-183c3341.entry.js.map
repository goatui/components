{"version":3,"names":["cbPredicateCss","CbPredicate","renderHorizontal","h","Host","class","this","conditionOperator","vertical","color","componentDidRender","elm","shadowRoot","querySelector","conditionOperatorElm","setTimeout","style","paddingInlineStart","getBoundingClientRect","width","renderVertical","name","render"],"sources":["src/components/condition-builder/cb-predicate/cb-predicate.scss?tag=goat-cb-predicate&encapsulation=shadow","src/components/condition-builder/cb-predicate/cb-predicate.tsx"],"sourcesContent":["@import \"../../../globalStyles/commons\";\r\n\r\n\r\n.predicate:not(.vertical) {\r\n\r\n  .predicate-body {\r\n    padding-top: 1rem;\r\n  }\r\n\r\n  .predicate-condition-operator {\r\n    padding: 1rem 2rem 0 2rem;\r\n  }\r\n}\r\n\r\n\r\n.predicate.vertical {\r\n  display: flex;\r\n  align-items: stretch;\r\n\r\n  .predicate-condition-operator {\r\n    padding: 2rem 0 1rem 0;\r\n    padding-inline-end: v(--spacing-05);\r\n  }\r\n\r\n  .predicate-body {\r\n    flex: 1;\r\n  }\r\n}\r\n\r\n","import {Component, Element, h, Host, Prop} from '@stencil/core';\r\n\r\n\r\n@Component({\r\n  tag: 'goat-cb-predicate',\r\n  styleUrl: 'cb-predicate.scss',\r\n  shadow: true,\r\n})\r\nexport class CbPredicate {\r\n\r\n  @Prop() conditionOperator: 'and' | 'or';\r\n\r\n  @Prop() vertical: boolean = false;\r\n\r\n  renderHorizontal() {\r\n    return (\r\n      <Host>\r\n        <div class=\"predicate\">\r\n\r\n          <div class=\"predicate-body\">\r\n            <slot/>\r\n          </div>\r\n\r\n          {(() => {\r\n            if (this.conditionOperator) {\r\n              return (\r\n                <goat-cb-divider vertical={true} class=\"predicate-condition-operator\">\r\n                  <goat-tag color={'warning'}>{this.conditionOperator}</goat-tag>\r\n                </goat-cb-divider>\r\n              )\r\n            }\r\n          })()}\r\n\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  @Element() elm!: HTMLElement;\r\n\r\n  componentDidRender() {\r\n    const elm: HTMLElement = this.elm.shadowRoot.querySelector('.slot-end');\r\n    const conditionOperatorElm: HTMLElement = this.elm.shadowRoot.querySelector('.predicate-condition-operator');\r\n    setTimeout(() => {\r\n      if (elm)\r\n        elm.style.paddingInlineStart = conditionOperatorElm.getBoundingClientRect().width + 'px';\r\n    }, 0);\r\n  }\r\n\r\n  renderVertical() {\r\n    return (<Host>\r\n      <div class=\"predicate vertical\">\r\n        {(() => {\r\n          if (this.conditionOperator) {\r\n            return (\r\n              <div class='predicate-condition-operator'>\r\n                <goat-cb-divider connect-start={true} connect-end={true}>\r\n                  <goat-tag color={'success'}>{this.conditionOperator}</goat-tag>\r\n                </goat-cb-divider>\r\n              </div>)\r\n          }\r\n        })()}\r\n\r\n        <div class=\"predicate-body\">\r\n          <slot/>\r\n        </div>\r\n      </div>\r\n      <div class='slot-end'>\r\n        <slot name={'end'}/>\r\n      </div>\r\n    </Host>);\r\n  }\r\n\r\n  render() {\r\n    if (this.vertical)\r\n      return this.renderVertical();\r\n    else\r\n      return this.renderHorizontal();\r\n  }\r\n}\r\n"],"mappings":"yDAAA,MAAMA,EAAiB,q/B,MCQVC,EAAW,M,wEAIM,K,CAE5B,gBAAAC,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,aAETF,EAAA,OAAKE,MAAM,kBACTF,EAAA,cAGD,MACC,GAAIG,KAAKC,kBAAmB,CAC1B,OACEJ,EAAA,mBAAiBK,SAAU,KAAMH,MAAM,gCACrCF,EAAA,YAAUM,MAAO,WAAYH,KAAKC,mB,CAIzC,EARA,I,CAiBT,kBAAAG,GACE,MAAMC,EAAmBL,KAAKK,IAAIC,WAAWC,cAAc,aAC3D,MAAMC,EAAoCR,KAAKK,IAAIC,WAAWC,cAAc,iCAC5EE,YAAW,KACT,GAAIJ,EACFA,EAAIK,MAAMC,mBAAqBH,EAAqBI,wBAAwBC,MAAQ,IAAI,GACzF,E,CAGL,cAAAC,GACE,OAAQjB,EAACC,EAAI,KACXD,EAAA,OAAKE,MAAM,sBACR,MACC,GAAIC,KAAKC,kBAAmB,CAC1B,OACEJ,EAAA,OAAKE,MAAM,gCACTF,EAAA,mCAAgC,KAAI,cAAe,MACjDA,EAAA,YAAUM,MAAO,WAAYH,KAAKC,oB,CAI3C,EATA,GAWDJ,EAAA,OAAKE,MAAM,kBACTF,EAAA,eAGJA,EAAA,OAAKE,MAAM,YACTF,EAAA,QAAMkB,KAAM,S,CAKlB,MAAAC,GACE,GAAIhB,KAAKE,SACP,OAAOF,KAAKc,sBAEZ,OAAOd,KAAKJ,kB"}