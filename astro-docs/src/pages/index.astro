---
import Layout from '../layouts/Default.astro';
import BannerLogo from '../components/BannerLogo.astro';
import site from '../_data/site.json';
import '../styles/index.page.scss';
import Footer from '../components/Footer.astro';

const isProd = import.meta.env.PROD;
let envProps;

if (isProd) {
  envProps = site['prod'];
} else {
  envProps = site['dev'];
}

function jumpingSentence(sentence: string) {
  let len = sentence.length;
  return sentence.split(' ').map((word) => {
    return `<div class='jumping-word'>${word.split('').map((char, index) => {
      if (char === ' ')
        return char;
      return `<goat-text style='z-index:${len--};' class='jumping-text' type='fluid-heading' heading-size='6' heading-level='1'>${char}</goat-text>`;
    }).join('')}</div>`;
  }).join(' ');
}
---

<Layout root={true}
        classes='layer-background'
        keywords='web components, button, input, grid, ui library, calendar, table, accordion, select, search, notifications, modal, card, breadcrumb, tree view, tabs, pagination, tooltip, popover, dropdown, menu, slider, toggle, switch, progress bar, spinner, loader, toast, alert, badge, tag, avatar, chip, divider, list, icon, text, heading, paragraph, label, link, image, checkbox, radio, form, form group, form field'>

  <div class='banner'>


    <div class='banner-content'>
      <BannerLogo />

      <div class='title' set:html={
        `<goat-text type='fluid-heading' heading-size='6' heading-level='1'>Rapidly build web applications</goat-text> <br/>
<goat-text type='fluid-heading' heading-size='6' heading-level='1' inline>with</goat-text> ` + jumpingSentence('goat/ui')
      }></div>

      <goat-text class='' type='heading' heading-size='3' heading-level='2'>A light weight web component library
      </goat-text>
      <div class='banner-actions '>
        <goat-button href='#getting-started' size='lg' color='secondary' icon='arrow--right'>Get
          Started
        </goat-button>
        <goat-button href='/components/' size='lg' color='primary' variant='simple'>Browse Components</goat-button>
      </div>
    </div>


    <div class='social-icons'>
      <goat-button
        icon='logo--github'
        variant='ghost'
        color='black'
        dark-mode-color='white'
        target='_blank'
        aria-label='Github'
        href={`https://www.github.com/${site.github_username}`}
      ></goat-button>
      <goat-button
        icon='logo--x'
        color='black'
        dark-mode-color='white'
        variant='ghost'
        target='_blank'
        aria-label='Twitter'
        href={`https://x.com/${site.twitter_username}`}
      ></goat-button>
    </div>

    <div class='made-in-india'>
      <goat-text expressive>&copy; 2024</goat-text>&nbsp;
      <goat-text expressive>
        <goat-link class='no-decoration' href={site.author_url}>
          <goat-avatar src='/assets/img/avatar.xs.webp' size='1.5rem' />&nbsp;
          {site.author}
        </goat-link>
      </goat-text>
      <goat-text expressive>.</goat-text>
      <goat-svg class='country-flag' size='1.5rem'
                src='https://cdn.jsdelivr.net/gh/hampusborgos/country-flags@main/svg/in.svg'></goat-svg>
      <goat-text expressive>Made in India.</goat-text>
    </div>
  </div>


  <div class='sections-wrapper layer-01'>
    <goat-container size='max'>
      <div class='section'>
        <goat-text type='heading' heading-size='5'>Introduction</goat-text>
        <goat-text expressive>{site.title} contains most used web components built using Stencil. So you don't need to
          include any additional framework dependencies, You can simply import required
          component js, and right away start using it.
        </goat-text>
        <goat-text expressive>Can easily be consumed by any other framework, like Vue, React, Angular, etc.</goat-text>
        <br />
        <goat-text expressive
        >{site.title} components are beautiful Open Source web components under MIT license. They are maintained by
          <goat-link href='https://shivajivarma.com'>Shivaji Varma</goat-link>
          . Do not miss any updates and announcements, stay tuned on our social pages. You can contribute to the project
          by creating pull requests or issues.
        </goat-text>
      </div>

      <div class='section'>
        <goat-text class='heading-scrollable' type='heading' heading-size='5' id='getting-started'>Getting Started
        </goat-text>
        <ul style='padding-inline-start: 1.5rem'>
          <li>
            <goat-text expressive=''>
              Put a script tag similar to this
              <goat-code-highlighter inline><code>&lt;script type="module"
                src="{envProps.script}"&gt;&lt;/script&gt;</code></goat-code-highlighter>
              in the head of your index.html
            </goat-text>
          </li>
          <li>
            <goat-text expressive>Then you can use the element anywhere in your template, JSX, html etc</goat-text>
          </li>
        </ul>
        <div class='container-code'>
          <goat-tabs>
            <goat-tabs-list>
              <goat-tab>Usage</goat-tab>
              <goat-tab selected='true'>Load single component</goat-tab>
            </goat-tabs-list>

            <goat-tab-panel>
              <goat-code-highlighter language='html' id='get-started-code' class='code-highlighter' />
              <script is:inline define:vars={{ site, envProps }}>
                document.getElementById('get-started-code').value = `<!DOCTYPE html>
                 &lt;html>
                 &lt;head>
                  <meta charset='utf-8'>
                  <meta name='viewport' content='width=device-width'>
                  <title>${site.title}</title>

                  <!-- include your custom theme variable values, view variable names at ${envProps.themeCss} -->
                  <!--link rel="stylesheet" href="/custom-theme.css"></link-->
                   &lt;script type='module' src='${envProps.script}'>&lt;/script>

                      <style>
                    @import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:ital@0;1&family=IBM+Plex+Sans+Condensed:ital@0;1&family=IBM+Plex+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&family=IBM+Plex+Serif:ital@0;1&display=swap');
                    :root {
                      --font-family-base: 'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;
                    }
                  </style>
                 &lt;/head>

                 &lt;body>

                  <goat-button size='lg' color='primary'>Click me</goat-button>

                 &lt;/body>
                 &lt;/html>`;
              </script>
            </goat-tab-panel>

            <goat-tab-panel>
              <goat-code-highlighter language='html' id='load-single-component-code' class='code-highlighter' />
              <script is:inline define:vars={{ site, envProps }}>
                document.getElementById('load-single-component-code').value = `<!DOCTYPE html>
                 &lt;html>
                 &lt;head>
                  <meta charset='utf-8'>
                  <meta name='viewport' content='width=device-width'>
                  <title>${site.title}</title>

                  <!-- include your custom theme variable values, view variable names at ${envProps.themeCss} -->
                  <!--link rel="stylesheet" href="/custom-theme.css"></link-->
                   &lt;script type='module'>
    import {GoatButton} from "https://cdn.jsdelivr.net/npm/@goatui/components@${envProps.version}/dist/components/goat-button.js";
    customElements.define('my-button', GoatButton);
 &lt;/script>

                      <style>
                    @import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:ital@0;1&family=IBM+Plex+Sans+Condensed:ital@0;1&family=IBM+Plex+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&family=IBM+Plex+Serif:ital@0;1&display=swap');
                    :root {
                      --font-family-base: 'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;
                    }
                  </style>
                 &lt;/head>

                <body>

                  <my-button size='lg' color='primary'>Click me</my-button>

                 &lt;/body>
                 &lt;/html>`;
              </script>
            </goat-tab-panel>
          </goat-tabs>
        </div>
      </div>

      <div class='section'>
        <goat-button color='primary' href='/components/' size='lg' variant='block' icon='arrow--right'>Browse
          Components
        </goat-button>
        <br />
        <goat-button color='secondary' href='/theme-creator/' size='lg' variant='block' icon='arrow--right'>Theme
          Creator
        </goat-button>
      </div>

    </goat-container>




  </div>

  <Footer />

  <script
    src='https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js'
    integrity='sha512-z4OUqw38qNLpn1libAN9BsoDx6nbNFio5lA6CuTp9NlK83b89hgyCVq+N5FdBJptINztxn1Z3SaKSKUS5UP60Q=='
    crossorigin='anonymous'
    referrerpolicy='no-referrer'
  ></script>

  <script is:inline>
    document.addEventListener('DOMContentLoaded', function() {
      anime({
        targets: '.banner-logo path',
        strokeDashoffset: [anime.setDashoffset, 0],
        easing: 'easeInOutSine',
        duration: 1500,
        delay: function(_el, i) {
          return i * 250;
        },
        direction: 'alternate',
        loop: false,
      });
      document.body.addEventListener('mousemove', evt => {
        document.querySelectorAll('.banner-logo .head').forEach(headPath => {
          headPath.style.transform = `rotate(${15 - (evt.clientY / document.body.clientHeight) * 60}deg)`;
          if ((evt.clientX / document.body.clientWidth) * 100 > 50) {
            document.querySelector('.banner-logo').style.transform = ' rotateY(180deg)';
          } else {
            document.querySelector('.banner-logo').style.transform = ' rotateY(0deg)';
          }
        });
      });

      document.querySelectorAll('.jumping-text').forEach((elm, index) => {

        setTimeout(() => {
          elm.classList.add('hover');
          setTimeout(function() {
            elm.classList.remove('hover');
          }, 1800);
        }, 1000 + (20 * index));


        elm.addEventListener('mouseover', () => {
          if (!elm.classList.contains('hover')) {
            elm.classList.add('hover');
            setTimeout(function() {
              elm.classList.remove('hover');
            }, 1800);
          }
        });


      });

      document.querySelector('.title').addEventListener('touchmove', (evt) => {
        // get the touch element
        const touch = evt.touches[0];

        // get the DOM element
        const elm = document.elementFromPoint(touch.clientX, touch.clientY);


        if (!elm.classList.contains('hover')) {
          elm.classList.add('hover');
          setTimeout(function() {
            elm.classList.remove('hover');
          }, 1800);
        }
      }, { passive: true });
    });
  </script>

</Layout>
