---
import Layout from '../../../layouts/Component.astro';
import getComponentDetails from '../../../_data/getComponentDetails.ts';
import ApiPanel from '../../../components/ApiPanel.astro';
import OverviewPanel from '../../../components/OverviewPanel.astro';
const componentDetails = getComponentDetails('goat-icon');

import UsageSection from './_sections/usage.astro';
import VariantsSection from './_sections/variants.astro';
import SizesSection from './_sections/sizes.astro';

const sections = [
  {
    'title': 'Usage',
    'Component': UsageSection,
  }, {
    'title': 'Color Variants',
    'Component': VariantsSection,
  }, {
    'title': 'Sizes',
    'Component': SizesSection,
  }];
---

<Layout title={componentDetails.metadata.name} description={componentDetails.metadata.description}>
  <goat-tabs class='page-tabs'>
    <goat-tabs-list>
      <goat-tab selected='true'>Overview</goat-tab>
      <goat-tab>Playground</goat-tab>
      <goat-tab>API</goat-tab>
    </goat-tabs-list>
    <goat-tab-panel>
      <OverviewPanel componentDetails={componentDetails} sections={sections} />
    </goat-tab-panel>
    <goat-tab-panel>
      <div class='playground-tab'>
        <div class='playground-container' id='playground-controller'>
          <div class='playground'>
            <div class='demo-area' id='demo-area'></div>
            <div class='demo-controls' id='demo-controls'>

              <goat-form-control label='Icon'>
                <goat-select id='comp-select' search='contains' placeholder='Select' clearable></goat-select>
              </goat-form-control>

              <goat-form-control label='Size'>
                <goat-input id='comp-size'></goat-input>
              </goat-form-control>
            </div>
          </div>
          <div class='code-editor-container'>
            <goat-code-editor class='code-editor no-border' theme='vs-dark'></goat-code-editor>
          </div>
        </div>
      </div>
    </goat-tab-panel>
    <goat-tab-panel>
      <ApiPanel componentDetails={componentDetails} />
    </goat-tab-panel>
  </goat-tabs>
</Layout>

<script is:inline>
  class Playground {

    constructor(elm) {
      this.elm = elm;
    }

    init() {
      const $codeEditor = this.elm.querySelector('.code-editor');
      const $demoArea = this.elm.querySelector('.demo-area');

      $codeEditor.value = `
    <goat-icon name='alarm' size='2rem'></goat-icon>
    `;
      $codeEditor.addEventListener('goat:change', (e) => {
        $demoArea.innerHTML = e.target.value;
      });
      $demoArea.innerHTML = $codeEditor.value;
    }

    populateDropdown(elm, prop, items, value) {
      elm.items = items.map((item) => {
        return {
          label: item,
          value: item,
        };
      });
      elm.value = value;
      elm.addEventListener('goat:change', (evt) => {
        this.updateProperty(prop, evt.detail.value);
      });
    }

    updateProperty(propertyName, propertyValue) {
      const $codeEditor = this.elm.querySelector('.code-editor');
      const $demoArea = this.elm.querySelector('.demo-area');
      if (propertyValue === '' || propertyValue === false) {
        $demoArea.children[0].removeAttribute(propertyName);
      } else {
        $demoArea.children[0].setAttribute(propertyName, propertyValue);
      }
      $codeEditor.value = $demoArea.innerHTML;
    }
  }


  const playground = new Playground(document.getElementById('playground-controller'));
  playground.init();

  const $dropDown = document.getElementById('comp-select');
  $dropDown.items = [];
  fetch('/assets/icons.json').then(res => res.json()).then(data => {
    $dropDown.items = data.map(item => {
      return {
        label: item.label,
        value: item.name,
        icon: item.name,
      };
    });
  });
  $dropDown.value = 'alarm';
  $dropDown.addEventListener('goat:change', function(evt) {
    playground.updateProperty('name', evt.detail.value);
  });

  const $size = document.getElementById('comp-size');
  $size.value = '2rem';
  $size.addEventListener('goat:change', function(evt) {
    playground.updateProperty('size', evt.target.value);
  });
</script>
