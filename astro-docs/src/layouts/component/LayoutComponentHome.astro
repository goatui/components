---
interface Props {
  componentDetails: any;
}

const { componentDetails, sections } = Astro.props;

import Layout from './LayoutComponentBase.astro';
import ComponentSectionNav from '../../components/ComponentSectionNav.astro';

const title = componentDetails.metadata.name;
const description = componentDetails.metadata.description;
---

<Layout componentDetails={componentDetails}>
  <goat-breadcrumb>
    {title != 'Overview' ? <goat-breadcrumb-item href="/components">Components</goat-breadcrumb-item> : ''}
    <goat-breadcrumb-item active>{title}</goat-breadcrumb-item>
  </goat-breadcrumb>

  <div class="comp-header">
    <goat-text class="comp-title heading-scrollable" type="heading" heading-size="6">{title}</goat-text>
    {componentDetails.metadata.category == 'Up coming' ? <goat-tag color="red">Work in progress</goat-tag> : ''}
  </div>

  <goat-text type="body" expressive set:html={componentDetails.metadata.overview ? componentDetails.metadata.overview : componentDetails.metadata.description} />

  <div style="margin-bottom: var(--spacing-09)">
    <goat-button size="xs" variant="light.simple" href={`/components/${componentDetails.tag.replace('goat-', '')}/api`} icon="arrow--up-right"> API Reference </goat-button>
  </div>

  <div class="component-overview-tab">
    <div class="component-content">
      {
        sections.map((section: any) => (
          <div id={`section-${section.title.toLowerCase().replaceAll(' ', '-').replaceAll('/', '-')}`} class="component-section">
            <goat-text class="heading-scrollable" type="heading" heading-size="4">
              {section.title}
            </goat-text>

            <section.Component />
          </div>
        ))
      }
    </div>
    <ComponentSectionNav sections={sections} />
  </div>
</Layout>
